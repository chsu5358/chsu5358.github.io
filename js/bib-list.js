





<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
  <link rel="dns-prefetch" href="https://assets-cdn.github.com">
  <link rel="dns-prefetch" href="https://avatars0.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars1.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars2.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars3.githubusercontent.com">
  <link rel="dns-prefetch" href="https://github-cloud.s3.amazonaws.com">
  <link rel="dns-prefetch" href="https://user-images.githubusercontent.com/">



  <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/frameworks-7db951ed87f8f6cbd3a9e89c294e300cf23c1a83ad7ae64c70b8f99b21031340.css" integrity="sha256-fblR7Yf49svTqeicKU4wDPI8GoOteuZMcLj5myEDE0A=" media="all" rel="stylesheet" />
  <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/github-4b2158409cc56f58dafd534ae676475b1bfe7cb057c415e2c5984e3c13b041e5.css" integrity="sha256-SyFYQJzFb1ja/VNK5nZHWxv+fLBXxBXixZhOPBOwQeU=" media="all" rel="stylesheet" />
  
  
  
  

  <meta name="viewport" content="width=device-width">
  
  <title>bib-publication-list/bib-list.js at master Â· vkaravir/bib-publication-list</title>
  <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
  <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
  <meta property="fb:app_id" content="1401488693436528">

    
    <meta content="https://avatars0.githubusercontent.com/u/163030?v=4&amp;s=400" property="og:image" /><meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="vkaravir/bib-publication-list" property="og:title" /><meta content="https://github.com/vkaravir/bib-publication-list" property="og:url" /><meta content="bib-publication-list - Interactive publications lists with JavaScript + Bibtex" property="og:description" />

  <link rel="assets" href="https://assets-cdn.github.com/">
  <link rel="web-socket" href="wss://live.github.com/_sockets/VjI6MTkyNjgxNDkxOjVjNjNlOTgxMzJkYmYzNWM3YzRlMWNkMjlmZDMwMGZkYmUxZmU1NTAyOTBhMjdiMzJlYmQ3MGQzZDU3MTQ1M2Y=--5cced2e1f2938f79eaa80bad8bdab933f0d34e08">
  <meta name="pjax-timeout" content="1000">
  <link rel="sudo-modal" href="/sessions/sudo_modal">
  <meta name="request-id" content="E31D:4AE2:3B65B4C:609462D:59AF8D65" data-pjax-transient>
  

  <meta name="selected-link" value="repo_source" data-pjax-transient>

  <meta name="google-site-verification" content="KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU">
<meta name="google-site-verification" content="ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA">
    <meta name="google-analytics" content="UA-3769691-2">

<meta content="collector.githubapp.com" name="octolytics-host" /><meta content="github" name="octolytics-app-id" /><meta content="https://collector.githubapp.com/github-external/browser_event" name="octolytics-event-url" /><meta content="E31D:4AE2:3B65B4C:609462D:59AF8D65" name="octolytics-dimension-request_id" /><meta content="iad" name="octolytics-dimension-region_edge" /><meta content="iad" name="octolytics-dimension-region_render" /><meta content="25943986" name="octolytics-actor-id" /><meta content="chsu5358" name="octolytics-actor-login" /><meta content="e5c90d34184b53b0cbbc8835dfa9ef7cd4447ebaac5c7ab00838897a88ffa8b6" name="octolytics-actor-hash" />
<meta content="/&lt;user-name&gt;/&lt;repo-name&gt;/blob/show" data-pjax-transient="true" name="analytics-location" />




  <meta class="js-ga-set" name="dimension1" content="Logged In">


  

      <meta name="hostname" content="github.com">
  <meta name="user-login" content="chsu5358">

      <meta name="expected-hostname" content="github.com">
    <meta name="js-proxy-site-detection-payload" content="YzY1ZTFjODM4ZGMwNzdhM2EzMzExZjc1MTczM2U4MmM3NDRiZmQyOGM2MjI1ODdhMzcwMTVlNTQyYTU5NzVhOXx7InJlbW90ZV9hZGRyZXNzIjoiMTI4LjExOS4xNTAuMjMyIiwicmVxdWVzdF9pZCI6IkUzMUQ6NEFFMjozQjY1QjRDOjYwOTQ2MkQ6NTlBRjhENjUiLCJ0aW1lc3RhbXAiOjE1MDQ2NzcyMjIsImhvc3QiOiJnaXRodWIuY29tIn0=">

    <meta name="enabled-features" content="UNIVERSE_BANNER">

  <meta name="html-safe-nonce" content="7b24093cf8fa24d5c51cf8ff06b5d8134a80c0bc">

  <meta http-equiv="x-pjax-version" content="7f43de23603462da980a81f912c2e93e">
  

      <link href="https://github.com/vkaravir/bib-publication-list/commits/master.atom" rel="alternate" title="Recent Commits to bib-publication-list:master" type="application/atom+xml">

  <meta name="description" content="bib-publication-list - Interactive publications lists with JavaScript + Bibtex">
  <meta name="go-import" content="github.com/vkaravir/bib-publication-list git https://github.com/vkaravir/bib-publication-list.git">

  <meta content="163030" name="octolytics-dimension-user_id" /><meta content="vkaravir" name="octolytics-dimension-user_login" /><meta content="550841" name="octolytics-dimension-repository_id" /><meta content="vkaravir/bib-publication-list" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="550841" name="octolytics-dimension-repository_network_root_id" /><meta content="vkaravir/bib-publication-list" name="octolytics-dimension-repository_network_root_nwo" /><meta content="false" name="octolytics-dimension-repository_explore_github_marketplace_ci_cta_shown" />


    <link rel="canonical" href="https://github.com/vkaravir/bib-publication-list/blob/master/build/bib-list.js" data-pjax-transient>


  <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">

  <meta name="browser-errors-url" content="https://api.github.com/_private/browser/errors">

  <link rel="mask-icon" href="https://assets-cdn.github.com/pinned-octocat.svg" color="#000000">
  <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico">

<meta name="theme-color" content="#1e2327">


  <meta name="u2f-support" content="true">

  </head>

  <body class="logged-in env-production emoji-size-boost page-blob">
    

  <div class="position-relative js-header-wrapper ">
    <a href="#start-of-content" tabindex="1" class="bg-black text-white p-3 show-on-focus js-skip-to-content">Skip to content</a>
    <div id="js-pjax-loader-bar" class="pjax-loader-bar"><div class="progress"></div></div>

    
    
    



        
<header class="Header  f5" role="banner">
  <div class="d-flex px-3 flex-justify-between container-lg">
    <div class="d-flex flex-justify-between">
      <a class="header-logo-invertocat" href="https://github.com/" data-hotkey="g d" aria-label="Homepage" data-ga-click="Header, go to dashboard, icon:logo">
  <svg aria-hidden="true" class="octicon octicon-mark-github" height="32" version="1.1" viewBox="0 0 16 16" width="32"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>
</a>


    </div>

    <div class="HeaderMenu d-flex flex-justify-between flex-auto">
      <div class="d-flex">
            <div class="">
              <div class="header-search scoped-search site-scoped-search js-site-search" role="search">
  <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/vkaravir/bib-publication-list/search" class="js-site-search-form" data-scoped-search-url="/vkaravir/bib-publication-list/search" data-unscoped-search-url="/search" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
    <label class="form-control header-search-wrapper js-chromeless-input-container">
        <a href="/vkaravir/bib-publication-list/blob/master/build/bib-list.js" class="header-search-scope no-underline">This repository</a>
      <input type="text"
        class="form-control header-search-input js-site-search-focus js-site-search-field is-clearable"
        data-hotkey="s"
        name="q"
        value=""
        placeholder="Search"
        aria-label="Search this repository"
        data-unscoped-placeholder="Search GitHub"
        data-scoped-placeholder="Search"
        autocapitalize="off">
        <input type="hidden" class="js-site-search-type-field" name="type" >
    </label>
</form></div>

            </div>

          <ul class="d-flex pl-2 flex-items-center text-bold list-style-none" role="navigation">
            <li>
              <a href="/pulls" aria-label="Pull requests you created" class="js-selected-navigation-item HeaderNavlink px-2" data-ga-click="Header, click, Nav menu - item:pulls context:user" data-hotkey="g p" data-selected-links="/pulls /pulls/assigned /pulls/mentioned /pulls">
                Pull requests
</a>            </li>
            <li>
              <a href="/issues" aria-label="Issues you created" class="js-selected-navigation-item HeaderNavlink px-2" data-ga-click="Header, click, Nav menu - item:issues context:user" data-hotkey="g i" data-selected-links="/issues /issues/assigned /issues/mentioned /issues">
                Issues
</a>            </li>
                <li>
                  <a href="/marketplace" class="js-selected-navigation-item HeaderNavlink px-2" data-ga-click="Header, click, Nav menu - item:marketplace context:user" data-selected-links=" /marketplace">
                    Marketplace
</a>                </li>
            <li>
              <a href="/explore" class="js-selected-navigation-item HeaderNavlink px-2" data-ga-click="Header, click, Nav menu - item:explore" data-selected-links="/explore /trending /trending/developers /integrations /integrations/feature/code /integrations/feature/collaborate /integrations/feature/ship showcases showcases_search showcases_landing /explore">
                Explore
</a>            </li>
          </ul>
      </div>

      <div class="d-flex">
        
<ul class="user-nav d-flex flex-items-center list-style-none" id="user-links">
  <li class="dropdown js-menu-container js-header-notifications">
    <span class="d-inline-block  px-2">
      

    </span>
  </li>

  <li class="dropdown js-menu-container">
    <a class="HeaderNavlink tooltipped tooltipped-s js-menu-target d-flex px-2 flex-items-center" href="/new"
       aria-label="Create newâ¦"
       aria-expanded="false"
       aria-haspopup="true"
       data-ga-click="Header, create new, icon:add">
      <svg aria-hidden="true" class="octicon octicon-plus float-left" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 9H7v5H5V9H0V7h5V2h2v5h5z"/></svg>
      <span class="dropdown-caret mt-1"></span>
    </a>

    <div class="dropdown-menu-content js-menu-content">
      <ul class="dropdown-menu dropdown-menu-sw">
        
<a class="dropdown-item" href="/new" data-ga-click="Header, create new repository">
  New repository
</a>

  <a class="dropdown-item" href="/new/import" data-ga-click="Header, import a repository">
    Import repository
  </a>

<a class="dropdown-item" href="https://gist.github.com/" data-ga-click="Header, create new gist">
  New gist
</a>

  <a class="dropdown-item" href="/organizations/new" data-ga-click="Header, create new organization">
    New organization
  </a>



  <div class="dropdown-divider"></div>
  <div class="dropdown-header">
    <span title="vkaravir/bib-publication-list">This repository</span>
  </div>
    <a class="dropdown-item" href="/vkaravir/bib-publication-list/issues/new" data-ga-click="Header, create new issue">
      New issue
    </a>

      </ul>
    </div>
  </li>

  <li class="dropdown js-menu-container">

    <details class="dropdown-details d-flex pl-2 flex-items-center">
      <summary class="HeaderNavlink name"
        aria-label="View profile and more"
        data-ga-click="Header, show menu, icon:avatar">
        <img alt="@chsu5358" class="avatar" src="https://avatars2.githubusercontent.com/u/25943986?v=4&amp;s=40" height="20" width="20">
        <span class="dropdown-caret"></span>
      </summary>

      <ul class="dropdown-menu dropdown-menu-sw">
        <li class="dropdown-header header-nav-current-user css-truncate">
          Signed in as <strong class="css-truncate-target">chsu5358</strong>
        </li>

        <li class="dropdown-divider"></li>

        <li><a class="dropdown-item" href="/chsu5358" data-ga-click="Header, go to profile, text:your profile">
          Your profile
        </a></li>
        <li><a class="dropdown-item" href="/chsu5358?tab=stars" data-ga-click="Header, go to starred repos, text:your stars">
          Your stars
        </a></li>
          <li><a class="dropdown-item" href="https://gist.github.com/" data-ga-click="Header, your gists, text:your gists">Your Gists</a></li>

        <li class="dropdown-divider"></li>

        <li><a class="dropdown-item" href="https://help.github.com" data-ga-click="Header, go to help, text:help">
          Help
        </a></li>

        <li><a class="dropdown-item" href="/settings/profile" data-ga-click="Header, go to settings, icon:settings">
          Settings
        </a></li>

        <li><!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/logout" class="logout-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="8oiBHg+IwNPs1ZZ2pZbJRIKX31L+efXyAtpM0e1/t+PnuZ1aBvytF303c1rjrO3/47tE3NpRwVjPCzxlIXkLAg==" /></div>
          <button type="submit" class="dropdown-item dropdown-signout" data-ga-click="Header, sign out, icon:logout">
            Sign out
          </button>
        </form></li>
      </ul>
    </details>
  </li>
</ul>


        <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/logout" class="sr-only right-0" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="iBCY/g0jcUo35PkFHFk78y+m549voGoyGhbxHCAQ2KSdIYS6BFccjqYGHClaYx9ITop8AUuIXpjXx4Go7BZkRQ==" /></div>
          <button type="submit" class="dropdown-item dropdown-signout" data-ga-click="Header, sign out, icon:logout">
            Sign out
          </button>
</form>      </div>
    </div>
  </div>
</header>


      

  </div>

  <div id="start-of-content" class="show-on-focus"></div>

    <div id="js-flash-container">
</div>



  <div role="main">
        <div itemscope itemtype="http://schema.org/SoftwareSourceCode">
    <div id="js-repo-pjax-container" data-pjax-container>
      





    <div class="pagehead repohead instapaper_ignore readability-menu experiment-repo-nav">
      <div class="container repohead-details-container">

        <ul class="pagehead-actions">
  <li>
        <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="+E1SZzmydHUgFnzRZIrBkRuoCiRJSEohCJISKmvNHIckIiN/ZMUSHYF1KgHpgNtAxjMgPX+RAUHIv22RgBHSdQ==" /></div>      <input class="form-control" id="repository_id" name="repository_id" type="hidden" value="550841" />

        <div class="select-menu js-menu-container js-select-menu">
          <a href="/vkaravir/bib-publication-list/subscription"
            class="btn btn-sm btn-with-count select-menu-button js-menu-target"
            role="button"
            aria-haspopup="true"
            aria-expanded="false"
            aria-label="Toggle repository notifications menu"
            data-ga-click="Repository, click Watch settings, action:blob#show">
            <span class="js-select-button">
                <svg aria-hidden="true" class="octicon octicon-eye" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                Watch
            </span>
          </a>
            <a class="social-count js-social-count"
              href="/vkaravir/bib-publication-list/watchers"
              aria-label="10 users are watching this repository">
              10
            </a>

        <div class="select-menu-modal-holder">
          <div class="select-menu-modal subscription-menu-modal js-menu-content">
            <div class="select-menu-header js-navigation-enable" tabindex="-1">
              <svg aria-label="Close" class="octicon octicon-x js-menu-close" height="16" role="img" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
              <span class="select-menu-title">Notifications</span>
            </div>

              <div class="select-menu-list js-navigation-container" role="menu">

                <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
                  <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
                  <div class="select-menu-item-text">
                    <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                    <span class="select-menu-item-heading">Not watching</span>
                    <span class="description">Be notified when participating or @mentioned.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg aria-hidden="true" class="octicon octicon-eye" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                      Watch
                    </span>
                  </div>
                </div>

                <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
                  <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
                  <div class="select-menu-item-text">
                    <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                    <span class="select-menu-item-heading">Watching</span>
                    <span class="description">Be notified of all conversations.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg aria-hidden="true" class="octicon octicon-eye" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                        Unwatch
                    </span>
                  </div>
                </div>

                <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
                  <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
                  <div class="select-menu-item-text">
                    <input id="do_ignore" name="do" type="radio" value="ignore" />
                    <span class="select-menu-item-heading">Ignoring</span>
                    <span class="description">Never be notified.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg aria-hidden="true" class="octicon octicon-mute" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8 2.81v10.38c0 .67-.81 1-1.28.53L3 10H1c-.55 0-1-.45-1-1V7c0-.55.45-1 1-1h2l3.72-3.72C7.19 1.81 8 2.14 8 2.81zm7.53 3.22l-1.06-1.06-1.97 1.97-1.97-1.97-1.06 1.06L11.44 8 9.47 9.97l1.06 1.06 1.97-1.97 1.97 1.97 1.06-1.06L13.56 8l1.97-1.97z"/></svg>
                        Stop ignoring
                    </span>
                  </div>
                </div>

              </div>

            </div>
          </div>
        </div>
</form>
  </li>

  <li>
    
  <div class="js-toggler-container js-social-container starring-container ">
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/vkaravir/bib-publication-list/unstar" class="starred" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="Z2My34Wf1XkzDiRbWzHjtbRl1vWBq4D7T7uKL0fLYO66YYxqOVuyAzB394LLjB1GU+0hE35+AcKcB3v5XT2J3w==" /></div>
      <button
        type="submit"
        class="btn btn-sm btn-with-count js-toggler-target"
        aria-label="Unstar this repository" title="Unstar vkaravir/bib-publication-list"
        data-ga-click="Repository, click unstar button, action:blob#show; text:Unstar">
        <svg aria-hidden="true" class="octicon octicon-star" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"/></svg>
        Unstar
      </button>
        <a class="social-count js-social-count" href="/vkaravir/bib-publication-list/stargazers"
           aria-label="78 users starred this repository">
          78
        </a>
</form>
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/vkaravir/bib-publication-list/star" class="unstarred" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="krqgdpeP63kBahgB/NbpJBAqtlgbvZWOxAVsyTXj+H7gztjaaitQVOg1S7w6nihJlrLrvF9qdoAaH8MXpqBIdg==" /></div>
      <button
        type="submit"
        class="btn btn-sm btn-with-count js-toggler-target"
        aria-label="Star this repository" title="Star vkaravir/bib-publication-list"
        data-ga-click="Repository, click star button, action:blob#show; text:Star">
        <svg aria-hidden="true" class="octicon octicon-star" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"/></svg>
        Star
      </button>
        <a class="social-count js-social-count" href="/vkaravir/bib-publication-list/stargazers"
           aria-label="78 users starred this repository">
          78
        </a>
</form>  </div>

  </li>

  <li>
          <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/vkaravir/bib-publication-list/fork" class="btn-with-count" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="qVPEAQA3GVDJ68aM+zmLNhqKlsy1iM8nCIfb6R8d2vSCpCIJ9wuAM92T0H3OJs9CSdKOhgt5D40v0dLfMRiw1w==" /></div>
            <button
                type="submit"
                class="btn btn-sm btn-with-count"
                data-ga-click="Repository, show fork modal, action:blob#show; text:Fork"
                title="Fork your own copy of vkaravir/bib-publication-list to your account"
                aria-label="Fork your own copy of vkaravir/bib-publication-list to your account">
              <svg aria-hidden="true" class="octicon octicon-repo-forked" height="16" version="1.1" viewBox="0 0 10 16" width="10"><path fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
              Fork
            </button>
</form>
    <a href="/vkaravir/bib-publication-list/network" class="social-count"
       aria-label="38 users forked this repository">
      38
    </a>
  </li>
</ul>

        <h1 class="public ">
  <svg aria-hidden="true" class="octicon octicon-repo" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
  <span class="author" itemprop="author"><a href="/vkaravir" class="url fn" rel="author">vkaravir</a></span><!--
--><span class="path-divider">/</span><!--
--><strong itemprop="name"><a href="/vkaravir/bib-publication-list" data-pjax="#js-repo-pjax-container">bib-publication-list</a></strong>

</h1>

      </div>
      <div class="container">
        
<nav class="reponav js-repo-nav js-sidenav-container-pjax"
     itemscope
     itemtype="http://schema.org/BreadcrumbList"
     role="navigation"
     data-pjax="#js-repo-pjax-container">

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a href="/vkaravir/bib-publication-list" class="js-selected-navigation-item selected reponav-item" data-hotkey="g c" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /vkaravir/bib-publication-list" itemprop="url">
      <svg aria-hidden="true" class="octicon octicon-code" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z"/></svg>
      <span itemprop="name">Code</span>
      <meta itemprop="position" content="1">
</a>  </span>

    <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
      <a href="/vkaravir/bib-publication-list/issues" class="js-selected-navigation-item reponav-item" data-hotkey="g i" data-selected-links="repo_issues repo_labels repo_milestones /vkaravir/bib-publication-list/issues" itemprop="url">
        <svg aria-hidden="true" class="octicon octicon-issue-opened" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"/></svg>
        <span itemprop="name">Issues</span>
        <span class="Counter">5</span>
        <meta itemprop="position" content="2">
</a>    </span>

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a href="/vkaravir/bib-publication-list/pulls" class="js-selected-navigation-item reponav-item" data-hotkey="g p" data-selected-links="repo_pulls /vkaravir/bib-publication-list/pulls" itemprop="url">
      <svg aria-hidden="true" class="octicon octicon-git-pull-request" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
      <span itemprop="name">Pull requests</span>
      <span class="Counter">0</span>
      <meta itemprop="position" content="3">
</a>  </span>

    <a href="/vkaravir/bib-publication-list/projects" class="js-selected-navigation-item reponav-item" data-selected-links="repo_projects new_repo_project repo_project /vkaravir/bib-publication-list/projects">
      <svg aria-hidden="true" class="octicon octicon-project" height="16" version="1.1" viewBox="0 0 15 16" width="15"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1z"/></svg>
      Projects
      <span class="Counter" >0</span>
</a>
    <a href="/vkaravir/bib-publication-list/wiki" class="js-selected-navigation-item reponav-item" data-hotkey="g w" data-selected-links="repo_wiki /vkaravir/bib-publication-list/wiki">
      <svg aria-hidden="true" class="octicon octicon-book" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M3 5h4v1H3V5zm0 3h4V7H3v1zm0 2h4V9H3v1zm11-5h-4v1h4V5zm0 2h-4v1h4V7zm0 2h-4v1h4V9zm2-6v9c0 .55-.45 1-1 1H9.5l-1 1-1-1H2c-.55 0-1-.45-1-1V3c0-.55.45-1 1-1h5.5l1 1 1-1H15c.55 0 1 .45 1 1zm-8 .5L7.5 3H2v9h6V3.5zm7-.5H9.5l-.5.5V12h6V3z"/></svg>
      Wiki
</a>

    <div class="reponav-dropdown js-menu-container">
      <button type="button" class="btn-link reponav-item reponav-dropdown js-menu-target " data-no-toggle aria-expanded="false" aria-haspopup="true">
        Insights
        <svg aria-hidden="true" class="octicon octicon-triangle-down v-align-middle text-gray" height="11" version="1.1" viewBox="0 0 12 16" width="8"><path fill-rule="evenodd" d="M0 5l6 6 6-6z"/></svg>
      </button>
      <div class="dropdown-menu-content js-menu-content">
        <div class="dropdown-menu dropdown-menu-sw">
          <a class="dropdown-item" href="/vkaravir/bib-publication-list/pulse" data-skip-pjax>
            <svg aria-hidden="true" class="octicon octicon-pulse" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M11.5 8L8.8 5.4 6.6 8.5 5.5 1.6 2.38 8H0v2h3.6l.9-1.8.9 5.4L9 8.5l1.6 1.5H14V8z"/></svg>
            Pulse
          </a>
          <a class="dropdown-item" href="/vkaravir/bib-publication-list/graphs" data-skip-pjax>
            <svg aria-hidden="true" class="octicon octicon-graph" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M16 14v1H0V0h1v14h15zM5 13H3V8h2v5zm4 0H7V3h2v10zm4 0h-2V6h2v7z"/></svg>
            Graphs
          </a>
        </div>
      </div>
    </div>
</nav>

      </div>
    </div>

<div class="container new-discussion-timeline experiment-repo-nav">
  <div class="repository-content">

    
  <a href="/vkaravir/bib-publication-list/blob/17d3122649f377fd549effc02f17ab7417bc6135/build/bib-list.js" class="d-none js-permalink-shortcut" data-hotkey="y">Permalink</a>

  <!-- blob contrib key: blob_contributors:v21:f8e8ae3fde8043270df9787a069c97db -->

  <div class="file-navigation js-zeroclipboard-container">
    
<div class="select-menu branch-select-menu js-menu-container js-select-menu float-left">
  <button class=" btn btn-sm select-menu-button js-menu-target css-truncate" data-hotkey="w"
    
    type="button" aria-label="Switch branches or tags" aria-expanded="false" aria-haspopup="true">
      <i>Branch:</i>
      <span class="js-select-button css-truncate-target">master</span>
  </button>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax>

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <svg aria-label="Close" class="octicon octicon-x js-menu-close" height="16" role="img" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
        <span class="select-menu-title">Switch branches/tags</span>
      </div>

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="form-control js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" data-filter-placeholder="Filter branches/tags" class="js-select-menu-tab" role="tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" data-filter-placeholder="Find a tagâ¦" class="js-select-menu-tab" role="tab">Tags</a>
            </li>
          </ul>
        </div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches" role="menu">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <a class="select-menu-item js-navigation-item js-navigation-open selected"
               href="/vkaravir/bib-publication-list/blob/master/build/bib-list.js"
               data-name="master"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                master
              </span>
            </a>
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div>

    </div>
  </div>
</div>

    <div class="BtnGroup float-right">
      <a href="/vkaravir/bib-publication-list/find/master"
            class="js-pjax-capture-input btn btn-sm BtnGroup-item"
            data-pjax
            data-hotkey="t">
        Find file
      </a>
      <button aria-label="Copy file path to clipboard" class="js-zeroclipboard btn btn-sm BtnGroup-item tooltipped tooltipped-s" data-copied-hint="Copied!" type="button">Copy path</button>
    </div>
    <div class="breadcrumb js-zeroclipboard-target">
      <span class="repo-root js-repo-root"><span class="js-path-segment"><a href="/vkaravir/bib-publication-list"><span>bib-publication-list</span></a></span></span><span class="separator">/</span><span class="js-path-segment"><a href="/vkaravir/bib-publication-list/tree/master/build"><span>build</span></a></span><span class="separator">/</span><strong class="final-path">bib-list.js</strong>
    </div>
  </div>


  
  <div class="commit-tease">
      <span class="float-right">
        <a class="commit-tease-sha" href="/vkaravir/bib-publication-list/commit/17d3122649f377fd549effc02f17ab7417bc6135" data-pjax>
          17d3122
        </a>
        <relative-time datetime="2017-08-12T16:32:54Z">Aug 12, 2017</relative-time>
      </span>
      <div>
        <img alt="@vkaravir" class="avatar" height="20" src="https://avatars1.githubusercontent.com/u/163030?v=4&amp;s=40" width="20" />
        <a href="/vkaravir" class="user-mention" rel="author">vkaravir</a>
          <a href="/vkaravir/bib-publication-list/commit/17d3122649f377fd549effc02f17ab7417bc6135" class="message" data-pjax="true" title="Update built files">Update built files</a>
      </div>

    <div class="commit-tease-contributors">
      <button type="button" class="btn-link muted-link contributors-toggle" data-facebox="#blob_contributors_box">
        <strong>3</strong>
         contributors
      </button>
          <a class="avatar-link tooltipped tooltipped-s" aria-label="vkaravir" href="/vkaravir/bib-publication-list/commits/master/build/bib-list.js?author=vkaravir"><img alt="@vkaravir" class="avatar" height="20" src="https://avatars1.githubusercontent.com/u/163030?v=4&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="RohanAsmat" href="/vkaravir/bib-publication-list/commits/master/build/bib-list.js?author=RohanAsmat"><img alt="@RohanAsmat" class="avatar" height="20" src="https://avatars1.githubusercontent.com/u/7516846?v=4&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="blankenberg" href="/vkaravir/bib-publication-list/commits/master/build/bib-list.js?author=blankenberg"><img alt="@blankenberg" class="avatar" height="20" src="https://avatars3.githubusercontent.com/u/1231190?v=4&amp;s=40" width="20" /> </a>


    </div>

    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header" data-facebox-id="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list" data-facebox-id="facebox-description">
          <li class="facebox-user-list-item">
            <img alt="@vkaravir" height="24" src="https://avatars3.githubusercontent.com/u/163030?v=4&amp;s=48" width="24" />
            <a href="/vkaravir">vkaravir</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@RohanAsmat" height="24" src="https://avatars3.githubusercontent.com/u/7516846?v=4&amp;s=48" width="24" />
            <a href="/RohanAsmat">RohanAsmat</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@blankenberg" height="24" src="https://avatars1.githubusercontent.com/u/1231190?v=4&amp;s=48" width="24" />
            <a href="/blankenberg">blankenberg</a>
          </li>
      </ul>
    </div>
  </div>


  <div class="file">
    <div class="file-header">
  <div class="file-actions">

    <div class="BtnGroup">
      <a href="/vkaravir/bib-publication-list/raw/master/build/bib-list.js" class="btn btn-sm BtnGroup-item" id="raw-url">Raw</a>
        <a href="/vkaravir/bib-publication-list/blame/master/build/bib-list.js" class="btn btn-sm js-update-url-with-hash BtnGroup-item" data-hotkey="b">Blame</a>
      <a href="/vkaravir/bib-publication-list/commits/master/build/bib-list.js" class="btn btn-sm BtnGroup-item" rel="nofollow">History</a>
    </div>

        <a class="btn-octicon tooltipped tooltipped-nw"
           href="x-github-client://openRepo/https://github.com/vkaravir/bib-publication-list?branch=master&amp;filepath=build%2Fbib-list.js"
           aria-label="Open this file in GitHub Desktop"
           data-ga-click="Repository, open with desktop, type:mac">
            <svg aria-hidden="true" class="octicon octicon-device-desktop" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M15 2H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h5.34c-.25.61-.86 1.39-2.34 2h8c-1.48-.61-2.09-1.39-2.34-2H15c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm0 9H1V3h14v8z"/></svg>
        </a>

        <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/vkaravir/bib-publication-list/edit/master/build/bib-list.js" class="inline-form js-update-url-with-hash" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="LW9yQENciy6uf4TMSsgxsqP2/Z5mswiZU7PhLCbudVkRPpn9c5JSgwThnMp2FEgEdC5+4BBU5UXgmFKGwAlwqQ==" /></div>
          <button class="btn-octicon tooltipped tooltipped-nw" type="submit"
            aria-label="Fork this project and edit the file" data-hotkey="e" data-disable-with>
            <svg aria-hidden="true" class="octicon octicon-pencil" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M0 12v3h3l8-8-3-3-8 8zm3 2H1v-2h1v1h1v1zm10.3-9.3L12 6 9 3l1.3-1.3a.996.996 0 0 1 1.41 0l1.59 1.59c.39.39.39 1.02 0 1.41z"/></svg>
          </button>
</form>        <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/vkaravir/bib-publication-list/delete/master/build/bib-list.js" class="inline-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="xbKkp57veFHNMt0UiWOWeJgxZedC63/adEV9ekhyOedv6qy1W3dNnz+1l/lCFN2mtt1ND8OWhJa83ZPURD4DJw==" /></div>
          <button class="btn-octicon btn-octicon-danger tooltipped tooltipped-nw" type="submit"
            aria-label="Fork this project and delete the file" data-disable-with>
            <svg aria-hidden="true" class="octicon octicon-trashcan" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M11 2H9c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1H2c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1v9c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 12H3V5h1v8h1V5h1v8h1V5h1v8h1V5h1v9zm1-10H2V3h9v1z"/></svg>
          </button>
</form>  </div>

  <div class="file-info">
      2905 lines (2781 sloc)
      <span class="file-info-divider"></span>
    155 KB
  </div>
</div>

    

  <div itemprop="text" class="blob-wrapper data type-javascript">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span>!*</span></td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Javascript BibTex Parser v0.1</span></td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Copyright (c) 2008 Simon Fraser University</span></td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @author Steve Hannah &lt;shannah at sfu dot ca&gt;</span></td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * </span></td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * License:</span></td>
      </tr>
      <tr>
        <td id="L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * </span></td>
      </tr>
      <tr>
        <td id="L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     This program is free software: you can redistribute it and/or modify</span></td>
      </tr>
      <tr>
        <td id="L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     it under the terms of the GNU General Public License as published by</span></td>
      </tr>
      <tr>
        <td id="L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="LC11" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     the Free Software Foundation, either version 3 of the License, or</span></td>
      </tr>
      <tr>
        <td id="L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="LC12" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     (at your option) any later version.</span></td>
      </tr>
      <tr>
        <td id="L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="LC13" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * </span></td>
      </tr>
      <tr>
        <td id="L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="LC14" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     This program is distributed in the hope that it will be useful,</span></td>
      </tr>
      <tr>
        <td id="L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="LC15" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     but WITHOUT ANY WARRANTY; without even the implied warranty of</span></td>
      </tr>
      <tr>
        <td id="L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="LC16" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></td>
      </tr>
      <tr>
        <td id="L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="LC17" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     GNU General Public License for more details.</span></td>
      </tr>
      <tr>
        <td id="L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="LC18" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * </span></td>
      </tr>
      <tr>
        <td id="L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="LC19" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     You should have received a copy of the GNU General Public License</span></td>
      </tr>
      <tr>
        <td id="L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="LC20" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></td>
      </tr>
      <tr>
        <td id="L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="LC21" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="LC22" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="LC23" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Credits:</span></td>
      </tr>
      <tr>
        <td id="L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="LC24" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="LC25" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * This library is a port of the PEAR Structures_BibTex parser written</span></td>
      </tr>
      <tr>
        <td id="L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="LC26" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * in PHP (http://pear.php.net/package/Structures_BibTex).</span></td>
      </tr>
      <tr>
        <td id="L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="LC27" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="LC28" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * In order to make porting the parser into javascript easier, I have made</span></td>
      </tr>
      <tr>
        <td id="L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="LC29" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * use of many phpjs functions, which are distributed here under the MIT License:</span></td>
      </tr>
      <tr>
        <td id="L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="LC30" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="LC31" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * </span></td>
      </tr>
      <tr>
        <td id="L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="LC32" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * More info at: http://kevin.vanzonneveld.net/techblog/category/php2js</span></td>
      </tr>
      <tr>
        <td id="L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="LC33" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * </span></td>
      </tr>
      <tr>
        <td id="L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="LC34" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * php.js is copyright 2008 Kevin van Zonneveld.</span></td>
      </tr>
      <tr>
        <td id="L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="LC35" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * </span></td>
      </tr>
      <tr>
        <td id="L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="LC36" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Portions copyright Ates Goral (http://magnetiq.com), Legaev Andrey,</span></td>
      </tr>
      <tr>
        <td id="L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="LC37" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * _argos, Jonas Raoni Soares Silva (http://www.jsfromhell.com),</span></td>
      </tr>
      <tr>
        <td id="L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="LC38" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Webtoolkit.info (http://www.webtoolkit.info/), Carlos R. L. Rodrigues, Ash</span></td>
      </tr>
      <tr>
        <td id="L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="LC39" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Searle (http://hexmen.com/blog/), Tyler Akins (http://rumkin.com), mdsjack</span></td>
      </tr>
      <tr>
        <td id="L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="LC40" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * (http://www.mdsjack.bo.it), Alexander Ermolaev</span></td>
      </tr>
      <tr>
        <td id="L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="LC41" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * (http://snippets.dzone.com/user/AlexanderErmolaev), Andrea Giammarchi</span></td>
      </tr>
      <tr>
        <td id="L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="LC42" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * (http://webreflection.blogspot.com), Bayron Guevara, Cord, David, Karol</span></td>
      </tr>
      <tr>
        <td id="L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="LC43" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Kowalski, Leslie Hoare, Lincoln Ramsay, Mick@el, Nick Callen, Peter-Paul</span></td>
      </tr>
      <tr>
        <td id="L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="LC44" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Koch (http://www.quirksmode.org/js/beat.html), Philippe Baumann, Steve</span></td>
      </tr>
      <tr>
        <td id="L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="LC45" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Clay, booeyOH</span></td>
      </tr>
      <tr>
        <td id="L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="LC46" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * </span></td>
      </tr>
      <tr>
        <td id="L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="LC47" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Licensed under the MIT (MIT-LICENSE.txt) license.</span></td>
      </tr>
      <tr>
        <td id="L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="LC48" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * </span></td>
      </tr>
      <tr>
        <td id="L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="LC49" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Permission is hereby granted, free of charge, to any person obtaining a</span></td>
      </tr>
      <tr>
        <td id="L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="LC50" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * copy of this software and associated documentation files (the</span></td>
      </tr>
      <tr>
        <td id="L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="LC51" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &quot;Software&quot;), to deal in the Software without restriction, including</span></td>
      </tr>
      <tr>
        <td id="L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="LC52" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * without limitation the rights to use, copy, modify, merge, publish,</span></td>
      </tr>
      <tr>
        <td id="L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="LC53" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * distribute, sublicense, and/or sell copies of the Software, and to</span></td>
      </tr>
      <tr>
        <td id="L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="LC54" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * permit persons to whom the Software is furnished to do so, subject to</span></td>
      </tr>
      <tr>
        <td id="L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="LC55" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * the following conditions:</span></td>
      </tr>
      <tr>
        <td id="L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="LC56" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * </span></td>
      </tr>
      <tr>
        <td id="L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="LC57" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The above copyright notice and this permission notice shall be included</span></td>
      </tr>
      <tr>
        <td id="L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="LC58" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * in all copies or substantial portions of the Software.</span></td>
      </tr>
      <tr>
        <td id="L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="LC59" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * </span></td>
      </tr>
      <tr>
        <td id="L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="LC60" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS</span></td>
      </tr>
      <tr>
        <td id="L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="LC61" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF</span></td>
      </tr>
      <tr>
        <td id="L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="LC62" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.</span></td>
      </tr>
      <tr>
        <td id="L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="LC63" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * IN NO EVENT SHALL KEVIN VAN ZONNEVELD BE LIABLE FOR ANY CLAIM, DAMAGES </span></td>
      </tr>
      <tr>
        <td id="L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="LC64" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,</span></td>
      </tr>
      <tr>
        <td id="L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="LC65" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR </span></td>
      </tr>
      <tr>
        <td id="L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="LC66" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * OTHER DEALINGS IN THE SOFTWARE.</span></td>
      </tr>
      <tr>
        <td id="L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="LC67" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="LC68" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="LC69" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Synopsis:</span></td>
      </tr>
      <tr>
        <td id="L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="LC70" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * ----------</span></td>
      </tr>
      <tr>
        <td id="L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="LC71" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="LC72" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * This class provides the following functionality:</span></td>
      </tr>
      <tr>
        <td id="L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="LC73" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    1. Parse BibTex into a logical data javascript data structure.</span></td>
      </tr>
      <tr>
        <td id="L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="LC74" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    2. Output parsed BibTex entries as HTML, RTF, or BibTex.</span></td>
      </tr>
      <tr>
        <td id="L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="LC75" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="LC76" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *  </span></td>
      </tr>
      <tr>
        <td id="L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="LC77" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The following usage instructions have been copyed and adapted from the PHP instructions located</span></td>
      </tr>
      <tr>
        <td id="L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="LC78" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * at http://pear.php.net/manual/en/package.structures.structures-bibtex.intro.php</span></td>
      </tr>
      <tr>
        <td id="L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="LC79" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Introduction</span></td>
      </tr>
      <tr>
        <td id="L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="LC80" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * --------------</span></td>
      </tr>
      <tr>
        <td id="L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="LC81" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Overview</span></td>
      </tr>
      <tr>
        <td id="L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="LC82" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * ----------</span></td>
      </tr>
      <tr>
        <td id="L83" class="blob-num js-line-number" data-line-number="83"></td>
        <td id="LC83" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * This package provides methods to access information stored in a BibTex</span></td>
      </tr>
      <tr>
        <td id="L84" class="blob-num js-line-number" data-line-number="84"></td>
        <td id="LC84" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * file. During parsing it is possible to let the data be validated. In</span></td>
      </tr>
      <tr>
        <td id="L85" class="blob-num js-line-number" data-line-number="85"></td>
        <td id="LC85" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * addition. the creation of BibTex Strings as well as RTF Strings is also</span></td>
      </tr>
      <tr>
        <td id="L86" class="blob-num js-line-number" data-line-number="86"></td>
        <td id="LC86" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * supported. A few examples</span></td>
      </tr>
      <tr>
        <td id="L87" class="blob-num js-line-number" data-line-number="87"></td>
        <td id="LC87" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * </span></td>
      </tr>
      <tr>
        <td id="L88" class="blob-num js-line-number" data-line-number="88"></td>
        <td id="LC88" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Example 1. Loading a BibTex File and printing the parsed array</span></td>
      </tr>
      <tr>
        <td id="L89" class="blob-num js-line-number" data-line-number="89"></td>
        <td id="LC89" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;script src=&quot;BibTex.js&quot;&gt;&lt;/script&gt;</span></td>
      </tr>
      <tr>
        <td id="L90" class="blob-num js-line-number" data-line-number="90"></td>
        <td id="LC90" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;script&gt;</span></td>
      </tr>
      <tr>
        <td id="L91" class="blob-num js-line-number" data-line-number="91"></td>
        <td id="LC91" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * bibtex = new BibTex();</span></td>
      </tr>
      <tr>
        <td id="L92" class="blob-num js-line-number" data-line-number="92"></td>
        <td id="LC92" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * bibtex.content = content; // the bibtex content as a string</span></td>
      </tr>
      <tr>
        <td id="L93" class="blob-num js-line-number" data-line-number="93"></td>
        <td id="LC93" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * </span></td>
      </tr>
      <tr>
        <td id="L94" class="blob-num js-line-number" data-line-number="94"></td>
        <td id="LC94" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * bibtex-&gt;parse();</span></td>
      </tr>
      <tr>
        <td id="L95" class="blob-num js-line-number" data-line-number="95"></td>
        <td id="LC95" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * alert(print_r($bibtex-&gt;data,true));</span></td>
      </tr>
      <tr>
        <td id="L96" class="blob-num js-line-number" data-line-number="96"></td>
        <td id="LC96" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;/script&gt;</span></td>
      </tr>
      <tr>
        <td id="L97" class="blob-num js-line-number" data-line-number="97"></td>
        <td id="LC97" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * </span></td>
      </tr>
      <tr>
        <td id="L98" class="blob-num js-line-number" data-line-number="98"></td>
        <td id="LC98" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * </span></td>
      </tr>
      <tr>
        <td id="L99" class="blob-num js-line-number" data-line-number="99"></td>
        <td id="LC99" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Options</span></td>
      </tr>
      <tr>
        <td id="L100" class="blob-num js-line-number" data-line-number="100"></td>
        <td id="LC100" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * --------</span></td>
      </tr>
      <tr>
        <td id="L101" class="blob-num js-line-number" data-line-number="101"></td>
        <td id="LC101" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Options can be set either in the constructor or with the method</span></td>
      </tr>
      <tr>
        <td id="L102" class="blob-num js-line-number" data-line-number="102"></td>
        <td id="LC102" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * setOption(). When setting in the constructor the options are given in an</span></td>
      </tr>
      <tr>
        <td id="L103" class="blob-num js-line-number" data-line-number="103"></td>
        <td id="LC103" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * associative array. The options are:</span></td>
      </tr>
      <tr>
        <td id="L104" class="blob-num js-line-number" data-line-number="104"></td>
        <td id="LC104" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * </span></td>
      </tr>
      <tr>
        <td id="L105" class="blob-num js-line-number" data-line-number="105"></td>
        <td id="LC105" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * 	-	stripDelimiter (default: true) Stripping the delimiter surrounding the entries. </span></td>
      </tr>
      <tr>
        <td id="L106" class="blob-num js-line-number" data-line-number="106"></td>
        <td id="LC106" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * 	-	validate (default: true) Validation while parsing. </span></td>
      </tr>
      <tr>
        <td id="L107" class="blob-num js-line-number" data-line-number="107"></td>
        <td id="LC107" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * 	-	unwrap (default: false) Unwrapping entries while parsing. </span></td>
      </tr>
      <tr>
        <td id="L108" class="blob-num js-line-number" data-line-number="108"></td>
        <td id="LC108" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * 	-	wordWrapWidth (default: false) If set to a number higher one</span></td>
      </tr>
      <tr>
        <td id="L109" class="blob-num js-line-number" data-line-number="109"></td>
        <td id="LC109" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * 	    that the entries are wrapped after that amount of characters. </span></td>
      </tr>
      <tr>
        <td id="L110" class="blob-num js-line-number" data-line-number="110"></td>
        <td id="LC110" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * 	-	wordWrapBreak (default: \n) String used to break the line (attached to the line). </span></td>
      </tr>
      <tr>
        <td id="L111" class="blob-num js-line-number" data-line-number="111"></td>
        <td id="LC111" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * 	-	wordWrapCut (default: 0) If set to zero the line will we</span></td>
      </tr>
      <tr>
        <td id="L112" class="blob-num js-line-number" data-line-number="112"></td>
        <td id="LC112" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * 	    wrapped at the next possible space, if set to one the line will be</span></td>
      </tr>
      <tr>
        <td id="L113" class="blob-num js-line-number" data-line-number="113"></td>
        <td id="LC113" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * 	    wrapped exactly after the given amount of characters. </span></td>
      </tr>
      <tr>
        <td id="L114" class="blob-num js-line-number" data-line-number="114"></td>
        <td id="LC114" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * 	-	removeCurlyBraces (default: false) If set to true Curly Braces will be removed. </span></td>
      </tr>
      <tr>
        <td id="L115" class="blob-num js-line-number" data-line-number="115"></td>
        <td id="LC115" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * </span></td>
      </tr>
      <tr>
        <td id="L116" class="blob-num js-line-number" data-line-number="116"></td>
        <td id="LC116" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Example of setting options in the constructor:</span></td>
      </tr>
      <tr>
        <td id="L117" class="blob-num js-line-number" data-line-number="117"></td>
        <td id="LC117" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * </span></td>
      </tr>
      <tr>
        <td id="L118" class="blob-num js-line-number" data-line-number="118"></td>
        <td id="LC118" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Example 2. Setting options in the constructor</span></td>
      </tr>
      <tr>
        <td id="L119" class="blob-num js-line-number" data-line-number="119"></td>
        <td id="LC119" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * bibtex = new BibTex({&#39;validate&#39;:false, &#39;unwrap&#39;:true});</span></td>
      </tr>
      <tr>
        <td id="L120" class="blob-num js-line-number" data-line-number="120"></td>
        <td id="LC120" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * </span></td>
      </tr>
      <tr>
        <td id="L121" class="blob-num js-line-number" data-line-number="121"></td>
        <td id="LC121" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * </span></td>
      </tr>
      <tr>
        <td id="L122" class="blob-num js-line-number" data-line-number="122"></td>
        <td id="LC122" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Example of setting options using the method setOption():</span></td>
      </tr>
      <tr>
        <td id="L123" class="blob-num js-line-number" data-line-number="123"></td>
        <td id="LC123" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * </span></td>
      </tr>
      <tr>
        <td id="L124" class="blob-num js-line-number" data-line-number="124"></td>
        <td id="LC124" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Example 62-3. Setting options using setOption</span></td>
      </tr>
      <tr>
        <td id="L125" class="blob-num js-line-number" data-line-number="125"></td>
        <td id="LC125" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * bibtex = new BibTex();</span></td>
      </tr>
      <tr>
        <td id="L126" class="blob-num js-line-number" data-line-number="126"></td>
        <td id="LC126" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * bibtex.setOption(&#39;validate&#39;, false);</span></td>
      </tr>
      <tr>
        <td id="L127" class="blob-num js-line-number" data-line-number="127"></td>
        <td id="LC127" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * bibtex.setOption(&#39;unwrap&#39;, true);</span></td>
      </tr>
      <tr>
        <td id="L128" class="blob-num js-line-number" data-line-number="128"></td>
        <td id="LC128" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * </span></td>
      </tr>
      <tr>
        <td id="L129" class="blob-num js-line-number" data-line-number="129"></td>
        <td id="LC129" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Stored Data</span></td>
      </tr>
      <tr>
        <td id="L130" class="blob-num js-line-number" data-line-number="130"></td>
        <td id="LC130" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * ------------</span></td>
      </tr>
      <tr>
        <td id="L131" class="blob-num js-line-number" data-line-number="131"></td>
        <td id="LC131" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The data is stored in the class variable data. This is a a list where</span></td>
      </tr>
      <tr>
        <td id="L132" class="blob-num js-line-number" data-line-number="132"></td>
        <td id="LC132" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * each entry is a hash table representing one bibtex-entry. The keys of</span></td>
      </tr>
      <tr>
        <td id="L133" class="blob-num js-line-number" data-line-number="133"></td>
        <td id="LC133" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * the hash table correspond to the keys used in bibtex and the values are</span></td>
      </tr>
      <tr>
        <td id="L134" class="blob-num js-line-number" data-line-number="134"></td>
        <td id="LC134" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * the corresponding values. Some of these keys are:</span></td>
      </tr>
      <tr>
        <td id="L135" class="blob-num js-line-number" data-line-number="135"></td>
        <td id="LC135" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * </span></td>
      </tr>
      <tr>
        <td id="L136" class="blob-num js-line-number" data-line-number="136"></td>
        <td id="LC136" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * 	-	cite - The key used in a LaTeX source to do the citing. </span></td>
      </tr>
      <tr>
        <td id="L137" class="blob-num js-line-number" data-line-number="137"></td>
        <td id="LC137" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * 	-	entryType - The type of the entry, like techreport, book and so on. </span></td>
      </tr>
      <tr>
        <td id="L138" class="blob-num js-line-number" data-line-number="138"></td>
        <td id="LC138" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * 	-	author - One or more authors of the entry. This entry is also a</span></td>
      </tr>
      <tr>
        <td id="L139" class="blob-num js-line-number" data-line-number="139"></td>
        <td id="LC139" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * 	    list with hash tables representing the authors as entries. The</span></td>
      </tr>
      <tr>
        <td id="L140" class="blob-num js-line-number" data-line-number="140"></td>
        <td id="LC140" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * 	    author has table is explained later. </span></td>
      </tr>
      <tr>
        <td id="L141" class="blob-num js-line-number" data-line-number="141"></td>
        <td id="LC141" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * 	-	title - Title of the entry. </span></td>
      </tr>
      <tr>
        <td id="L142" class="blob-num js-line-number" data-line-number="142"></td>
        <td id="LC142" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * </span></td>
      </tr>
      <tr>
        <td id="L143" class="blob-num js-line-number" data-line-number="143"></td>
        <td id="LC143" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Author</span></td>
      </tr>
      <tr>
        <td id="L144" class="blob-num js-line-number" data-line-number="144"></td>
        <td id="LC144" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * ------</span></td>
      </tr>
      <tr>
        <td id="L145" class="blob-num js-line-number" data-line-number="145"></td>
        <td id="LC145" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * As described before the authors are stored in a list. Every entry</span></td>
      </tr>
      <tr>
        <td id="L146" class="blob-num js-line-number" data-line-number="146"></td>
        <td id="LC146" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * representing one author as a has table. The hash table consits of four</span></td>
      </tr>
      <tr>
        <td id="L147" class="blob-num js-line-number" data-line-number="147"></td>
        <td id="LC147" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * keys: first, von, last and jr. The keys are explained in the following</span></td>
      </tr>
      <tr>
        <td id="L148" class="blob-num js-line-number" data-line-number="148"></td>
        <td id="LC148" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * list:</span></td>
      </tr>
      <tr>
        <td id="L149" class="blob-num js-line-number" data-line-number="149"></td>
        <td id="LC149" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * </span></td>
      </tr>
      <tr>
        <td id="L150" class="blob-num js-line-number" data-line-number="150"></td>
        <td id="LC150" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * 	-	first - The first name of the author. </span></td>
      </tr>
      <tr>
        <td id="L151" class="blob-num js-line-number" data-line-number="151"></td>
        <td id="LC151" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * 	-	von - Some names have a &#39;von&#39; part in their name. This is usually a sign of nobleness. </span></td>
      </tr>
      <tr>
        <td id="L152" class="blob-num js-line-number" data-line-number="152"></td>
        <td id="LC152" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * 	-	last - The last name of the author. </span></td>
      </tr>
      <tr>
        <td id="L153" class="blob-num js-line-number" data-line-number="153"></td>
        <td id="LC153" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * 	-	jr - Sometimes a author is the son of his father and has the</span></td>
      </tr>
      <tr>
        <td id="L154" class="blob-num js-line-number" data-line-number="154"></td>
        <td id="LC154" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * 	    same name, then the value would be jr. The same is true for the</span></td>
      </tr>
      <tr>
        <td id="L155" class="blob-num js-line-number" data-line-number="155"></td>
        <td id="LC155" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * 	    value sen but vice versa. </span></td>
      </tr>
      <tr>
        <td id="L156" class="blob-num js-line-number" data-line-number="156"></td>
        <td id="LC156" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * </span></td>
      </tr>
      <tr>
        <td id="L157" class="blob-num js-line-number" data-line-number="157"></td>
        <td id="LC157" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Adding an entry</span></td>
      </tr>
      <tr>
        <td id="L158" class="blob-num js-line-number" data-line-number="158"></td>
        <td id="LC158" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * ----------------</span></td>
      </tr>
      <tr>
        <td id="L159" class="blob-num js-line-number" data-line-number="159"></td>
        <td id="LC159" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * To add an entry simply create a hash table with the needed keys and</span></td>
      </tr>
      <tr>
        <td id="L160" class="blob-num js-line-number" data-line-number="160"></td>
        <td id="LC160" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * values and call the method addEntry().</span></td>
      </tr>
      <tr>
        <td id="L161" class="blob-num js-line-number" data-line-number="161"></td>
        <td id="LC161" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Example 4. Adding an entry</span></td>
      </tr>
      <tr>
        <td id="L162" class="blob-num js-line-number" data-line-number="162"></td>
        <td id="LC162" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * bibtex                         = new BibTex();</span></td>
      </tr>
      <tr>
        <td id="L163" class="blob-num js-line-number" data-line-number="163"></td>
        <td id="LC163" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * var addarray                   = {};</span></td>
      </tr>
      <tr>
        <td id="L164" class="blob-num js-line-number" data-line-number="164"></td>
        <td id="LC164" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * addarray[&#39;entryType&#39;]          = &#39;Article&#39;;</span></td>
      </tr>
      <tr>
        <td id="L165" class="blob-num js-line-number" data-line-number="165"></td>
        <td id="LC165" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * addarray[&#39;cite&#39;]               = &#39;art2&#39;;</span></td>
      </tr>
      <tr>
        <td id="L166" class="blob-num js-line-number" data-line-number="166"></td>
        <td id="LC166" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * addarray[&#39;title&#39;]              = &#39;Titel of the Article&#39;;</span></td>
      </tr>
      <tr>
        <td id="L167" class="blob-num js-line-number" data-line-number="167"></td>
        <td id="LC167" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * addarray[&#39;author&#39;] = [];</span></td>
      </tr>
      <tr>
        <td id="L168" class="blob-num js-line-number" data-line-number="168"></td>
        <td id="LC168" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * addarray[&#39;author&#39;][0][&#39;first&#39;] = &#39;John&#39;;</span></td>
      </tr>
      <tr>
        <td id="L169" class="blob-num js-line-number" data-line-number="169"></td>
        <td id="LC169" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * addarray[&#39;author&#39;][0][&#39;last&#39;]  = &#39;Doe&#39;;</span></td>
      </tr>
      <tr>
        <td id="L170" class="blob-num js-line-number" data-line-number="170"></td>
        <td id="LC170" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * addarray[&#39;author&#39;][1][&#39;first&#39;] = &#39;Jane&#39;;</span></td>
      </tr>
      <tr>
        <td id="L171" class="blob-num js-line-number" data-line-number="171"></td>
        <td id="LC171" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * addarray[&#39;author&#39;][1][&#39;last&#39;]  = &#39;Doe&#39;;</span></td>
      </tr>
      <tr>
        <td id="L172" class="blob-num js-line-number" data-line-number="172"></td>
        <td id="LC172" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * bibtex.addEntry(addarray);</span></td>
      </tr>
      <tr>
        <td id="L173" class="blob-num js-line-number" data-line-number="173"></td>
        <td id="LC173" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L174" class="blob-num js-line-number" data-line-number="174"></td>
        <td id="LC174" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L175" class="blob-num js-line-number" data-line-number="175"></td>
        <td id="LC175" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> ------------BEGIN PHP FUNCTIONS -------------------------------------------------------------- //</span></td>
      </tr>
      <tr>
        <td id="L176" class="blob-num js-line-number" data-line-number="176"></td>
        <td id="LC176" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L177" class="blob-num js-line-number" data-line-number="177"></td>
        <td id="LC177" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> {{{ array</span></td>
      </tr>
      <tr>
        <td id="L178" class="blob-num js-line-number" data-line-number="178"></td>
        <td id="LC178" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">array</span>( ) {</td>
      </tr>
      <tr>
        <td id="L179" class="blob-num js-line-number" data-line-number="179"></td>
        <td id="LC179" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> #!#!#!#!# array::$descr1 does not contain valid &#39;array&#39; at line 258</span></td>
      </tr>
      <tr>
        <td id="L180" class="blob-num js-line-number" data-line-number="180"></td>
        <td id="LC180" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> </span></td>
      </tr>
      <tr>
        <td id="L181" class="blob-num js-line-number" data-line-number="181"></td>
        <td id="LC181" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +    discuss at: http://kevin.vanzonneveld.net/techblog/article/javascript_equivalent_for_phps_array/</span></td>
      </tr>
      <tr>
        <td id="L182" class="blob-num js-line-number" data-line-number="182"></td>
        <td id="LC182" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +       version: 805.1716</span></td>
      </tr>
      <tr>
        <td id="L183" class="blob-num js-line-number" data-line-number="183"></td>
        <td id="LC183" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +   original by: d3x</span></td>
      </tr>
      <tr>
        <td id="L184" class="blob-num js-line-number" data-line-number="184"></td>
        <td id="LC184" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     example 1: array(&#39;Kevin&#39;, &#39;van&#39;, &#39;Zonneveld&#39;);</span></td>
      </tr>
      <tr>
        <td id="L185" class="blob-num js-line-number" data-line-number="185"></td>
        <td id="LC185" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     returns 1: [&#39;Kevin&#39;, &#39;van&#39;, &#39;Zonneveld&#39;];</span></td>
      </tr>
      <tr>
        <td id="L186" class="blob-num js-line-number" data-line-number="186"></td>
        <td id="LC186" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L187" class="blob-num js-line-number" data-line-number="187"></td>
        <td id="LC187" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">slice</span>.<span class="pl-c1">call</span>(<span class="pl-c1">arguments</span>);</td>
      </tr>
      <tr>
        <td id="L188" class="blob-num js-line-number" data-line-number="188"></td>
        <td id="LC188" class="blob-code blob-code-inner js-file-line">}<span class="pl-c"><span class="pl-c">//</span> }}}</span></td>
      </tr>
      <tr>
        <td id="L189" class="blob-num js-line-number" data-line-number="189"></td>
        <td id="LC189" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L190" class="blob-num js-line-number" data-line-number="190"></td>
        <td id="LC190" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> {{{ array_key_exists</span></td>
      </tr>
      <tr>
        <td id="L191" class="blob-num js-line-number" data-line-number="191"></td>
        <td id="LC191" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">array_key_exists</span> ( <span class="pl-smi">key</span>, <span class="pl-smi">search</span> ) {</td>
      </tr>
      <tr>
        <td id="L192" class="blob-num js-line-number" data-line-number="192"></td>
        <td id="LC192" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Checks if the given key or index exists in the array</span></td>
      </tr>
      <tr>
        <td id="L193" class="blob-num js-line-number" data-line-number="193"></td>
        <td id="LC193" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> </span></td>
      </tr>
      <tr>
        <td id="L194" class="blob-num js-line-number" data-line-number="194"></td>
        <td id="LC194" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +    discuss at: http://kevin.vanzonneveld.net/techblog/article/javascript_equivalent_for_phps_array_key_exists/</span></td>
      </tr>
      <tr>
        <td id="L195" class="blob-num js-line-number" data-line-number="195"></td>
        <td id="LC195" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +       version: 804.1712</span></td>
      </tr>
      <tr>
        <td id="L196" class="blob-num js-line-number" data-line-number="196"></td>
        <td id="LC196" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)</span></td>
      </tr>
      <tr>
        <td id="L197" class="blob-num js-line-number" data-line-number="197"></td>
        <td id="LC197" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +   improved by: Felix Geisendoerfer (http://www.debuggable.com/felix)</span></td>
      </tr>
      <tr>
        <td id="L198" class="blob-num js-line-number" data-line-number="198"></td>
        <td id="LC198" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     example 1: array_key_exists(&#39;kevin&#39;, {&#39;kevin&#39;: &#39;van Zonneveld&#39;});</span></td>
      </tr>
      <tr>
        <td id="L199" class="blob-num js-line-number" data-line-number="199"></td>
        <td id="LC199" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     returns 1: true</span></td>
      </tr>
      <tr>
        <td id="L200" class="blob-num js-line-number" data-line-number="200"></td>
        <td id="LC200" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L201" class="blob-num js-line-number" data-line-number="201"></td>
        <td id="LC201" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> input sanitation</span></td>
      </tr>
      <tr>
        <td id="L202" class="blob-num js-line-number" data-line-number="202"></td>
        <td id="LC202" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span>( <span class="pl-k">!</span>search <span class="pl-k">||</span> (<span class="pl-smi">search</span>.<span class="pl-c1">constructor</span> <span class="pl-k">!==</span> <span class="pl-c1">Array</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">search</span>.<span class="pl-c1">constructor</span> <span class="pl-k">!==</span> <span class="pl-c1">Object</span>) ){</td>
      </tr>
      <tr>
        <td id="L203" class="blob-num js-line-number" data-line-number="203"></td>
        <td id="LC203" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L204" class="blob-num js-line-number" data-line-number="204"></td>
        <td id="LC204" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L205" class="blob-num js-line-number" data-line-number="205"></td>
        <td id="LC205" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L206" class="blob-num js-line-number" data-line-number="206"></td>
        <td id="LC206" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> key <span class="pl-k">in</span> search;</td>
      </tr>
      <tr>
        <td id="L207" class="blob-num js-line-number" data-line-number="207"></td>
        <td id="LC207" class="blob-code blob-code-inner js-file-line">}<span class="pl-c"><span class="pl-c">//</span> }}}// {{{ array_keys</span></td>
      </tr>
      <tr>
        <td id="L208" class="blob-num js-line-number" data-line-number="208"></td>
        <td id="LC208" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">array_keys</span>( <span class="pl-smi">input</span>, <span class="pl-smi">search_value</span>, <span class="pl-smi">strict</span> ) {</td>
      </tr>
      <tr>
        <td id="L209" class="blob-num js-line-number" data-line-number="209"></td>
        <td id="LC209" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Return all the keys of an array</span></td>
      </tr>
      <tr>
        <td id="L210" class="blob-num js-line-number" data-line-number="210"></td>
        <td id="LC210" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> </span></td>
      </tr>
      <tr>
        <td id="L211" class="blob-num js-line-number" data-line-number="211"></td>
        <td id="LC211" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +    discuss at: http://kevin.vanzonneveld.net/techblog/article/javascript_equivalent_for_phps_array_keys/</span></td>
      </tr>
      <tr>
        <td id="L212" class="blob-num js-line-number" data-line-number="212"></td>
        <td id="LC212" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +       version: 804.1712</span></td>
      </tr>
      <tr>
        <td id="L213" class="blob-num js-line-number" data-line-number="213"></td>
        <td id="LC213" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)</span></td>
      </tr>
      <tr>
        <td id="L214" class="blob-num js-line-number" data-line-number="214"></td>
        <td id="LC214" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     example 1: array_keys( {firstname: &#39;Kevin&#39;, surname: &#39;van Zonneveld&#39;} );</span></td>
      </tr>
      <tr>
        <td id="L215" class="blob-num js-line-number" data-line-number="215"></td>
        <td id="LC215" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     returns 1: {0: &#39;firstname&#39;, 1: &#39;surname&#39;}</span></td>
      </tr>
      <tr>
        <td id="L216" class="blob-num js-line-number" data-line-number="216"></td>
        <td id="LC216" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L217" class="blob-num js-line-number" data-line-number="217"></td>
        <td id="LC217" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> tmp_arr <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Array</span>(), strict <span class="pl-k">=</span> <span class="pl-k">!!</span>strict, include <span class="pl-k">=</span> <span class="pl-c1">true</span>, cnt <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L218" class="blob-num js-line-number" data-line-number="218"></td>
        <td id="LC218" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L219" class="blob-num js-line-number" data-line-number="219"></td>
        <td id="LC219" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( key <span class="pl-k">in</span> input ){</td>
      </tr>
      <tr>
        <td id="L220" class="blob-num js-line-number" data-line-number="220"></td>
        <td id="LC220" class="blob-code blob-code-inner js-file-line">        include <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L221" class="blob-num js-line-number" data-line-number="221"></td>
        <td id="LC221" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( search_value <span class="pl-k">!=</span> <span class="pl-c1">undefined</span> ) {</td>
      </tr>
      <tr>
        <td id="L222" class="blob-num js-line-number" data-line-number="222"></td>
        <td id="LC222" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span>( strict <span class="pl-k">&amp;&amp;</span> input[key] <span class="pl-k">!==</span> search_value ){</td>
      </tr>
      <tr>
        <td id="L223" class="blob-num js-line-number" data-line-number="223"></td>
        <td id="LC223" class="blob-code blob-code-inner js-file-line">                include <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L224" class="blob-num js-line-number" data-line-number="224"></td>
        <td id="LC224" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> <span class="pl-k">if</span>( input[key] <span class="pl-k">!=</span> search_value ){</td>
      </tr>
      <tr>
        <td id="L225" class="blob-num js-line-number" data-line-number="225"></td>
        <td id="LC225" class="blob-code blob-code-inner js-file-line">                include <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L226" class="blob-num js-line-number" data-line-number="226"></td>
        <td id="LC226" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L227" class="blob-num js-line-number" data-line-number="227"></td>
        <td id="LC227" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L228" class="blob-num js-line-number" data-line-number="228"></td>
        <td id="LC228" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L229" class="blob-num js-line-number" data-line-number="229"></td>
        <td id="LC229" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span>( include ) {</td>
      </tr>
      <tr>
        <td id="L230" class="blob-num js-line-number" data-line-number="230"></td>
        <td id="LC230" class="blob-code blob-code-inner js-file-line">            tmp_arr[cnt] <span class="pl-k">=</span> key;</td>
      </tr>
      <tr>
        <td id="L231" class="blob-num js-line-number" data-line-number="231"></td>
        <td id="LC231" class="blob-code blob-code-inner js-file-line">            cnt<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L232" class="blob-num js-line-number" data-line-number="232"></td>
        <td id="LC232" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L233" class="blob-num js-line-number" data-line-number="233"></td>
        <td id="LC233" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L234" class="blob-num js-line-number" data-line-number="234"></td>
        <td id="LC234" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L235" class="blob-num js-line-number" data-line-number="235"></td>
        <td id="LC235" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> tmp_arr;</td>
      </tr>
      <tr>
        <td id="L236" class="blob-num js-line-number" data-line-number="236"></td>
        <td id="LC236" class="blob-code blob-code-inner js-file-line">}<span class="pl-c"><span class="pl-c">//</span> }}}</span></td>
      </tr>
      <tr>
        <td id="L237" class="blob-num js-line-number" data-line-number="237"></td>
        <td id="LC237" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L238" class="blob-num js-line-number" data-line-number="238"></td>
        <td id="LC238" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> {{{ array_values</span></td>
      </tr>
      <tr>
        <td id="L239" class="blob-num js-line-number" data-line-number="239"></td>
        <td id="LC239" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">array_values</span>(<span class="pl-smi">input</span>) {</td>
      </tr>
      <tr>
        <td id="L240" class="blob-num js-line-number" data-line-number="240"></td>
        <td id="LC240" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span> From: http://phpjs.org/functions</span></td>
      </tr>
      <tr>
        <td id="L241" class="blob-num js-line-number" data-line-number="241"></td>
        <td id="LC241" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span> +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)</span></td>
      </tr>
      <tr>
        <td id="L242" class="blob-num js-line-number" data-line-number="242"></td>
        <td id="LC242" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span> +      improved by: Brett Zamir (http://brett-zamir.me)</span></td>
      </tr>
      <tr>
        <td id="L243" class="blob-num js-line-number" data-line-number="243"></td>
        <td id="LC243" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span> *     example 1: array_values( {firstname: &#39;Kevin&#39;, surname: &#39;van Zonneveld&#39;} );</span></td>
      </tr>
      <tr>
        <td id="L244" class="blob-num js-line-number" data-line-number="244"></td>
        <td id="LC244" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span> *     returns 1: {0: &#39;Kevin&#39;, 1: &#39;van Zonneveld&#39;}</span></td>
      </tr>
      <tr>
        <td id="L245" class="blob-num js-line-number" data-line-number="245"></td>
        <td id="LC245" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> tmp_arr <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L246" class="blob-num js-line-number" data-line-number="246"></td>
        <td id="LC246" class="blob-code blob-code-inner js-file-line">      key <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L247" class="blob-num js-line-number" data-line-number="247"></td>
        <td id="LC247" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L248" class="blob-num js-line-number" data-line-number="248"></td>
        <td id="LC248" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (input <span class="pl-k">&amp;&amp;</span> <span class="pl-k">typeof</span> input <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&#39;</span>object<span class="pl-pds">&#39;</span></span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">input</span>.<span class="pl-smi">change_key_case</span>) { <span class="pl-c"><span class="pl-c">//</span> Duck-type check for our own array()-created PHPJS_Array</span></td>
      </tr>
      <tr>
        <td id="L249" class="blob-num js-line-number" data-line-number="249"></td>
        <td id="LC249" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-smi">input</span>.<span class="pl-c1">values</span>();</td>
      </tr>
      <tr>
        <td id="L250" class="blob-num js-line-number" data-line-number="250"></td>
        <td id="LC250" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L251" class="blob-num js-line-number" data-line-number="251"></td>
        <td id="LC251" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L252" class="blob-num js-line-number" data-line-number="252"></td>
        <td id="LC252" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">for</span> (key <span class="pl-k">in</span> input) {</td>
      </tr>
      <tr>
        <td id="L253" class="blob-num js-line-number" data-line-number="253"></td>
        <td id="LC253" class="blob-code blob-code-inner js-file-line">    tmp_arr[<span class="pl-smi">tmp_arr</span>.<span class="pl-c1">length</span>] <span class="pl-k">=</span> input[key];</td>
      </tr>
      <tr>
        <td id="L254" class="blob-num js-line-number" data-line-number="254"></td>
        <td id="LC254" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L255" class="blob-num js-line-number" data-line-number="255"></td>
        <td id="LC255" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L256" class="blob-num js-line-number" data-line-number="256"></td>
        <td id="LC256" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> tmp_arr;</td>
      </tr>
      <tr>
        <td id="L257" class="blob-num js-line-number" data-line-number="257"></td>
        <td id="LC257" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L258" class="blob-num js-line-number" data-line-number="258"></td>
        <td id="LC258" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> }}}</span></td>
      </tr>
      <tr>
        <td id="L259" class="blob-num js-line-number" data-line-number="259"></td>
        <td id="LC259" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L260" class="blob-num js-line-number" data-line-number="260"></td>
        <td id="LC260" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> {{{ in_array</span></td>
      </tr>
      <tr>
        <td id="L261" class="blob-num js-line-number" data-line-number="261"></td>
        <td id="LC261" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">in_array</span>(<span class="pl-smi">needle</span>, <span class="pl-smi">haystack</span>, <span class="pl-smi">strict</span>) {</td>
      </tr>
      <tr>
        <td id="L262" class="blob-num js-line-number" data-line-number="262"></td>
        <td id="LC262" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Checks if a value exists in an array</span></td>
      </tr>
      <tr>
        <td id="L263" class="blob-num js-line-number" data-line-number="263"></td>
        <td id="LC263" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> </span></td>
      </tr>
      <tr>
        <td id="L264" class="blob-num js-line-number" data-line-number="264"></td>
        <td id="LC264" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +    discuss at: http://kevin.vanzonneveld.net/techblog/article/javascript_equivalent_for_phps_in_array/</span></td>
      </tr>
      <tr>
        <td id="L265" class="blob-num js-line-number" data-line-number="265"></td>
        <td id="LC265" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +       version: 804.1712</span></td>
      </tr>
      <tr>
        <td id="L266" class="blob-num js-line-number" data-line-number="266"></td>
        <td id="LC266" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)</span></td>
      </tr>
      <tr>
        <td id="L267" class="blob-num js-line-number" data-line-number="267"></td>
        <td id="LC267" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     example 1: in_array(&#39;van&#39;, [&#39;Kevin&#39;, &#39;van&#39;, &#39;Zonneveld&#39;]);</span></td>
      </tr>
      <tr>
        <td id="L268" class="blob-num js-line-number" data-line-number="268"></td>
        <td id="LC268" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     returns 1: true</span></td>
      </tr>
      <tr>
        <td id="L269" class="blob-num js-line-number" data-line-number="269"></td>
        <td id="LC269" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L270" class="blob-num js-line-number" data-line-number="270"></td>
        <td id="LC270" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> found <span class="pl-k">=</span> <span class="pl-c1">false</span>, key, strict <span class="pl-k">=</span> <span class="pl-k">!!</span>strict;</td>
      </tr>
      <tr>
        <td id="L271" class="blob-num js-line-number" data-line-number="271"></td>
        <td id="LC271" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L272" class="blob-num js-line-number" data-line-number="272"></td>
        <td id="LC272" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (key <span class="pl-k">in</span> haystack) {</td>
      </tr>
      <tr>
        <td id="L273" class="blob-num js-line-number" data-line-number="273"></td>
        <td id="LC273" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ((strict <span class="pl-k">&amp;&amp;</span> haystack[key] <span class="pl-k">===</span> needle) <span class="pl-k">||</span> (<span class="pl-k">!</span>strict <span class="pl-k">&amp;&amp;</span> haystack[key] <span class="pl-k">==</span> needle)) {</td>
      </tr>
      <tr>
        <td id="L274" class="blob-num js-line-number" data-line-number="274"></td>
        <td id="LC274" class="blob-code blob-code-inner js-file-line">            found <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L275" class="blob-num js-line-number" data-line-number="275"></td>
        <td id="LC275" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L276" class="blob-num js-line-number" data-line-number="276"></td>
        <td id="LC276" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L277" class="blob-num js-line-number" data-line-number="277"></td>
        <td id="LC277" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L278" class="blob-num js-line-number" data-line-number="278"></td>
        <td id="LC278" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L279" class="blob-num js-line-number" data-line-number="279"></td>
        <td id="LC279" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> found;</td>
      </tr>
      <tr>
        <td id="L280" class="blob-num js-line-number" data-line-number="280"></td>
        <td id="LC280" class="blob-code blob-code-inner js-file-line">}<span class="pl-c"><span class="pl-c">//</span> }}}</span></td>
      </tr>
      <tr>
        <td id="L281" class="blob-num js-line-number" data-line-number="281"></td>
        <td id="LC281" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L282" class="blob-num js-line-number" data-line-number="282"></td>
        <td id="LC282" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> {{{ sizeof</span></td>
      </tr>
      <tr>
        <td id="L283" class="blob-num js-line-number" data-line-number="283"></td>
        <td id="LC283" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">sizeof</span> ( <span class="pl-smi">mixed_var</span>, <span class="pl-smi">mode</span> ) {</td>
      </tr>
      <tr>
        <td id="L284" class="blob-num js-line-number" data-line-number="284"></td>
        <td id="LC284" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Alias of count()</span></td>
      </tr>
      <tr>
        <td id="L285" class="blob-num js-line-number" data-line-number="285"></td>
        <td id="LC285" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> </span></td>
      </tr>
      <tr>
        <td id="L286" class="blob-num js-line-number" data-line-number="286"></td>
        <td id="LC286" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +    discuss at: http://kevin.vanzonneveld.net/techblog/article/javascript_equivalent_for_phps_sizeof/</span></td>
      </tr>
      <tr>
        <td id="L287" class="blob-num js-line-number" data-line-number="287"></td>
        <td id="LC287" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +       version: 804.1712</span></td>
      </tr>
      <tr>
        <td id="L288" class="blob-num js-line-number" data-line-number="288"></td>
        <td id="LC288" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +   original by: Philip Peterson</span></td>
      </tr>
      <tr>
        <td id="L289" class="blob-num js-line-number" data-line-number="289"></td>
        <td id="LC289" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> -    depends on: count</span></td>
      </tr>
      <tr>
        <td id="L290" class="blob-num js-line-number" data-line-number="290"></td>
        <td id="LC290" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     example 1: sizeof([[0,0],[0,-4]], &#39;COUNT_RECURSIVE&#39;);</span></td>
      </tr>
      <tr>
        <td id="L291" class="blob-num js-line-number" data-line-number="291"></td>
        <td id="LC291" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     returns 1: 6</span></td>
      </tr>
      <tr>
        <td id="L292" class="blob-num js-line-number" data-line-number="292"></td>
        <td id="LC292" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     example 2: sizeof({&#39;one&#39; : [1,2,3,4,5]}, &#39;COUNT_RECURSIVE&#39;);</span></td>
      </tr>
      <tr>
        <td id="L293" class="blob-num js-line-number" data-line-number="293"></td>
        <td id="LC293" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     returns 2: 6</span></td>
      </tr>
      <tr>
        <td id="L294" class="blob-num js-line-number" data-line-number="294"></td>
        <td id="LC294" class="blob-code blob-code-inner js-file-line"> </td>
      </tr>
      <tr>
        <td id="L295" class="blob-num js-line-number" data-line-number="295"></td>
        <td id="LC295" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-en">count</span>( mixed_var, mode );</td>
      </tr>
      <tr>
        <td id="L296" class="blob-num js-line-number" data-line-number="296"></td>
        <td id="LC296" class="blob-code blob-code-inner js-file-line">}<span class="pl-c"><span class="pl-c">//</span> }}}</span></td>
      </tr>
      <tr>
        <td id="L297" class="blob-num js-line-number" data-line-number="297"></td>
        <td id="LC297" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L298" class="blob-num js-line-number" data-line-number="298"></td>
        <td id="LC298" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> {{{ count</span></td>
      </tr>
      <tr>
        <td id="L299" class="blob-num js-line-number" data-line-number="299"></td>
        <td id="LC299" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">count</span>( <span class="pl-smi">mixed_var</span>, <span class="pl-smi">mode</span> ) {</td>
      </tr>
      <tr>
        <td id="L300" class="blob-num js-line-number" data-line-number="300"></td>
        <td id="LC300" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Count elements in an array, or properties in an object</span></td>
      </tr>
      <tr>
        <td id="L301" class="blob-num js-line-number" data-line-number="301"></td>
        <td id="LC301" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> </span></td>
      </tr>
      <tr>
        <td id="L302" class="blob-num js-line-number" data-line-number="302"></td>
        <td id="LC302" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +    discuss at: http://kevin.vanzonneveld.net/techblog/article/javascript_equivalent_for_phps_count/</span></td>
      </tr>
      <tr>
        <td id="L303" class="blob-num js-line-number" data-line-number="303"></td>
        <td id="LC303" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +       version: 804.1712</span></td>
      </tr>
      <tr>
        <td id="L304" class="blob-num js-line-number" data-line-number="304"></td>
        <td id="LC304" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)</span></td>
      </tr>
      <tr>
        <td id="L305" class="blob-num js-line-number" data-line-number="305"></td>
        <td id="LC305" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +      input by: _argos</span></td>
      </tr>
      <tr>
        <td id="L306" class="blob-num js-line-number" data-line-number="306"></td>
        <td id="LC306" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     example 1: count([[0,0],[0,-4]], &#39;COUNT_RECURSIVE&#39;);</span></td>
      </tr>
      <tr>
        <td id="L307" class="blob-num js-line-number" data-line-number="307"></td>
        <td id="LC307" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     returns 1: 6</span></td>
      </tr>
      <tr>
        <td id="L308" class="blob-num js-line-number" data-line-number="308"></td>
        <td id="LC308" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     example 2: count({&#39;one&#39; : [1,2,3,4,5]}, &#39;COUNT_RECURSIVE&#39;);</span></td>
      </tr>
      <tr>
        <td id="L309" class="blob-num js-line-number" data-line-number="309"></td>
        <td id="LC309" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     returns 2: 6</span></td>
      </tr>
      <tr>
        <td id="L310" class="blob-num js-line-number" data-line-number="310"></td>
        <td id="LC310" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L311" class="blob-num js-line-number" data-line-number="311"></td>
        <td id="LC311" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> key, cnt <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L312" class="blob-num js-line-number" data-line-number="312"></td>
        <td id="LC312" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L313" class="blob-num js-line-number" data-line-number="313"></td>
        <td id="LC313" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span>( mode <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>COUNT_RECURSIVE<span class="pl-pds">&#39;</span></span> ) mode <span class="pl-k">=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L314" class="blob-num js-line-number" data-line-number="314"></td>
        <td id="LC314" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span>( mode <span class="pl-k">!=</span> <span class="pl-c1">1</span> ) mode <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L315" class="blob-num js-line-number" data-line-number="315"></td>
        <td id="LC315" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L316" class="blob-num js-line-number" data-line-number="316"></td>
        <td id="LC316" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (key <span class="pl-k">in</span> mixed_var){</td>
      </tr>
      <tr>
        <td id="L317" class="blob-num js-line-number" data-line-number="317"></td>
        <td id="LC317" class="blob-code blob-code-inner js-file-line">        cnt<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L318" class="blob-num js-line-number" data-line-number="318"></td>
        <td id="LC318" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span>( mode<span class="pl-k">==</span><span class="pl-c1">1</span> <span class="pl-k">&amp;&amp;</span> mixed_var[key] <span class="pl-k">&amp;&amp;</span> (mixed_var[key].<span class="pl-c1">constructor</span> <span class="pl-k">===</span> <span class="pl-c1">Array</span> <span class="pl-k">||</span> mixed_var[key].<span class="pl-c1">constructor</span> <span class="pl-k">===</span> <span class="pl-c1">Object</span>) ){</td>
      </tr>
      <tr>
        <td id="L319" class="blob-num js-line-number" data-line-number="319"></td>
        <td id="LC319" class="blob-code blob-code-inner js-file-line">            cnt <span class="pl-k">+=</span> <span class="pl-en">count</span>(mixed_var[key], <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L320" class="blob-num js-line-number" data-line-number="320"></td>
        <td id="LC320" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L321" class="blob-num js-line-number" data-line-number="321"></td>
        <td id="LC321" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L322" class="blob-num js-line-number" data-line-number="322"></td>
        <td id="LC322" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L323" class="blob-num js-line-number" data-line-number="323"></td>
        <td id="LC323" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> cnt;</td>
      </tr>
      <tr>
        <td id="L324" class="blob-num js-line-number" data-line-number="324"></td>
        <td id="LC324" class="blob-code blob-code-inner js-file-line">}<span class="pl-c"><span class="pl-c">//</span> }}}</span></td>
      </tr>
      <tr>
        <td id="L325" class="blob-num js-line-number" data-line-number="325"></td>
        <td id="LC325" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L326" class="blob-num js-line-number" data-line-number="326"></td>
        <td id="LC326" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> {{{ explode</span></td>
      </tr>
      <tr>
        <td id="L327" class="blob-num js-line-number" data-line-number="327"></td>
        <td id="LC327" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">explode</span>( <span class="pl-smi">delimiter</span>, <span class="pl-smi">string</span>, <span class="pl-smi">limit</span> ) {</td>
      </tr>
      <tr>
        <td id="L328" class="blob-num js-line-number" data-line-number="328"></td>
        <td id="LC328" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Split a string by string</span></td>
      </tr>
      <tr>
        <td id="L329" class="blob-num js-line-number" data-line-number="329"></td>
        <td id="LC329" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> </span></td>
      </tr>
      <tr>
        <td id="L330" class="blob-num js-line-number" data-line-number="330"></td>
        <td id="LC330" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +    discuss at: http://kevin.vanzonneveld.net/techblog/article/javascript_equivalent_for_phps_explode/</span></td>
      </tr>
      <tr>
        <td id="L331" class="blob-num js-line-number" data-line-number="331"></td>
        <td id="LC331" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +       version: 805.1715</span></td>
      </tr>
      <tr>
        <td id="L332" class="blob-num js-line-number" data-line-number="332"></td>
        <td id="LC332" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +     original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)</span></td>
      </tr>
      <tr>
        <td id="L333" class="blob-num js-line-number" data-line-number="333"></td>
        <td id="LC333" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +     improved by: kenneth</span></td>
      </tr>
      <tr>
        <td id="L334" class="blob-num js-line-number" data-line-number="334"></td>
        <td id="LC334" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +     improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)</span></td>
      </tr>
      <tr>
        <td id="L335" class="blob-num js-line-number" data-line-number="335"></td>
        <td id="LC335" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +     improved by: d3x</span></td>
      </tr>
      <tr>
        <td id="L336" class="blob-num js-line-number" data-line-number="336"></td>
        <td id="LC336" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +     bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)</span></td>
      </tr>
      <tr>
        <td id="L337" class="blob-num js-line-number" data-line-number="337"></td>
        <td id="LC337" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     example 1: explode(&#39; &#39;, &#39;Kevin van Zonneveld&#39;);</span></td>
      </tr>
      <tr>
        <td id="L338" class="blob-num js-line-number" data-line-number="338"></td>
        <td id="LC338" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     returns 1: {0: &#39;Kevin&#39;, 1: &#39;van&#39;, 2: &#39;Zonneveld&#39;}</span></td>
      </tr>
      <tr>
        <td id="L339" class="blob-num js-line-number" data-line-number="339"></td>
        <td id="LC339" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     example 2: explode(&#39;=&#39;, &#39;a=bc=d&#39;, 2);</span></td>
      </tr>
      <tr>
        <td id="L340" class="blob-num js-line-number" data-line-number="340"></td>
        <td id="LC340" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     returns 2: [&#39;a&#39;, &#39;bc=d&#39;]</span></td>
      </tr>
      <tr>
        <td id="L341" class="blob-num js-line-number" data-line-number="341"></td>
        <td id="LC341" class="blob-code blob-code-inner js-file-line"> </td>
      </tr>
      <tr>
        <td id="L342" class="blob-num js-line-number" data-line-number="342"></td>
        <td id="LC342" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> emptyArray <span class="pl-k">=</span> { <span class="pl-c1">0</span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span> };</td>
      </tr>
      <tr>
        <td id="L343" class="blob-num js-line-number" data-line-number="343"></td>
        <td id="LC343" class="blob-code blob-code-inner js-file-line">    </td>
      </tr>
      <tr>
        <td id="L344" class="blob-num js-line-number" data-line-number="344"></td>
        <td id="LC344" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> third argument is not required</span></td>
      </tr>
      <tr>
        <td id="L345" class="blob-num js-line-number" data-line-number="345"></td>
        <td id="LC345" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( <span class="pl-c1">arguments</span>.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> <span class="pl-c1">2</span></td>
      </tr>
      <tr>
        <td id="L346" class="blob-num js-line-number" data-line-number="346"></td>
        <td id="LC346" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">||</span> <span class="pl-k">typeof</span> <span class="pl-c1">arguments</span>[<span class="pl-c1">0</span>] <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L347" class="blob-num js-line-number" data-line-number="347"></td>
        <td id="LC347" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">||</span> <span class="pl-k">typeof</span> <span class="pl-c1">arguments</span>[<span class="pl-c1">1</span>] <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span> )</td>
      </tr>
      <tr>
        <td id="L348" class="blob-num js-line-number" data-line-number="348"></td>
        <td id="LC348" class="blob-code blob-code-inner js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L349" class="blob-num js-line-number" data-line-number="349"></td>
        <td id="LC349" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L350" class="blob-num js-line-number" data-line-number="350"></td>
        <td id="LC350" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L351" class="blob-num js-line-number" data-line-number="351"></td>
        <td id="LC351" class="blob-code blob-code-inner js-file-line"> </td>
      </tr>
      <tr>
        <td id="L352" class="blob-num js-line-number" data-line-number="352"></td>
        <td id="LC352" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( delimiter <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L353" class="blob-num js-line-number" data-line-number="353"></td>
        <td id="LC353" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">||</span> delimiter <span class="pl-k">===</span> <span class="pl-c1">false</span></td>
      </tr>
      <tr>
        <td id="L354" class="blob-num js-line-number" data-line-number="354"></td>
        <td id="LC354" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">||</span> delimiter <span class="pl-k">===</span> <span class="pl-c1">null</span> )</td>
      </tr>
      <tr>
        <td id="L355" class="blob-num js-line-number" data-line-number="355"></td>
        <td id="LC355" class="blob-code blob-code-inner js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L356" class="blob-num js-line-number" data-line-number="356"></td>
        <td id="LC356" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L357" class="blob-num js-line-number" data-line-number="357"></td>
        <td id="LC357" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L358" class="blob-num js-line-number" data-line-number="358"></td>
        <td id="LC358" class="blob-code blob-code-inner js-file-line"> </td>
      </tr>
      <tr>
        <td id="L359" class="blob-num js-line-number" data-line-number="359"></td>
        <td id="LC359" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( <span class="pl-k">typeof</span> delimiter <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>function<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L360" class="blob-num js-line-number" data-line-number="360"></td>
        <td id="LC360" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">||</span> <span class="pl-k">typeof</span> delimiter <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>object<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L361" class="blob-num js-line-number" data-line-number="361"></td>
        <td id="LC361" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">||</span> <span class="pl-k">typeof</span> string <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>function<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L362" class="blob-num js-line-number" data-line-number="362"></td>
        <td id="LC362" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">||</span> <span class="pl-k">typeof</span> string <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>object<span class="pl-pds">&#39;</span></span> )</td>
      </tr>
      <tr>
        <td id="L363" class="blob-num js-line-number" data-line-number="363"></td>
        <td id="LC363" class="blob-code blob-code-inner js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L364" class="blob-num js-line-number" data-line-number="364"></td>
        <td id="LC364" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> emptyArray;</td>
      </tr>
      <tr>
        <td id="L365" class="blob-num js-line-number" data-line-number="365"></td>
        <td id="LC365" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L366" class="blob-num js-line-number" data-line-number="366"></td>
        <td id="LC366" class="blob-code blob-code-inner js-file-line"> </td>
      </tr>
      <tr>
        <td id="L367" class="blob-num js-line-number" data-line-number="367"></td>
        <td id="LC367" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( delimiter <span class="pl-k">===</span> <span class="pl-c1">true</span> ) {</td>
      </tr>
      <tr>
        <td id="L368" class="blob-num js-line-number" data-line-number="368"></td>
        <td id="LC368" class="blob-code blob-code-inner js-file-line">        delimiter <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>1<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L369" class="blob-num js-line-number" data-line-number="369"></td>
        <td id="LC369" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L370" class="blob-num js-line-number" data-line-number="370"></td>
        <td id="LC370" class="blob-code blob-code-inner js-file-line">    </td>
      </tr>
      <tr>
        <td id="L371" class="blob-num js-line-number" data-line-number="371"></td>
        <td id="LC371" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>limit) {</td>
      </tr>
      <tr>
        <td id="L372" class="blob-num js-line-number" data-line-number="372"></td>
        <td id="LC372" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-smi">string</span>.<span class="pl-c1">toString</span>().<span class="pl-c1">split</span>(<span class="pl-smi">delimiter</span>.<span class="pl-c1">toString</span>());</td>
      </tr>
      <tr>
        <td id="L373" class="blob-num js-line-number" data-line-number="373"></td>
        <td id="LC373" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L374" class="blob-num js-line-number" data-line-number="374"></td>
        <td id="LC374" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> support for limit argument</span></td>
      </tr>
      <tr>
        <td id="L375" class="blob-num js-line-number" data-line-number="375"></td>
        <td id="LC375" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> splitted <span class="pl-k">=</span> <span class="pl-smi">string</span>.<span class="pl-c1">toString</span>().<span class="pl-c1">split</span>(<span class="pl-smi">delimiter</span>.<span class="pl-c1">toString</span>());</td>
      </tr>
      <tr>
        <td id="L376" class="blob-num js-line-number" data-line-number="376"></td>
        <td id="LC376" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> partA <span class="pl-k">=</span> <span class="pl-smi">splitted</span>.<span class="pl-c1">splice</span>(<span class="pl-c1">0</span>, limit <span class="pl-k">-</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L377" class="blob-num js-line-number" data-line-number="377"></td>
        <td id="LC377" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> partB <span class="pl-k">=</span> <span class="pl-smi">splitted</span>.<span class="pl-c1">join</span>(<span class="pl-smi">delimiter</span>.<span class="pl-c1">toString</span>());</td>
      </tr>
      <tr>
        <td id="L378" class="blob-num js-line-number" data-line-number="378"></td>
        <td id="LC378" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">partA</span>.<span class="pl-c1">push</span>(partB);</td>
      </tr>
      <tr>
        <td id="L379" class="blob-num js-line-number" data-line-number="379"></td>
        <td id="LC379" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> partA;</td>
      </tr>
      <tr>
        <td id="L380" class="blob-num js-line-number" data-line-number="380"></td>
        <td id="LC380" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L381" class="blob-num js-line-number" data-line-number="381"></td>
        <td id="LC381" class="blob-code blob-code-inner js-file-line">}<span class="pl-c"><span class="pl-c">//</span> }}}</span></td>
      </tr>
      <tr>
        <td id="L382" class="blob-num js-line-number" data-line-number="382"></td>
        <td id="LC382" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L383" class="blob-num js-line-number" data-line-number="383"></td>
        <td id="LC383" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> {{{ implode</span></td>
      </tr>
      <tr>
        <td id="L384" class="blob-num js-line-number" data-line-number="384"></td>
        <td id="LC384" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">implode</span>( <span class="pl-smi">glue</span>, <span class="pl-smi">pieces</span> ) {</td>
      </tr>
      <tr>
        <td id="L385" class="blob-num js-line-number" data-line-number="385"></td>
        <td id="LC385" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Join array elements with a string</span></td>
      </tr>
      <tr>
        <td id="L386" class="blob-num js-line-number" data-line-number="386"></td>
        <td id="LC386" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> </span></td>
      </tr>
      <tr>
        <td id="L387" class="blob-num js-line-number" data-line-number="387"></td>
        <td id="LC387" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +    discuss at: http://kevin.vanzonneveld.net/techblog/article/javascript_equivalent_for_phps_implode/</span></td>
      </tr>
      <tr>
        <td id="L388" class="blob-num js-line-number" data-line-number="388"></td>
        <td id="LC388" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +       version: 804.1712</span></td>
      </tr>
      <tr>
        <td id="L389" class="blob-num js-line-number" data-line-number="389"></td>
        <td id="LC389" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)</span></td>
      </tr>
      <tr>
        <td id="L390" class="blob-num js-line-number" data-line-number="390"></td>
        <td id="LC390" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +   improved by: _argos</span></td>
      </tr>
      <tr>
        <td id="L391" class="blob-num js-line-number" data-line-number="391"></td>
        <td id="LC391" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     example 1: implode(&#39; &#39;, [&#39;Kevin&#39;, &#39;van&#39;, &#39;Zonneveld&#39;]);</span></td>
      </tr>
      <tr>
        <td id="L392" class="blob-num js-line-number" data-line-number="392"></td>
        <td id="LC392" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     returns 1: &#39;Kevin van Zonneveld&#39;</span></td>
      </tr>
      <tr>
        <td id="L393" class="blob-num js-line-number" data-line-number="393"></td>
        <td id="LC393" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L394" class="blob-num js-line-number" data-line-number="394"></td>
        <td id="LC394" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> ( ( pieces <span class="pl-k">instanceof</span> <span class="pl-c1">Array</span> ) <span class="pl-k">?</span> <span class="pl-smi">pieces</span>.<span class="pl-c1">join</span> ( glue ) <span class="pl-k">:</span> pieces );</td>
      </tr>
      <tr>
        <td id="L395" class="blob-num js-line-number" data-line-number="395"></td>
        <td id="LC395" class="blob-code blob-code-inner js-file-line">}<span class="pl-c"><span class="pl-c">//</span> }}}</span></td>
      </tr>
      <tr>
        <td id="L396" class="blob-num js-line-number" data-line-number="396"></td>
        <td id="LC396" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L397" class="blob-num js-line-number" data-line-number="397"></td>
        <td id="LC397" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> {{{ join</span></td>
      </tr>
      <tr>
        <td id="L398" class="blob-num js-line-number" data-line-number="398"></td>
        <td id="LC398" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">join</span>( <span class="pl-smi">glue</span>, <span class="pl-smi">pieces</span> ) {</td>
      </tr>
      <tr>
        <td id="L399" class="blob-num js-line-number" data-line-number="399"></td>
        <td id="LC399" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Alias of implode()</span></td>
      </tr>
      <tr>
        <td id="L400" class="blob-num js-line-number" data-line-number="400"></td>
        <td id="LC400" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> </span></td>
      </tr>
      <tr>
        <td id="L401" class="blob-num js-line-number" data-line-number="401"></td>
        <td id="LC401" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +    discuss at: http://kevin.vanzonneveld.net/techblog/article/javascript_equivalent_for_phps_join/</span></td>
      </tr>
      <tr>
        <td id="L402" class="blob-num js-line-number" data-line-number="402"></td>
        <td id="LC402" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +       version: 804.1712</span></td>
      </tr>
      <tr>
        <td id="L403" class="blob-num js-line-number" data-line-number="403"></td>
        <td id="LC403" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)</span></td>
      </tr>
      <tr>
        <td id="L404" class="blob-num js-line-number" data-line-number="404"></td>
        <td id="LC404" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> -    depends on: implode</span></td>
      </tr>
      <tr>
        <td id="L405" class="blob-num js-line-number" data-line-number="405"></td>
        <td id="LC405" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     example 1: join(&#39; &#39;, [&#39;Kevin&#39;, &#39;van&#39;, &#39;Zonneveld&#39;]);</span></td>
      </tr>
      <tr>
        <td id="L406" class="blob-num js-line-number" data-line-number="406"></td>
        <td id="LC406" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     returns 1: &#39;Kevin van Zonneveld&#39;</span></td>
      </tr>
      <tr>
        <td id="L407" class="blob-num js-line-number" data-line-number="407"></td>
        <td id="LC407" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L408" class="blob-num js-line-number" data-line-number="408"></td>
        <td id="LC408" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-en">implode</span>( glue, pieces );</td>
      </tr>
      <tr>
        <td id="L409" class="blob-num js-line-number" data-line-number="409"></td>
        <td id="LC409" class="blob-code blob-code-inner js-file-line">}<span class="pl-c"><span class="pl-c">//</span> }}}</span></td>
      </tr>
      <tr>
        <td id="L410" class="blob-num js-line-number" data-line-number="410"></td>
        <td id="LC410" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L411" class="blob-num js-line-number" data-line-number="411"></td>
        <td id="LC411" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> {{{ split</span></td>
      </tr>
      <tr>
        <td id="L412" class="blob-num js-line-number" data-line-number="412"></td>
        <td id="LC412" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">split</span>( <span class="pl-smi">delimiter</span>, <span class="pl-smi">string</span> ) {</td>
      </tr>
      <tr>
        <td id="L413" class="blob-num js-line-number" data-line-number="413"></td>
        <td id="LC413" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Split string into array by regular expression</span></td>
      </tr>
      <tr>
        <td id="L414" class="blob-num js-line-number" data-line-number="414"></td>
        <td id="LC414" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> </span></td>
      </tr>
      <tr>
        <td id="L415" class="blob-num js-line-number" data-line-number="415"></td>
        <td id="LC415" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +    discuss at: http://kevin.vanzonneveld.net/techblog/article/javascript_equivalent_for_phps_split/</span></td>
      </tr>
      <tr>
        <td id="L416" class="blob-num js-line-number" data-line-number="416"></td>
        <td id="LC416" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +       version: 804.1712</span></td>
      </tr>
      <tr>
        <td id="L417" class="blob-num js-line-number" data-line-number="417"></td>
        <td id="LC417" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)</span></td>
      </tr>
      <tr>
        <td id="L418" class="blob-num js-line-number" data-line-number="418"></td>
        <td id="LC418" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> -    depends on: explode</span></td>
      </tr>
      <tr>
        <td id="L419" class="blob-num js-line-number" data-line-number="419"></td>
        <td id="LC419" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     example 1: split(&#39; &#39;, &#39;Kevin van Zonneveld&#39;);</span></td>
      </tr>
      <tr>
        <td id="L420" class="blob-num js-line-number" data-line-number="420"></td>
        <td id="LC420" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     returns 1: {0: &#39;Kevin&#39;, 1: &#39;van&#39;, 2: &#39;Zonneveld&#39;}</span></td>
      </tr>
      <tr>
        <td id="L421" class="blob-num js-line-number" data-line-number="421"></td>
        <td id="LC421" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L422" class="blob-num js-line-number" data-line-number="422"></td>
        <td id="LC422" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-en">explode</span>( delimiter, string );</td>
      </tr>
      <tr>
        <td id="L423" class="blob-num js-line-number" data-line-number="423"></td>
        <td id="LC423" class="blob-code blob-code-inner js-file-line">}<span class="pl-c"><span class="pl-c">//</span> }}}</span></td>
      </tr>
      <tr>
        <td id="L424" class="blob-num js-line-number" data-line-number="424"></td>
        <td id="LC424" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L425" class="blob-num js-line-number" data-line-number="425"></td>
        <td id="LC425" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> {{{ str_replace</span></td>
      </tr>
      <tr>
        <td id="L426" class="blob-num js-line-number" data-line-number="426"></td>
        <td id="LC426" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">str_replace</span>(<span class="pl-smi">search</span>, <span class="pl-smi">replace</span>, <span class="pl-smi">subject</span>) {</td>
      </tr>
      <tr>
        <td id="L427" class="blob-num js-line-number" data-line-number="427"></td>
        <td id="LC427" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Replace all occurrences of the search string with the replacement string</span></td>
      </tr>
      <tr>
        <td id="L428" class="blob-num js-line-number" data-line-number="428"></td>
        <td id="LC428" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> </span></td>
      </tr>
      <tr>
        <td id="L429" class="blob-num js-line-number" data-line-number="429"></td>
        <td id="LC429" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +    discuss at: http://kevin.vanzonneveld.net/techblog/article/javascript_equivalent_for_phps_str_replace/</span></td>
      </tr>
      <tr>
        <td id="L430" class="blob-num js-line-number" data-line-number="430"></td>
        <td id="LC430" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +       version: 805.3114</span></td>
      </tr>
      <tr>
        <td id="L431" class="blob-num js-line-number" data-line-number="431"></td>
        <td id="LC431" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)</span></td>
      </tr>
      <tr>
        <td id="L432" class="blob-num js-line-number" data-line-number="432"></td>
        <td id="LC432" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +   improved by: Gabriel Paderni</span></td>
      </tr>
      <tr>
        <td id="L433" class="blob-num js-line-number" data-line-number="433"></td>
        <td id="LC433" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +   improved by: Philip Peterson</span></td>
      </tr>
      <tr>
        <td id="L434" class="blob-num js-line-number" data-line-number="434"></td>
        <td id="LC434" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +   improved by: Simon Willison (http://simonwillison.net)</span></td>
      </tr>
      <tr>
        <td id="L435" class="blob-num js-line-number" data-line-number="435"></td>
        <td id="LC435" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +    revised by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)</span></td>
      </tr>
      <tr>
        <td id="L436" class="blob-num js-line-number" data-line-number="436"></td>
        <td id="LC436" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> -    depends on: is_array</span></td>
      </tr>
      <tr>
        <td id="L437" class="blob-num js-line-number" data-line-number="437"></td>
        <td id="LC437" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     example 1: str_replace(&#39; &#39;, &#39;.&#39;, &#39;Kevin van Zonneveld&#39;);</span></td>
      </tr>
      <tr>
        <td id="L438" class="blob-num js-line-number" data-line-number="438"></td>
        <td id="LC438" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     returns 1: &#39;Kevin.van.Zonneveld&#39;</span></td>
      </tr>
      <tr>
        <td id="L439" class="blob-num js-line-number" data-line-number="439"></td>
        <td id="LC439" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     example 2: str_replace([&#39;{name}&#39;, &#39;l&#39;], [&#39;hello&#39;, &#39;m&#39;], &#39;{name}, lars&#39;);</span></td>
      </tr>
      <tr>
        <td id="L440" class="blob-num js-line-number" data-line-number="440"></td>
        <td id="LC440" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     returns 2: &#39;hemmo, mars&#39;    </span></td>
      </tr>
      <tr>
        <td id="L441" class="blob-num js-line-number" data-line-number="441"></td>
        <td id="LC441" class="blob-code blob-code-inner js-file-line">    </td>
      </tr>
      <tr>
        <td id="L442" class="blob-num js-line-number" data-line-number="442"></td>
        <td id="LC442" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> f <span class="pl-k">=</span> search, r <span class="pl-k">=</span> replace, s <span class="pl-k">=</span> subject;</td>
      </tr>
      <tr>
        <td id="L443" class="blob-num js-line-number" data-line-number="443"></td>
        <td id="LC443" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> ra <span class="pl-k">=</span> <span class="pl-en">is_array</span>(r), sa <span class="pl-k">=</span> <span class="pl-en">is_array</span>(s), f <span class="pl-k">=</span> [].<span class="pl-c1">concat</span>(f), r <span class="pl-k">=</span> [].<span class="pl-c1">concat</span>(r), i <span class="pl-k">=</span> (s <span class="pl-k">=</span> [].<span class="pl-c1">concat</span>(s)).<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L444" class="blob-num js-line-number" data-line-number="444"></td>
        <td id="LC444" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L445" class="blob-num js-line-number" data-line-number="445"></td>
        <td id="LC445" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (j <span class="pl-k">=</span> <span class="pl-c1">0</span>, i<span class="pl-k">--</span>) {</td>
      </tr>
      <tr>
        <td id="L446" class="blob-num js-line-number" data-line-number="446"></td>
        <td id="LC446" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">while</span> (s[i] <span class="pl-k">=</span> s[i].<span class="pl-c1">split</span>(f[j]).<span class="pl-c1">join</span>(ra <span class="pl-k">?</span> r[j] <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> r[<span class="pl-c1">0</span>]), <span class="pl-k">++</span>j <span class="pl-k">in</span> f){};</td>
      </tr>
      <tr>
        <td id="L447" class="blob-num js-line-number" data-line-number="447"></td>
        <td id="LC447" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L448" class="blob-num js-line-number" data-line-number="448"></td>
        <td id="LC448" class="blob-code blob-code-inner js-file-line">     </td>
      </tr>
      <tr>
        <td id="L449" class="blob-num js-line-number" data-line-number="449"></td>
        <td id="LC449" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> sa <span class="pl-k">?</span> s <span class="pl-k">:</span> s[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L450" class="blob-num js-line-number" data-line-number="450"></td>
        <td id="LC450" class="blob-code blob-code-inner js-file-line">}<span class="pl-c"><span class="pl-c">//</span> }}}</span></td>
      </tr>
      <tr>
        <td id="L451" class="blob-num js-line-number" data-line-number="451"></td>
        <td id="LC451" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L452" class="blob-num js-line-number" data-line-number="452"></td>
        <td id="LC452" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> {{{ strlen</span></td>
      </tr>
      <tr>
        <td id="L453" class="blob-num js-line-number" data-line-number="453"></td>
        <td id="LC453" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">strlen</span>( <span class="pl-smi">string</span> ){</td>
      </tr>
      <tr>
        <td id="L454" class="blob-num js-line-number" data-line-number="454"></td>
        <td id="LC454" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Get string length</span></td>
      </tr>
      <tr>
        <td id="L455" class="blob-num js-line-number" data-line-number="455"></td>
        <td id="LC455" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> </span></td>
      </tr>
      <tr>
        <td id="L456" class="blob-num js-line-number" data-line-number="456"></td>
        <td id="LC456" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +    discuss at: http://kevin.vanzonneveld.net/techblog/article/javascript_equivalent_for_phps_strlen/</span></td>
      </tr>
      <tr>
        <td id="L457" class="blob-num js-line-number" data-line-number="457"></td>
        <td id="LC457" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +       version: 805.1616</span></td>
      </tr>
      <tr>
        <td id="L458" class="blob-num js-line-number" data-line-number="458"></td>
        <td id="LC458" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)</span></td>
      </tr>
      <tr>
        <td id="L459" class="blob-num js-line-number" data-line-number="459"></td>
        <td id="LC459" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +   improved by: Sakimori</span></td>
      </tr>
      <tr>
        <td id="L460" class="blob-num js-line-number" data-line-number="460"></td>
        <td id="LC460" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     example 1: strlen(&#39;Kevin van Zonneveld&#39;);</span></td>
      </tr>
      <tr>
        <td id="L461" class="blob-num js-line-number" data-line-number="461"></td>
        <td id="LC461" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     returns 1: 19</span></td>
      </tr>
      <tr>
        <td id="L462" class="blob-num js-line-number" data-line-number="462"></td>
        <td id="LC462" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L463" class="blob-num js-line-number" data-line-number="463"></td>
        <td id="LC463" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> (<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> string).<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L464" class="blob-num js-line-number" data-line-number="464"></td>
        <td id="LC464" class="blob-code blob-code-inner js-file-line">}<span class="pl-c"><span class="pl-c">//</span> }}}</span></td>
      </tr>
      <tr>
        <td id="L465" class="blob-num js-line-number" data-line-number="465"></td>
        <td id="LC465" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L466" class="blob-num js-line-number" data-line-number="466"></td>
        <td id="LC466" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> {{{ strpos</span></td>
      </tr>
      <tr>
        <td id="L467" class="blob-num js-line-number" data-line-number="467"></td>
        <td id="LC467" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">strpos</span>( <span class="pl-smi">haystack</span>, <span class="pl-smi">needle</span>, <span class="pl-smi">offset</span>){</td>
      </tr>
      <tr>
        <td id="L468" class="blob-num js-line-number" data-line-number="468"></td>
        <td id="LC468" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Find position of first occurrence of a string</span></td>
      </tr>
      <tr>
        <td id="L469" class="blob-num js-line-number" data-line-number="469"></td>
        <td id="LC469" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> </span></td>
      </tr>
      <tr>
        <td id="L470" class="blob-num js-line-number" data-line-number="470"></td>
        <td id="LC470" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +    discuss at: http://kevin.vanzonneveld.net/techblog/article/javascript_equivalent_for_phps_strpos/</span></td>
      </tr>
      <tr>
        <td id="L471" class="blob-num js-line-number" data-line-number="471"></td>
        <td id="LC471" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +       version: 804.1712</span></td>
      </tr>
      <tr>
        <td id="L472" class="blob-num js-line-number" data-line-number="472"></td>
        <td id="LC472" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)</span></td>
      </tr>
      <tr>
        <td id="L473" class="blob-num js-line-number" data-line-number="473"></td>
        <td id="LC473" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     example 1: strpos(&#39;Kevin van Zonneveld&#39;, &#39;e&#39;, 5);</span></td>
      </tr>
      <tr>
        <td id="L474" class="blob-num js-line-number" data-line-number="474"></td>
        <td id="LC474" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     returns 1: 14</span></td>
      </tr>
      <tr>
        <td id="L475" class="blob-num js-line-number" data-line-number="475"></td>
        <td id="LC475" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L476" class="blob-num js-line-number" data-line-number="476"></td>
        <td id="LC476" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-smi">haystack</span>.<span class="pl-c1">indexOf</span>( needle, offset ); <span class="pl-c"><span class="pl-c">//</span> returns -1</span></td>
      </tr>
      <tr>
        <td id="L477" class="blob-num js-line-number" data-line-number="477"></td>
        <td id="LC477" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> i <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> i <span class="pl-k">:</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L478" class="blob-num js-line-number" data-line-number="478"></td>
        <td id="LC478" class="blob-code blob-code-inner js-file-line">}<span class="pl-c"><span class="pl-c">//</span> }}}</span></td>
      </tr>
      <tr>
        <td id="L479" class="blob-num js-line-number" data-line-number="479"></td>
        <td id="LC479" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L480" class="blob-num js-line-number" data-line-number="480"></td>
        <td id="LC480" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> {{{ strrpos</span></td>
      </tr>
      <tr>
        <td id="L481" class="blob-num js-line-number" data-line-number="481"></td>
        <td id="LC481" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">strrpos</span>( <span class="pl-smi">haystack</span>, <span class="pl-smi">needle</span>, <span class="pl-smi">offset</span>){</td>
      </tr>
      <tr>
        <td id="L482" class="blob-num js-line-number" data-line-number="482"></td>
        <td id="LC482" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Find position of last occurrence of a char in a string</span></td>
      </tr>
      <tr>
        <td id="L483" class="blob-num js-line-number" data-line-number="483"></td>
        <td id="LC483" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> </span></td>
      </tr>
      <tr>
        <td id="L484" class="blob-num js-line-number" data-line-number="484"></td>
        <td id="LC484" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +    discuss at: http://kevin.vanzonneveld.net/techblog/article/javascript_equivalent_for_phps_strrpos/</span></td>
      </tr>
      <tr>
        <td id="L485" class="blob-num js-line-number" data-line-number="485"></td>
        <td id="LC485" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +       version: 804.1712</span></td>
      </tr>
      <tr>
        <td id="L486" class="blob-num js-line-number" data-line-number="486"></td>
        <td id="LC486" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)</span></td>
      </tr>
      <tr>
        <td id="L487" class="blob-num js-line-number" data-line-number="487"></td>
        <td id="LC487" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     example 1: strrpos(&#39;Kevin van Zonneveld&#39;, &#39;e&#39;);</span></td>
      </tr>
      <tr>
        <td id="L488" class="blob-num js-line-number" data-line-number="488"></td>
        <td id="LC488" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     returns 1: 16</span></td>
      </tr>
      <tr>
        <td id="L489" class="blob-num js-line-number" data-line-number="489"></td>
        <td id="LC489" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L490" class="blob-num js-line-number" data-line-number="490"></td>
        <td id="LC490" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-smi">haystack</span>.<span class="pl-c1">lastIndexOf</span>( needle, offset ); <span class="pl-c"><span class="pl-c">//</span> returns -1</span></td>
      </tr>
      <tr>
        <td id="L491" class="blob-num js-line-number" data-line-number="491"></td>
        <td id="LC491" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> i <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> i <span class="pl-k">:</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L492" class="blob-num js-line-number" data-line-number="492"></td>
        <td id="LC492" class="blob-code blob-code-inner js-file-line">}<span class="pl-c"><span class="pl-c">//</span> }}}</span></td>
      </tr>
      <tr>
        <td id="L493" class="blob-num js-line-number" data-line-number="493"></td>
        <td id="LC493" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L494" class="blob-num js-line-number" data-line-number="494"></td>
        <td id="LC494" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> {{{ strtolower</span></td>
      </tr>
      <tr>
        <td id="L495" class="blob-num js-line-number" data-line-number="495"></td>
        <td id="LC495" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">strtolower</span>( <span class="pl-smi">str</span> ) {</td>
      </tr>
      <tr>
        <td id="L496" class="blob-num js-line-number" data-line-number="496"></td>
        <td id="LC496" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Make a string lowercase</span></td>
      </tr>
      <tr>
        <td id="L497" class="blob-num js-line-number" data-line-number="497"></td>
        <td id="LC497" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> </span></td>
      </tr>
      <tr>
        <td id="L498" class="blob-num js-line-number" data-line-number="498"></td>
        <td id="LC498" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +    discuss at: http://kevin.vanzonneveld.net/techblog/article/javascript_equivalent_for_phps_strtolower/</span></td>
      </tr>
      <tr>
        <td id="L499" class="blob-num js-line-number" data-line-number="499"></td>
        <td id="LC499" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +       version: 804.1712</span></td>
      </tr>
      <tr>
        <td id="L500" class="blob-num js-line-number" data-line-number="500"></td>
        <td id="LC500" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)</span></td>
      </tr>
      <tr>
        <td id="L501" class="blob-num js-line-number" data-line-number="501"></td>
        <td id="LC501" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     example 1: strtolower(&#39;Kevin van Zonneveld&#39;);</span></td>
      </tr>
      <tr>
        <td id="L502" class="blob-num js-line-number" data-line-number="502"></td>
        <td id="LC502" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     returns 1: &#39;kevin van zonneveld&#39;</span></td>
      </tr>
      <tr>
        <td id="L503" class="blob-num js-line-number" data-line-number="503"></td>
        <td id="LC503" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L504" class="blob-num js-line-number" data-line-number="504"></td>
        <td id="LC504" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-smi">str</span>.<span class="pl-c1">toLowerCase</span>();</td>
      </tr>
      <tr>
        <td id="L505" class="blob-num js-line-number" data-line-number="505"></td>
        <td id="LC505" class="blob-code blob-code-inner js-file-line">}<span class="pl-c"><span class="pl-c">//</span> }}}</span></td>
      </tr>
      <tr>
        <td id="L506" class="blob-num js-line-number" data-line-number="506"></td>
        <td id="LC506" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L507" class="blob-num js-line-number" data-line-number="507"></td>
        <td id="LC507" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> {{{ strtoupper</span></td>
      </tr>
      <tr>
        <td id="L508" class="blob-num js-line-number" data-line-number="508"></td>
        <td id="LC508" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">strtoupper</span>( <span class="pl-smi">str</span> ) {</td>
      </tr>
      <tr>
        <td id="L509" class="blob-num js-line-number" data-line-number="509"></td>
        <td id="LC509" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Make a string uppercase</span></td>
      </tr>
      <tr>
        <td id="L510" class="blob-num js-line-number" data-line-number="510"></td>
        <td id="LC510" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> </span></td>
      </tr>
      <tr>
        <td id="L511" class="blob-num js-line-number" data-line-number="511"></td>
        <td id="LC511" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +    discuss at: http://kevin.vanzonneveld.net/techblog/article/javascript_equivalent_for_phps_strtoupper/</span></td>
      </tr>
      <tr>
        <td id="L512" class="blob-num js-line-number" data-line-number="512"></td>
        <td id="LC512" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +       version: 804.1712</span></td>
      </tr>
      <tr>
        <td id="L513" class="blob-num js-line-number" data-line-number="513"></td>
        <td id="LC513" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)</span></td>
      </tr>
      <tr>
        <td id="L514" class="blob-num js-line-number" data-line-number="514"></td>
        <td id="LC514" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     example 1: strtoupper(&#39;Kevin van Zonneveld&#39;);</span></td>
      </tr>
      <tr>
        <td id="L515" class="blob-num js-line-number" data-line-number="515"></td>
        <td id="LC515" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     returns 1: &#39;KEVIN VAN ZONNEVELD&#39;</span></td>
      </tr>
      <tr>
        <td id="L516" class="blob-num js-line-number" data-line-number="516"></td>
        <td id="LC516" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L517" class="blob-num js-line-number" data-line-number="517"></td>
        <td id="LC517" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-smi">str</span>.<span class="pl-c1">toUpperCase</span>();</td>
      </tr>
      <tr>
        <td id="L518" class="blob-num js-line-number" data-line-number="518"></td>
        <td id="LC518" class="blob-code blob-code-inner js-file-line">}<span class="pl-c"><span class="pl-c">//</span> }}}</span></td>
      </tr>
      <tr>
        <td id="L519" class="blob-num js-line-number" data-line-number="519"></td>
        <td id="LC519" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L520" class="blob-num js-line-number" data-line-number="520"></td>
        <td id="LC520" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> {{{ substr</span></td>
      </tr>
      <tr>
        <td id="L521" class="blob-num js-line-number" data-line-number="521"></td>
        <td id="LC521" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">substr</span>( <span class="pl-smi">f_string</span>, <span class="pl-smi">f_start</span>, <span class="pl-smi">f_length</span> ) {</td>
      </tr>
      <tr>
        <td id="L522" class="blob-num js-line-number" data-line-number="522"></td>
        <td id="LC522" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Return part of a string</span></td>
      </tr>
      <tr>
        <td id="L523" class="blob-num js-line-number" data-line-number="523"></td>
        <td id="LC523" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> </span></td>
      </tr>
      <tr>
        <td id="L524" class="blob-num js-line-number" data-line-number="524"></td>
        <td id="LC524" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +    discuss at: http://kevin.vanzonneveld.net/techblog/article/javascript_equivalent_for_phps_substr/</span></td>
      </tr>
      <tr>
        <td id="L525" class="blob-num js-line-number" data-line-number="525"></td>
        <td id="LC525" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +       version: 804.1712</span></td>
      </tr>
      <tr>
        <td id="L526" class="blob-num js-line-number" data-line-number="526"></td>
        <td id="LC526" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +     original by: Martijn Wieringa</span></td>
      </tr>
      <tr>
        <td id="L527" class="blob-num js-line-number" data-line-number="527"></td>
        <td id="LC527" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *         example 1: substr(&#39;abcdef&#39;, 0, -1);</span></td>
      </tr>
      <tr>
        <td id="L528" class="blob-num js-line-number" data-line-number="528"></td>
        <td id="LC528" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *         returns 1: &#39;abcde&#39;</span></td>
      </tr>
      <tr>
        <td id="L529" class="blob-num js-line-number" data-line-number="529"></td>
        <td id="LC529" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L530" class="blob-num js-line-number" data-line-number="530"></td>
        <td id="LC530" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span>(f_start <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L531" class="blob-num js-line-number" data-line-number="531"></td>
        <td id="LC531" class="blob-code blob-code-inner js-file-line">        f_start <span class="pl-k">+=</span> <span class="pl-smi">f_string</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L532" class="blob-num js-line-number" data-line-number="532"></td>
        <td id="LC532" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L533" class="blob-num js-line-number" data-line-number="533"></td>
        <td id="LC533" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L534" class="blob-num js-line-number" data-line-number="534"></td>
        <td id="LC534" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span>(f_length <span class="pl-k">==</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L535" class="blob-num js-line-number" data-line-number="535"></td>
        <td id="LC535" class="blob-code blob-code-inner js-file-line">        f_length <span class="pl-k">=</span> <span class="pl-smi">f_string</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L536" class="blob-num js-line-number" data-line-number="536"></td>
        <td id="LC536" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> <span class="pl-k">if</span>(f_length <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>){</td>
      </tr>
      <tr>
        <td id="L537" class="blob-num js-line-number" data-line-number="537"></td>
        <td id="LC537" class="blob-code blob-code-inner js-file-line">        f_length <span class="pl-k">+=</span> <span class="pl-smi">f_string</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L538" class="blob-num js-line-number" data-line-number="538"></td>
        <td id="LC538" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L539" class="blob-num js-line-number" data-line-number="539"></td>
        <td id="LC539" class="blob-code blob-code-inner js-file-line">        f_length <span class="pl-k">+=</span> f_start;</td>
      </tr>
      <tr>
        <td id="L540" class="blob-num js-line-number" data-line-number="540"></td>
        <td id="LC540" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L541" class="blob-num js-line-number" data-line-number="541"></td>
        <td id="LC541" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L542" class="blob-num js-line-number" data-line-number="542"></td>
        <td id="LC542" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span>(f_length <span class="pl-k">&lt;</span> f_start) {</td>
      </tr>
      <tr>
        <td id="L543" class="blob-num js-line-number" data-line-number="543"></td>
        <td id="LC543" class="blob-code blob-code-inner js-file-line">        f_length <span class="pl-k">=</span> f_start;</td>
      </tr>
      <tr>
        <td id="L544" class="blob-num js-line-number" data-line-number="544"></td>
        <td id="LC544" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L545" class="blob-num js-line-number" data-line-number="545"></td>
        <td id="LC545" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L546" class="blob-num js-line-number" data-line-number="546"></td>
        <td id="LC546" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-smi">f_string</span>.<span class="pl-c1">substring</span>(f_start, f_length);</td>
      </tr>
      <tr>
        <td id="L547" class="blob-num js-line-number" data-line-number="547"></td>
        <td id="LC547" class="blob-code blob-code-inner js-file-line">}<span class="pl-c"><span class="pl-c">//</span> }}}</span></td>
      </tr>
      <tr>
        <td id="L548" class="blob-num js-line-number" data-line-number="548"></td>
        <td id="LC548" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L549" class="blob-num js-line-number" data-line-number="549"></td>
        <td id="LC549" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> {{{ trim</span></td>
      </tr>
      <tr>
        <td id="L550" class="blob-num js-line-number" data-line-number="550"></td>
        <td id="LC550" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">trim</span>( <span class="pl-smi">str</span>, <span class="pl-smi">charlist</span> ) {</td>
      </tr>
      <tr>
        <td id="L551" class="blob-num js-line-number" data-line-number="551"></td>
        <td id="LC551" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Strip whitespace (or other characters) from the beginning and end of a string</span></td>
      </tr>
      <tr>
        <td id="L552" class="blob-num js-line-number" data-line-number="552"></td>
        <td id="LC552" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> </span></td>
      </tr>
      <tr>
        <td id="L553" class="blob-num js-line-number" data-line-number="553"></td>
        <td id="LC553" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +    discuss at: http://kevin.vanzonneveld.net/techblog/article/javascript_equivalent_for_phps_trim/</span></td>
      </tr>
      <tr>
        <td id="L554" class="blob-num js-line-number" data-line-number="554"></td>
        <td id="LC554" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +       version: 804.1712</span></td>
      </tr>
      <tr>
        <td id="L555" class="blob-num js-line-number" data-line-number="555"></td>
        <td id="LC555" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)</span></td>
      </tr>
      <tr>
        <td id="L556" class="blob-num js-line-number" data-line-number="556"></td>
        <td id="LC556" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +   improved by: mdsjack (http://www.mdsjack.bo.it)</span></td>
      </tr>
      <tr>
        <td id="L557" class="blob-num js-line-number" data-line-number="557"></td>
        <td id="LC557" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +   improved by: Alexander Ermolaev (http://snippets.dzone.com/user/AlexanderErmolaev)</span></td>
      </tr>
      <tr>
        <td id="L558" class="blob-num js-line-number" data-line-number="558"></td>
        <td id="LC558" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +      input by: Erkekjetter</span></td>
      </tr>
      <tr>
        <td id="L559" class="blob-num js-line-number" data-line-number="559"></td>
        <td id="LC559" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)</span></td>
      </tr>
      <tr>
        <td id="L560" class="blob-num js-line-number" data-line-number="560"></td>
        <td id="LC560" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +      input by: DxGx</span></td>
      </tr>
      <tr>
        <td id="L561" class="blob-num js-line-number" data-line-number="561"></td>
        <td id="LC561" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +   improved by: Steven Levithan (http://blog.stevenlevithan.com)</span></td>
      </tr>
      <tr>
        <td id="L562" class="blob-num js-line-number" data-line-number="562"></td>
        <td id="LC562" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     example 1: trim(&#39;    Kevin van Zonneveld    &#39;);</span></td>
      </tr>
      <tr>
        <td id="L563" class="blob-num js-line-number" data-line-number="563"></td>
        <td id="LC563" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     returns 1: &#39;Kevin van Zonneveld&#39;</span></td>
      </tr>
      <tr>
        <td id="L564" class="blob-num js-line-number" data-line-number="564"></td>
        <td id="LC564" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     example 2: trim(&#39;Hello World&#39;, &#39;Hdle&#39;);</span></td>
      </tr>
      <tr>
        <td id="L565" class="blob-num js-line-number" data-line-number="565"></td>
        <td id="LC565" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     returns 2: &#39;o Wor&#39;</span></td>
      </tr>
      <tr>
        <td id="L566" class="blob-num js-line-number" data-line-number="566"></td>
        <td id="LC566" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>str) { <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>; }</td>
      </tr>
      <tr>
        <td id="L567" class="blob-num js-line-number" data-line-number="567"></td>
        <td id="LC567" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> whitespace;</td>
      </tr>
      <tr>
        <td id="L568" class="blob-num js-line-number" data-line-number="568"></td>
        <td id="LC568" class="blob-code blob-code-inner js-file-line">    </td>
      </tr>
      <tr>
        <td id="L569" class="blob-num js-line-number" data-line-number="569"></td>
        <td id="LC569" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span>(<span class="pl-k">!</span>charlist){</td>
      </tr>
      <tr>
        <td id="L570" class="blob-num js-line-number" data-line-number="570"></td>
        <td id="LC570" class="blob-code blob-code-inner js-file-line">        whitespace <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-cce">\n\r\t\f\x0b\xa0\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u200b\u2028\u2029\u3000</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L571" class="blob-num js-line-number" data-line-number="571"></td>
        <td id="LC571" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span>{</td>
      </tr>
      <tr>
        <td id="L572" class="blob-num js-line-number" data-line-number="572"></td>
        <td id="LC572" class="blob-code blob-code-inner js-file-line">        whitespace <span class="pl-k">=</span> <span class="pl-smi">charlist</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>(<span class="pl-c1">[<span class="pl-cce">\[\]\(\)\.\?\/\*\{\}\+\$\^\:</span>]</span>)<span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\$</span>1<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L573" class="blob-num js-line-number" data-line-number="573"></td>
        <td id="LC573" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L574" class="blob-num js-line-number" data-line-number="574"></td>
        <td id="LC574" class="blob-code blob-code-inner js-file-line">  </td>
      </tr>
      <tr>
        <td id="L575" class="blob-num js-line-number" data-line-number="575"></td>
        <td id="LC575" class="blob-code blob-code-inner js-file-line">	<span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> <span class="pl-smi">str</span>.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L576" class="blob-num js-line-number" data-line-number="576"></td>
        <td id="LC576" class="blob-code blob-code-inner js-file-line">		<span class="pl-k">if</span> (<span class="pl-smi">whitespace</span>.<span class="pl-c1">indexOf</span>(<span class="pl-smi">str</span>.<span class="pl-c1">charAt</span>(i)) <span class="pl-k">===</span> <span class="pl-k">-</span><span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L577" class="blob-num js-line-number" data-line-number="577"></td>
        <td id="LC577" class="blob-code blob-code-inner js-file-line">		str <span class="pl-k">=</span> <span class="pl-smi">str</span>.<span class="pl-c1">substring</span>(i);</td>
      </tr>
      <tr>
        <td id="L578" class="blob-num js-line-number" data-line-number="578"></td>
        <td id="LC578" class="blob-code blob-code-inner js-file-line">		<span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L579" class="blob-num js-line-number" data-line-number="579"></td>
        <td id="LC579" class="blob-code blob-code-inner js-file-line">		}</td>
      </tr>
      <tr>
        <td id="L580" class="blob-num js-line-number" data-line-number="580"></td>
        <td id="LC580" class="blob-code blob-code-inner js-file-line">	}</td>
      </tr>
      <tr>
        <td id="L581" class="blob-num js-line-number" data-line-number="581"></td>
        <td id="LC581" class="blob-code blob-code-inner js-file-line">	<span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-smi">str</span>.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>; i <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>; i<span class="pl-k">--</span>) {</td>
      </tr>
      <tr>
        <td id="L582" class="blob-num js-line-number" data-line-number="582"></td>
        <td id="LC582" class="blob-code blob-code-inner js-file-line">		<span class="pl-k">if</span> (<span class="pl-smi">whitespace</span>.<span class="pl-c1">indexOf</span>(<span class="pl-smi">str</span>.<span class="pl-c1">charAt</span>(i)) <span class="pl-k">===</span> <span class="pl-k">-</span><span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L583" class="blob-num js-line-number" data-line-number="583"></td>
        <td id="LC583" class="blob-code blob-code-inner js-file-line">			str <span class="pl-k">=</span> <span class="pl-smi">str</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>, i <span class="pl-k">+</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L584" class="blob-num js-line-number" data-line-number="584"></td>
        <td id="LC584" class="blob-code blob-code-inner js-file-line">			<span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L585" class="blob-num js-line-number" data-line-number="585"></td>
        <td id="LC585" class="blob-code blob-code-inner js-file-line">    	}</td>
      </tr>
      <tr>
        <td id="L586" class="blob-num js-line-number" data-line-number="586"></td>
        <td id="LC586" class="blob-code blob-code-inner js-file-line">	}</td>
      </tr>
      <tr>
        <td id="L587" class="blob-num js-line-number" data-line-number="587"></td>
        <td id="LC587" class="blob-code blob-code-inner js-file-line">	<span class="pl-k">return</span> <span class="pl-smi">whitespace</span>.<span class="pl-c1">indexOf</span>(<span class="pl-smi">str</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>)) <span class="pl-k">===</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">?</span> str <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L588" class="blob-num js-line-number" data-line-number="588"></td>
        <td id="LC588" class="blob-code blob-code-inner js-file-line">}<span class="pl-c"><span class="pl-c">//</span> }}}</span></td>
      </tr>
      <tr>
        <td id="L589" class="blob-num js-line-number" data-line-number="589"></td>
        <td id="LC589" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L590" class="blob-num js-line-number" data-line-number="590"></td>
        <td id="LC590" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L591" class="blob-num js-line-number" data-line-number="591"></td>
        <td id="LC591" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> {{{ wordwrap</span></td>
      </tr>
      <tr>
        <td id="L592" class="blob-num js-line-number" data-line-number="592"></td>
        <td id="LC592" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">wordwrap</span>( <span class="pl-smi">str</span>, <span class="pl-smi">int_width</span>, <span class="pl-smi">str_break</span>, <span class="pl-smi">cut</span> ) {</td>
      </tr>
      <tr>
        <td id="L593" class="blob-num js-line-number" data-line-number="593"></td>
        <td id="LC593" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Wraps a string to a given number of characters</span></td>
      </tr>
      <tr>
        <td id="L594" class="blob-num js-line-number" data-line-number="594"></td>
        <td id="LC594" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> </span></td>
      </tr>
      <tr>
        <td id="L595" class="blob-num js-line-number" data-line-number="595"></td>
        <td id="LC595" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +    discuss at: http://kevin.vanzonneveld.net/techblog/article/javascript_equivalent_for_phps_wordwrap/</span></td>
      </tr>
      <tr>
        <td id="L596" class="blob-num js-line-number" data-line-number="596"></td>
        <td id="LC596" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +       version: 804.1715</span></td>
      </tr>
      <tr>
        <td id="L597" class="blob-num js-line-number" data-line-number="597"></td>
        <td id="LC597" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +   original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)</span></td>
      </tr>
      <tr>
        <td id="L598" class="blob-num js-line-number" data-line-number="598"></td>
        <td id="LC598" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +   improved by: Nick Callen</span></td>
      </tr>
      <tr>
        <td id="L599" class="blob-num js-line-number" data-line-number="599"></td>
        <td id="LC599" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +    revised by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)</span></td>
      </tr>
      <tr>
        <td id="L600" class="blob-num js-line-number" data-line-number="600"></td>
        <td id="LC600" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     example 1: wordwrap(&#39;Kevin van Zonneveld&#39;, 6, &#39;|&#39;, true);</span></td>
      </tr>
      <tr>
        <td id="L601" class="blob-num js-line-number" data-line-number="601"></td>
        <td id="LC601" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     returns 1: &#39;Kevin |van |Zonnev|eld&#39;</span></td>
      </tr>
      <tr>
        <td id="L602" class="blob-num js-line-number" data-line-number="602"></td>
        <td id="LC602" class="blob-code blob-code-inner js-file-line">    </td>
      </tr>
      <tr>
        <td id="L603" class="blob-num js-line-number" data-line-number="603"></td>
        <td id="LC603" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> m <span class="pl-k">=</span> int_width, b <span class="pl-k">=</span> str_break, c <span class="pl-k">=</span> cut;</td>
      </tr>
      <tr>
        <td id="L604" class="blob-num js-line-number" data-line-number="604"></td>
        <td id="LC604" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> i, j, l, s, r;</td>
      </tr>
      <tr>
        <td id="L605" class="blob-num js-line-number" data-line-number="605"></td>
        <td id="LC605" class="blob-code blob-code-inner js-file-line">    </td>
      </tr>
      <tr>
        <td id="L606" class="blob-num js-line-number" data-line-number="606"></td>
        <td id="LC606" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span>(m <span class="pl-k">&lt;</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L607" class="blob-num js-line-number" data-line-number="607"></td>
        <td id="LC607" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> str;</td>
      </tr>
      <tr>
        <td id="L608" class="blob-num js-line-number" data-line-number="608"></td>
        <td id="LC608" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L609" class="blob-num js-line-number" data-line-number="609"></td>
        <td id="LC609" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span>(i <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, l <span class="pl-k">=</span> (r <span class="pl-k">=</span> <span class="pl-smi">str</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>)).<span class="pl-c1">length</span>; <span class="pl-k">++</span>i <span class="pl-k">&lt;</span> l; r[i] <span class="pl-k">+=</span> s) {</td>
      </tr>
      <tr>
        <td id="L610" class="blob-num js-line-number" data-line-number="610"></td>
        <td id="LC610" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span>(s <span class="pl-k">=</span> r[i], r[i] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>; <span class="pl-smi">s</span>.<span class="pl-c1">length</span> <span class="pl-k">&gt;</span> m; r[i] <span class="pl-k">+=</span> <span class="pl-smi">s</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>, j) <span class="pl-k">+</span> ((s <span class="pl-k">=</span> <span class="pl-smi">s</span>.<span class="pl-c1">slice</span>(j)).<span class="pl-c1">length</span> <span class="pl-k">?</span> b <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)){</td>
      </tr>
      <tr>
        <td id="L611" class="blob-num js-line-number" data-line-number="611"></td>
        <td id="LC611" class="blob-code blob-code-inner js-file-line">            j <span class="pl-k">=</span> c <span class="pl-k">==</span> <span class="pl-c1">2</span> <span class="pl-k">||</span> (j <span class="pl-k">=</span> <span class="pl-smi">s</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>, m <span class="pl-k">+</span> <span class="pl-c1">1</span>).<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\S</span><span class="pl-k">*</span>(<span class="pl-c1">\s</span>)<span class="pl-k">?</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>))[<span class="pl-c1">1</span>] <span class="pl-k">?</span> m <span class="pl-k">:</span> <span class="pl-smi">j</span>.<span class="pl-c1">input</span>.<span class="pl-c1">length</span> <span class="pl-k">-</span> j[<span class="pl-c1">0</span>].<span class="pl-c1">length</span> <span class="pl-k">||</span> c <span class="pl-k">==</span> <span class="pl-c1">1</span> <span class="pl-k">&amp;&amp;</span> m <span class="pl-k">||</span> <span class="pl-smi">j</span>.<span class="pl-c1">input</span>.<span class="pl-c1">length</span> <span class="pl-k">+</span> (j <span class="pl-k">=</span> <span class="pl-smi">s</span>.<span class="pl-c1">slice</span>(m).<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">\S</span><span class="pl-k">*</span><span class="pl-pds">/</span></span>)).<span class="pl-c1">input</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L612" class="blob-num js-line-number" data-line-number="612"></td>
        <td id="LC612" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L613" class="blob-num js-line-number" data-line-number="613"></td>
        <td id="LC613" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L614" class="blob-num js-line-number" data-line-number="614"></td>
        <td id="LC614" class="blob-code blob-code-inner js-file-line">    </td>
      </tr>
      <tr>
        <td id="L615" class="blob-num js-line-number" data-line-number="615"></td>
        <td id="LC615" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-smi">r</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L616" class="blob-num js-line-number" data-line-number="616"></td>
        <td id="LC616" class="blob-code blob-code-inner js-file-line">}<span class="pl-c"><span class="pl-c">//</span> }}}</span></td>
      </tr>
      <tr>
        <td id="L617" class="blob-num js-line-number" data-line-number="617"></td>
        <td id="LC617" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L618" class="blob-num js-line-number" data-line-number="618"></td>
        <td id="LC618" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> {{{ is_string</span></td>
      </tr>
      <tr>
        <td id="L619" class="blob-num js-line-number" data-line-number="619"></td>
        <td id="LC619" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">is_string</span>( <span class="pl-smi">mixed_var</span> ){</td>
      </tr>
      <tr>
        <td id="L620" class="blob-num js-line-number" data-line-number="620"></td>
        <td id="LC620" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Find whether the type of a variable is string</span></td>
      </tr>
      <tr>
        <td id="L621" class="blob-num js-line-number" data-line-number="621"></td>
        <td id="LC621" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> </span></td>
      </tr>
      <tr>
        <td id="L622" class="blob-num js-line-number" data-line-number="622"></td>
        <td id="LC622" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +    discuss at: http://kevin.vanzonneveld.net/techblog/article/javascript_equivalent_for_phps_is_string/</span></td>
      </tr>
      <tr>
        <td id="L623" class="blob-num js-line-number" data-line-number="623"></td>
        <td id="LC623" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +       version: 804.1712</span></td>
      </tr>
      <tr>
        <td id="L624" class="blob-num js-line-number" data-line-number="624"></td>
        <td id="LC624" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)</span></td>
      </tr>
      <tr>
        <td id="L625" class="blob-num js-line-number" data-line-number="625"></td>
        <td id="LC625" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     example 1: is_string(&#39;23&#39;);</span></td>
      </tr>
      <tr>
        <td id="L626" class="blob-num js-line-number" data-line-number="626"></td>
        <td id="LC626" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     returns 1: true</span></td>
      </tr>
      <tr>
        <td id="L627" class="blob-num js-line-number" data-line-number="627"></td>
        <td id="LC627" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     example 2: is_string(23.5);</span></td>
      </tr>
      <tr>
        <td id="L628" class="blob-num js-line-number" data-line-number="628"></td>
        <td id="LC628" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     returns 2: false</span></td>
      </tr>
      <tr>
        <td id="L629" class="blob-num js-line-number" data-line-number="629"></td>
        <td id="LC629" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L630" class="blob-num js-line-number" data-line-number="630"></td>
        <td id="LC630" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> (<span class="pl-k">typeof</span>( mixed_var ) <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>string<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L631" class="blob-num js-line-number" data-line-number="631"></td>
        <td id="LC631" class="blob-code blob-code-inner js-file-line">}<span class="pl-c"><span class="pl-c">//</span> }}}</span></td>
      </tr>
      <tr>
        <td id="L632" class="blob-num js-line-number" data-line-number="632"></td>
        <td id="LC632" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L633" class="blob-num js-line-number" data-line-number="633"></td>
        <td id="LC633" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L634" class="blob-num js-line-number" data-line-number="634"></td>
        <td id="LC634" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> {{{ ord</span></td>
      </tr>
      <tr>
        <td id="L635" class="blob-num js-line-number" data-line-number="635"></td>
        <td id="LC635" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">ord</span>( <span class="pl-smi">string</span> ) {</td>
      </tr>
      <tr>
        <td id="L636" class="blob-num js-line-number" data-line-number="636"></td>
        <td id="LC636" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Return ASCII value of character</span></td>
      </tr>
      <tr>
        <td id="L637" class="blob-num js-line-number" data-line-number="637"></td>
        <td id="LC637" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> </span></td>
      </tr>
      <tr>
        <td id="L638" class="blob-num js-line-number" data-line-number="638"></td>
        <td id="LC638" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +    discuss at: http://kevin.vanzonneveld.net/techblog/article/javascript_equivalent_for_phps_ord/</span></td>
      </tr>
      <tr>
        <td id="L639" class="blob-num js-line-number" data-line-number="639"></td>
        <td id="LC639" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +       version: 804.1712</span></td>
      </tr>
      <tr>
        <td id="L640" class="blob-num js-line-number" data-line-number="640"></td>
        <td id="LC640" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)</span></td>
      </tr>
      <tr>
        <td id="L641" class="blob-num js-line-number" data-line-number="641"></td>
        <td id="LC641" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     example 1: ord(&#39;K&#39;);</span></td>
      </tr>
      <tr>
        <td id="L642" class="blob-num js-line-number" data-line-number="642"></td>
        <td id="LC642" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     returns 1: 75</span></td>
      </tr>
      <tr>
        <td id="L643" class="blob-num js-line-number" data-line-number="643"></td>
        <td id="LC643" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L644" class="blob-num js-line-number" data-line-number="644"></td>
        <td id="LC644" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-smi">string</span>.<span class="pl-c1">charCodeAt</span>(<span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L645" class="blob-num js-line-number" data-line-number="645"></td>
        <td id="LC645" class="blob-code blob-code-inner js-file-line">}<span class="pl-c"><span class="pl-c">//</span> }}}</span></td>
      </tr>
      <tr>
        <td id="L646" class="blob-num js-line-number" data-line-number="646"></td>
        <td id="LC646" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L647" class="blob-num js-line-number" data-line-number="647"></td>
        <td id="LC647" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> {{{ array_unique</span></td>
      </tr>
      <tr>
        <td id="L648" class="blob-num js-line-number" data-line-number="648"></td>
        <td id="LC648" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">array_unique</span>( <span class="pl-smi">array</span> ) {</td>
      </tr>
      <tr>
        <td id="L649" class="blob-num js-line-number" data-line-number="649"></td>
        <td id="LC649" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Removes duplicate values from an array</span></td>
      </tr>
      <tr>
        <td id="L650" class="blob-num js-line-number" data-line-number="650"></td>
        <td id="LC650" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> </span></td>
      </tr>
      <tr>
        <td id="L651" class="blob-num js-line-number" data-line-number="651"></td>
        <td id="LC651" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +    discuss at: http://kevin.vanzonneveld.net/techblog/article/javascript_equivalent_for_phps_array_unique/</span></td>
      </tr>
      <tr>
        <td id="L652" class="blob-num js-line-number" data-line-number="652"></td>
        <td id="LC652" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +       version: 805.211</span></td>
      </tr>
      <tr>
        <td id="L653" class="blob-num js-line-number" data-line-number="653"></td>
        <td id="LC653" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +   original by: Carlos R. L. Rodrigues (http://www.jsfromhell.com)</span></td>
      </tr>
      <tr>
        <td id="L654" class="blob-num js-line-number" data-line-number="654"></td>
        <td id="LC654" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +      input by: duncan</span></td>
      </tr>
      <tr>
        <td id="L655" class="blob-num js-line-number" data-line-number="655"></td>
        <td id="LC655" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +    bufixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)</span></td>
      </tr>
      <tr>
        <td id="L656" class="blob-num js-line-number" data-line-number="656"></td>
        <td id="LC656" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     example 1: array_unique([&#39;Kevin&#39;,&#39;Kevin&#39;,&#39;van&#39;,&#39;Zonneveld&#39;]);</span></td>
      </tr>
      <tr>
        <td id="L657" class="blob-num js-line-number" data-line-number="657"></td>
        <td id="LC657" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     returns 1: [&#39;Kevin&#39;,&#39;van&#39;,&#39;Zonneveld&#39;]</span></td>
      </tr>
      <tr>
        <td id="L658" class="blob-num js-line-number" data-line-number="658"></td>
        <td id="LC658" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L659" class="blob-num js-line-number" data-line-number="659"></td>
        <td id="LC659" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> p, i, j, tmp_arr <span class="pl-k">=</span> array;</td>
      </tr>
      <tr>
        <td id="L660" class="blob-num js-line-number" data-line-number="660"></td>
        <td id="LC660" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span>(i <span class="pl-k">=</span> <span class="pl-smi">tmp_arr</span>.<span class="pl-c1">length</span>; i;){</td>
      </tr>
      <tr>
        <td id="L661" class="blob-num js-line-number" data-line-number="661"></td>
        <td id="LC661" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span>(p <span class="pl-k">=</span> <span class="pl-k">--</span>i; p <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>;){</td>
      </tr>
      <tr>
        <td id="L662" class="blob-num js-line-number" data-line-number="662"></td>
        <td id="LC662" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span>(tmp_arr[i] <span class="pl-k">===</span> tmp_arr[<span class="pl-k">--</span>p]){</td>
      </tr>
      <tr>
        <td id="L663" class="blob-num js-line-number" data-line-number="663"></td>
        <td id="LC663" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">for</span>(j <span class="pl-k">=</span> p; <span class="pl-k">--</span>p <span class="pl-k">&amp;&amp;</span> tmp_arr[i] <span class="pl-k">===</span> tmp_arr[p];);</td>
      </tr>
      <tr>
        <td id="L664" class="blob-num js-line-number" data-line-number="664"></td>
        <td id="LC664" class="blob-code blob-code-inner js-file-line">                i <span class="pl-k">-=</span> <span class="pl-smi">tmp_arr</span>.<span class="pl-c1">splice</span>(p <span class="pl-k">+</span> <span class="pl-c1">1</span>, j <span class="pl-k">-</span> p).<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L665" class="blob-num js-line-number" data-line-number="665"></td>
        <td id="LC665" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L666" class="blob-num js-line-number" data-line-number="666"></td>
        <td id="LC666" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L667" class="blob-num js-line-number" data-line-number="667"></td>
        <td id="LC667" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L668" class="blob-num js-line-number" data-line-number="668"></td>
        <td id="LC668" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L669" class="blob-num js-line-number" data-line-number="669"></td>
        <td id="LC669" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> tmp_arr;</td>
      </tr>
      <tr>
        <td id="L670" class="blob-num js-line-number" data-line-number="670"></td>
        <td id="LC670" class="blob-code blob-code-inner js-file-line">}<span class="pl-c"><span class="pl-c">//</span> }}}</span></td>
      </tr>
      <tr>
        <td id="L671" class="blob-num js-line-number" data-line-number="671"></td>
        <td id="LC671" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L672" class="blob-num js-line-number" data-line-number="672"></td>
        <td id="LC672" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> {{{ print_r</span></td>
      </tr>
      <tr>
        <td id="L673" class="blob-num js-line-number" data-line-number="673"></td>
        <td id="LC673" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">print_r</span>( <span class="pl-smi">array</span>, <span class="pl-smi">return_val</span> ) {</td>
      </tr>
      <tr>
        <td id="L674" class="blob-num js-line-number" data-line-number="674"></td>
        <td id="LC674" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Prints human-readable information about a variable</span></td>
      </tr>
      <tr>
        <td id="L675" class="blob-num js-line-number" data-line-number="675"></td>
        <td id="LC675" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> </span></td>
      </tr>
      <tr>
        <td id="L676" class="blob-num js-line-number" data-line-number="676"></td>
        <td id="LC676" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +    discuss at: http://kevin.vanzonneveld.net/techblog/article/javascript_equivalent_for_phps_print_r/</span></td>
      </tr>
      <tr>
        <td id="L677" class="blob-num js-line-number" data-line-number="677"></td>
        <td id="LC677" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +       version: 805.2023</span></td>
      </tr>
      <tr>
        <td id="L678" class="blob-num js-line-number" data-line-number="678"></td>
        <td id="LC678" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +   original by: Michael White (http://crestidg.com)</span></td>
      </tr>
      <tr>
        <td id="L679" class="blob-num js-line-number" data-line-number="679"></td>
        <td id="LC679" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +   improved by: Ben Bryan</span></td>
      </tr>
      <tr>
        <td id="L680" class="blob-num js-line-number" data-line-number="680"></td>
        <td id="LC680" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     example 1: print_r(1, true);</span></td>
      </tr>
      <tr>
        <td id="L681" class="blob-num js-line-number" data-line-number="681"></td>
        <td id="LC681" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     returns 1: 1</span></td>
      </tr>
      <tr>
        <td id="L682" class="blob-num js-line-number" data-line-number="682"></td>
        <td id="LC682" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L683" class="blob-num js-line-number" data-line-number="683"></td>
        <td id="LC683" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> output <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>, pad_char <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>, pad_val <span class="pl-k">=</span> <span class="pl-c1">4</span>;</td>
      </tr>
      <tr>
        <td id="L684" class="blob-num js-line-number" data-line-number="684"></td>
        <td id="LC684" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L685" class="blob-num js-line-number" data-line-number="685"></td>
        <td id="LC685" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-en">formatArray</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">obj</span>, <span class="pl-smi">cur_depth</span>, <span class="pl-smi">pad_val</span>, <span class="pl-smi">pad_char</span>) {</td>
      </tr>
      <tr>
        <td id="L686" class="blob-num js-line-number" data-line-number="686"></td>
        <td id="LC686" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (cur_depth <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L687" class="blob-num js-line-number" data-line-number="687"></td>
        <td id="LC687" class="blob-code blob-code-inner js-file-line">            cur_depth<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L688" class="blob-num js-line-number" data-line-number="688"></td>
        <td id="LC688" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L689" class="blob-num js-line-number" data-line-number="689"></td>
        <td id="LC689" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L690" class="blob-num js-line-number" data-line-number="690"></td>
        <td id="LC690" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> base_pad <span class="pl-k">=</span> <span class="pl-en">repeat_char</span>(pad_val<span class="pl-k">*</span>cur_depth, pad_char);</td>
      </tr>
      <tr>
        <td id="L691" class="blob-num js-line-number" data-line-number="691"></td>
        <td id="LC691" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> thick_pad <span class="pl-k">=</span> <span class="pl-en">repeat_char</span>(pad_val<span class="pl-k">*</span>(cur_depth<span class="pl-k">+</span><span class="pl-c1">1</span>), pad_char);</td>
      </tr>
      <tr>
        <td id="L692" class="blob-num js-line-number" data-line-number="692"></td>
        <td id="LC692" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> str <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L693" class="blob-num js-line-number" data-line-number="693"></td>
        <td id="LC693" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L694" class="blob-num js-line-number" data-line-number="694"></td>
        <td id="LC694" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (obj <span class="pl-k">instanceof</span> <span class="pl-c1">Array</span> <span class="pl-k">||</span> obj <span class="pl-k">instanceof</span> <span class="pl-c1">Object</span>) {</td>
      </tr>
      <tr>
        <td id="L695" class="blob-num js-line-number" data-line-number="695"></td>
        <td id="LC695" class="blob-code blob-code-inner js-file-line">            str <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>Array<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> base_pad <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L696" class="blob-num js-line-number" data-line-number="696"></td>
        <td id="LC696" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (<span class="pl-k">var</span> key <span class="pl-k">in</span> obj) {</td>
      </tr>
      <tr>
        <td id="L697" class="blob-num js-line-number" data-line-number="697"></td>
        <td id="LC697" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (obj[key] <span class="pl-k">instanceof</span> <span class="pl-c1">Array</span> <span class="pl-k">||</span> obj[key] <span class="pl-k">instanceof</span> <span class="pl-c1">Object</span>) {</td>
      </tr>
      <tr>
        <td id="L698" class="blob-num js-line-number" data-line-number="698"></td>
        <td id="LC698" class="blob-code blob-code-inner js-file-line">                    str <span class="pl-k">+=</span> thick_pad <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>[<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>key<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>] =&gt; <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-en">formatArray</span>(obj[key], cur_depth<span class="pl-k">+</span><span class="pl-c1">1</span>, pad_val, pad_char);</td>
      </tr>
      <tr>
        <td id="L699" class="blob-num js-line-number" data-line-number="699"></td>
        <td id="LC699" class="blob-code blob-code-inner js-file-line">                } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L700" class="blob-num js-line-number" data-line-number="700"></td>
        <td id="LC700" class="blob-code blob-code-inner js-file-line">                    str <span class="pl-k">+=</span> thick_pad <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>[<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>key<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>] =&gt; <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> obj[key] <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L701" class="blob-num js-line-number" data-line-number="701"></td>
        <td id="LC701" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L702" class="blob-num js-line-number" data-line-number="702"></td>
        <td id="LC702" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L703" class="blob-num js-line-number" data-line-number="703"></td>
        <td id="LC703" class="blob-code blob-code-inner js-file-line">            str <span class="pl-k">+=</span> base_pad <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L704" class="blob-num js-line-number" data-line-number="704"></td>
        <td id="LC704" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L705" class="blob-num js-line-number" data-line-number="705"></td>
        <td id="LC705" class="blob-code blob-code-inner js-file-line">            str <span class="pl-k">=</span> <span class="pl-smi">obj</span>.<span class="pl-c1">toString</span>();</td>
      </tr>
      <tr>
        <td id="L706" class="blob-num js-line-number" data-line-number="706"></td>
        <td id="LC706" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L707" class="blob-num js-line-number" data-line-number="707"></td>
        <td id="LC707" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L708" class="blob-num js-line-number" data-line-number="708"></td>
        <td id="LC708" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> str;</td>
      </tr>
      <tr>
        <td id="L709" class="blob-num js-line-number" data-line-number="709"></td>
        <td id="LC709" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L710" class="blob-num js-line-number" data-line-number="710"></td>
        <td id="LC710" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L711" class="blob-num js-line-number" data-line-number="711"></td>
        <td id="LC711" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-en">repeat_char</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">len</span>, <span class="pl-smi">pad_char</span>) {</td>
      </tr>
      <tr>
        <td id="L712" class="blob-num js-line-number" data-line-number="712"></td>
        <td id="LC712" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> str <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L713" class="blob-num js-line-number" data-line-number="713"></td>
        <td id="LC713" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> len; i<span class="pl-k">++</span>) { </td>
      </tr>
      <tr>
        <td id="L714" class="blob-num js-line-number" data-line-number="714"></td>
        <td id="LC714" class="blob-code blob-code-inner js-file-line">            str <span class="pl-k">+=</span> pad_char; </td>
      </tr>
      <tr>
        <td id="L715" class="blob-num js-line-number" data-line-number="715"></td>
        <td id="LC715" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L716" class="blob-num js-line-number" data-line-number="716"></td>
        <td id="LC716" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> str;</td>
      </tr>
      <tr>
        <td id="L717" class="blob-num js-line-number" data-line-number="717"></td>
        <td id="LC717" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L718" class="blob-num js-line-number" data-line-number="718"></td>
        <td id="LC718" class="blob-code blob-code-inner js-file-line">    output <span class="pl-k">=</span> <span class="pl-en">formatArray</span>(array, <span class="pl-c1">0</span>, pad_val, pad_char);</td>
      </tr>
      <tr>
        <td id="L719" class="blob-num js-line-number" data-line-number="719"></td>
        <td id="LC719" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L720" class="blob-num js-line-number" data-line-number="720"></td>
        <td id="LC720" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (return_val <span class="pl-k">!==</span> <span class="pl-c1">true</span>) {</td>
      </tr>
      <tr>
        <td id="L721" class="blob-num js-line-number" data-line-number="721"></td>
        <td id="LC721" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">document</span>.<span class="pl-c1">write</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;pre&gt;<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> output <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/pre&gt;<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L722" class="blob-num js-line-number" data-line-number="722"></td>
        <td id="LC722" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L723" class="blob-num js-line-number" data-line-number="723"></td>
        <td id="LC723" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L724" class="blob-num js-line-number" data-line-number="724"></td>
        <td id="LC724" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> output;</td>
      </tr>
      <tr>
        <td id="L725" class="blob-num js-line-number" data-line-number="725"></td>
        <td id="LC725" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L726" class="blob-num js-line-number" data-line-number="726"></td>
        <td id="LC726" class="blob-code blob-code-inner js-file-line">}<span class="pl-c"><span class="pl-c">//</span> }}}</span></td>
      </tr>
      <tr>
        <td id="L727" class="blob-num js-line-number" data-line-number="727"></td>
        <td id="LC727" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> {{{ is_array</span></td>
      </tr>
      <tr>
        <td id="L728" class="blob-num js-line-number" data-line-number="728"></td>
        <td id="LC728" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">is_array</span>( <span class="pl-smi">mixed_var</span> ) {</td>
      </tr>
      <tr>
        <td id="L729" class="blob-num js-line-number" data-line-number="729"></td>
        <td id="LC729" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Finds whether a variable is an array</span></td>
      </tr>
      <tr>
        <td id="L730" class="blob-num js-line-number" data-line-number="730"></td>
        <td id="LC730" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> </span></td>
      </tr>
      <tr>
        <td id="L731" class="blob-num js-line-number" data-line-number="731"></td>
        <td id="LC731" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +    discuss at: http://kevin.vanzonneveld.net/techblog/article/javascript_equivalent_for_phps_is_array/</span></td>
      </tr>
      <tr>
        <td id="L732" class="blob-num js-line-number" data-line-number="732"></td>
        <td id="LC732" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +       version: 804.1712</span></td>
      </tr>
      <tr>
        <td id="L733" class="blob-num js-line-number" data-line-number="733"></td>
        <td id="LC733" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)</span></td>
      </tr>
      <tr>
        <td id="L734" class="blob-num js-line-number" data-line-number="734"></td>
        <td id="LC734" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +   improved by: Legaev Andrey</span></td>
      </tr>
      <tr>
        <td id="L735" class="blob-num js-line-number" data-line-number="735"></td>
        <td id="LC735" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> +   bugfixed by: Cord</span></td>
      </tr>
      <tr>
        <td id="L736" class="blob-num js-line-number" data-line-number="736"></td>
        <td id="LC736" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     example 1: is_array([&#39;Kevin&#39;, &#39;van&#39;, &#39;Zonneveld&#39;]);</span></td>
      </tr>
      <tr>
        <td id="L737" class="blob-num js-line-number" data-line-number="737"></td>
        <td id="LC737" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     returns 1: true</span></td>
      </tr>
      <tr>
        <td id="L738" class="blob-num js-line-number" data-line-number="738"></td>
        <td id="LC738" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     example 2: is_array(&#39;Kevin van Zonneveld&#39;);</span></td>
      </tr>
      <tr>
        <td id="L739" class="blob-num js-line-number" data-line-number="739"></td>
        <td id="LC739" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> *     returns 2: false</span></td>
      </tr>
      <tr>
        <td id="L740" class="blob-num js-line-number" data-line-number="740"></td>
        <td id="LC740" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L741" class="blob-num js-line-number" data-line-number="741"></td>
        <td id="LC741" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> ( mixed_var <span class="pl-k">instanceof</span> <span class="pl-c1">Array</span> );</td>
      </tr>
      <tr>
        <td id="L742" class="blob-num js-line-number" data-line-number="742"></td>
        <td id="LC742" class="blob-code blob-code-inner js-file-line">}<span class="pl-c"><span class="pl-c">//</span> }}}</span></td>
      </tr>
      <tr>
        <td id="L743" class="blob-num js-line-number" data-line-number="743"></td>
        <td id="LC743" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L744" class="blob-num js-line-number" data-line-number="744"></td>
        <td id="LC744" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>------------END PHP FUNCTIONS --------------------------------------------------------------   //</span></td>
      </tr>
      <tr>
        <td id="L745" class="blob-num js-line-number" data-line-number="745"></td>
        <td id="LC745" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L746" class="blob-num js-line-number" data-line-number="746"></td>
        <td id="LC746" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L747" class="blob-num js-line-number" data-line-number="747"></td>
        <td id="LC747" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * BibTex</span></td>
      </tr>
      <tr>
        <td id="L748" class="blob-num js-line-number" data-line-number="748"></td>
        <td id="LC748" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L749" class="blob-num js-line-number" data-line-number="749"></td>
        <td id="LC749" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * A class which provides common methods to access and</span></td>
      </tr>
      <tr>
        <td id="L750" class="blob-num js-line-number" data-line-number="750"></td>
        <td id="LC750" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * create Strings in BibTex format+</span></td>
      </tr>
      <tr>
        <td id="L751" class="blob-num js-line-number" data-line-number="751"></td>
        <td id="LC751" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Example 1: Parsing a BibTex File and returning the number of entries</span></td>
      </tr>
      <tr>
        <td id="L752" class="blob-num js-line-number" data-line-number="752"></td>
        <td id="LC752" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;code&gt;</span></td>
      </tr>
      <tr>
        <td id="L753" class="blob-num js-line-number" data-line-number="753"></td>
        <td id="LC753" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * bibtex = new BibTex();</span></td>
      </tr>
      <tr>
        <td id="L754" class="blob-num js-line-number" data-line-number="754"></td>
        <td id="LC754" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * bibtex.content = &#39;....&#39;;</span></td>
      </tr>
      <tr>
        <td id="L755" class="blob-num js-line-number" data-line-number="755"></td>
        <td id="LC755" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L756" class="blob-num js-line-number" data-line-number="756"></td>
        <td id="LC756" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * bibtex.parse();</span></td>
      </tr>
      <tr>
        <td id="L757" class="blob-num js-line-number" data-line-number="757"></td>
        <td id="LC757" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * print &quot;There are &quot;+bibtex.amount()+&quot; entries&quot;;</span></td>
      </tr>
      <tr>
        <td id="L758" class="blob-num js-line-number" data-line-number="758"></td>
        <td id="LC758" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;/code&gt;</span></td>
      </tr>
      <tr>
        <td id="L759" class="blob-num js-line-number" data-line-number="759"></td>
        <td id="LC759" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Example 2: Parsing a BibTex File and getting all Titles</span></td>
      </tr>
      <tr>
        <td id="L760" class="blob-num js-line-number" data-line-number="760"></td>
        <td id="LC760" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;code&gt;</span></td>
      </tr>
      <tr>
        <td id="L761" class="blob-num js-line-number" data-line-number="761"></td>
        <td id="LC761" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * bibtex = new BibTex();</span></td>
      </tr>
      <tr>
        <td id="L762" class="blob-num js-line-number" data-line-number="762"></td>
        <td id="LC762" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * bibtex.content=&quot;...&quot;;</span></td>
      </tr>
      <tr>
        <td id="L763" class="blob-num js-line-number" data-line-number="763"></td>
        <td id="LC763" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * bibtex.parse();</span></td>
      </tr>
      <tr>
        <td id="L764" class="blob-num js-line-number" data-line-number="764"></td>
        <td id="LC764" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * for (var i in bibtex.data) {</span></td>
      </tr>
      <tr>
        <td id="L765" class="blob-num js-line-number" data-line-number="765"></td>
        <td id="LC765" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *  alert( bibtex.data[i][&#39;title&#39;]+&quot;&lt;br /&gt;&quot;);</span></td>
      </tr>
      <tr>
        <td id="L766" class="blob-num js-line-number" data-line-number="766"></td>
        <td id="LC766" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * }</span></td>
      </tr>
      <tr>
        <td id="L767" class="blob-num js-line-number" data-line-number="767"></td>
        <td id="LC767" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;/code&gt;</span></td>
      </tr>
      <tr>
        <td id="L768" class="blob-num js-line-number" data-line-number="768"></td>
        <td id="LC768" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Example 3: Adding an entry and printing it in BibTex Format</span></td>
      </tr>
      <tr>
        <td id="L769" class="blob-num js-line-number" data-line-number="769"></td>
        <td id="LC769" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;code&gt;</span></td>
      </tr>
      <tr>
        <td id="L770" class="blob-num js-line-number" data-line-number="770"></td>
        <td id="LC770" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * bibtex                         = new BibTex();</span></td>
      </tr>
      <tr>
        <td id="L771" class="blob-num js-line-number" data-line-number="771"></td>
        <td id="LC771" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * addarray                       = {}</span></td>
      </tr>
      <tr>
        <td id="L772" class="blob-num js-line-number" data-line-number="772"></td>
        <td id="LC772" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * addarray[&#39;entryType&#39;]          = &#39;Article&#39;;</span></td>
      </tr>
      <tr>
        <td id="L773" class="blob-num js-line-number" data-line-number="773"></td>
        <td id="LC773" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * addarray[&#39;cite&#39;]               = &#39;art2&#39;;</span></td>
      </tr>
      <tr>
        <td id="L774" class="blob-num js-line-number" data-line-number="774"></td>
        <td id="LC774" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * addarray[&#39;title&#39;]              = &#39;Titel2&#39;;</span></td>
      </tr>
      <tr>
        <td id="L775" class="blob-num js-line-number" data-line-number="775"></td>
        <td id="LC775" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * addarray[&#39;author&#39;]			  = [];</span></td>
      </tr>
      <tr>
        <td id="L776" class="blob-num js-line-number" data-line-number="776"></td>
        <td id="LC776" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * addarray[&#39;author&#39;][0][&#39;first&#39;] = &#39;John&#39;;</span></td>
      </tr>
      <tr>
        <td id="L777" class="blob-num js-line-number" data-line-number="777"></td>
        <td id="LC777" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * addarray[&#39;author&#39;][0][&#39;last&#39;]  = &#39;Doe&#39;;</span></td>
      </tr>
      <tr>
        <td id="L778" class="blob-num js-line-number" data-line-number="778"></td>
        <td id="LC778" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * addarray[&#39;author&#39;][1][&#39;first&#39;] = &#39;Jane&#39;;</span></td>
      </tr>
      <tr>
        <td id="L779" class="blob-num js-line-number" data-line-number="779"></td>
        <td id="LC779" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * addarray[&#39;author&#39;][1][&#39;last&#39;]  = &#39;Doe&#39;;</span></td>
      </tr>
      <tr>
        <td id="L780" class="blob-num js-line-number" data-line-number="780"></td>
        <td id="LC780" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * bibtex.addEntry(addarray);</span></td>
      </tr>
      <tr>
        <td id="L781" class="blob-num js-line-number" data-line-number="781"></td>
        <td id="LC781" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * alert( nl2br(bibtex.bibTex()));</span></td>
      </tr>
      <tr>
        <td id="L782" class="blob-num js-line-number" data-line-number="782"></td>
        <td id="LC782" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;/code&gt;</span></td>
      </tr>
      <tr>
        <td id="L783" class="blob-num js-line-number" data-line-number="783"></td>
        <td id="LC783" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L784" class="blob-num js-line-number" data-line-number="784"></td>
        <td id="LC784" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @category   Structures</span></td>
      </tr>
      <tr>
        <td id="L785" class="blob-num js-line-number" data-line-number="785"></td>
        <td id="LC785" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@package</span>    BibTex</span></td>
      </tr>
      <tr>
        <td id="L786" class="blob-num js-line-number" data-line-number="786"></td>
        <td id="LC786" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@author</span>     <span class="pl-en">Steve Hannah </span>&lt;shannah at sfu dot ca&gt;</span></td>
      </tr>
      <tr>
        <td id="L787" class="blob-num js-line-number" data-line-number="787"></td>
        <td id="LC787" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @adapted-from Structures_BibTex by  Elmar Pitschke &lt;elmar+pitschke@gmx+de&gt;</span></td>
      </tr>
      <tr>
        <td id="L788" class="blob-num js-line-number" data-line-number="788"></td>
        <td id="LC788" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@copyright</span>  2008 Simon Fraser University</span></td>
      </tr>
      <tr>
        <td id="L789" class="blob-num js-line-number" data-line-number="789"></td>
        <td id="LC789" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@license</span>    <span class="pl-smi">http://www.gnu.org/licenses/lgpl.html</span></span></td>
      </tr>
      <tr>
        <td id="L790" class="blob-num js-line-number" data-line-number="790"></td>
        <td id="LC790" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@version</span>    <span class="pl-smi">Release:</span> 0.1</span></td>
      </tr>
      <tr>
        <td id="L791" class="blob-num js-line-number" data-line-number="791"></td>
        <td id="LC791" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @link       http://webgroup.fas.sfu.ca/projects/JSBibTexParser</span></td>
      </tr>
      <tr>
        <td id="L792" class="blob-num js-line-number" data-line-number="792"></td>
        <td id="LC792" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L793" class="blob-num js-line-number" data-line-number="793"></td>
        <td id="LC793" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">BibTex</span>(<span class="pl-smi">options</span>)</td>
      </tr>
      <tr>
        <td id="L794" class="blob-num js-line-number" data-line-number="794"></td>
        <td id="LC794" class="blob-code blob-code-inner js-file-line">{</td>
      </tr>
      <tr>
        <td id="L795" class="blob-num js-line-number" data-line-number="795"></td>
        <td id="LC795" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L796" class="blob-num js-line-number" data-line-number="796"></td>
        <td id="LC796" class="blob-code blob-code-inner js-file-line">	<span class="pl-k">if</span> ( <span class="pl-k">typeof</span> options <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span> ) options <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L797" class="blob-num js-line-number" data-line-number="797"></td>
        <td id="LC797" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L798" class="blob-num js-line-number" data-line-number="798"></td>
        <td id="LC798" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Array with the BibTex Data</span></td>
      </tr>
      <tr>
        <td id="L799" class="blob-num js-line-number" data-line-number="799"></td>
        <td id="LC799" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L800" class="blob-num js-line-number" data-line-number="800"></td>
        <td id="LC800" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@access</span> <span class="pl-c1">public</span></span></td>
      </tr>
      <tr>
        <td id="L801" class="blob-num js-line-number" data-line-number="801"></td>
        <td id="LC801" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@var</span> <span class="pl-smi">array</span></span></td>
      </tr>
      <tr>
        <td id="L802" class="blob-num js-line-number" data-line-number="802"></td>
        <td id="LC802" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L803" class="blob-num js-line-number" data-line-number="803"></td>
        <td id="LC803" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">this</span>.<span class="pl-c1">data</span>;</td>
      </tr>
      <tr>
        <td id="L804" class="blob-num js-line-number" data-line-number="804"></td>
        <td id="LC804" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L805" class="blob-num js-line-number" data-line-number="805"></td>
        <td id="LC805" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * String with the BibTex content</span></td>
      </tr>
      <tr>
        <td id="L806" class="blob-num js-line-number" data-line-number="806"></td>
        <td id="LC806" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L807" class="blob-num js-line-number" data-line-number="807"></td>
        <td id="LC807" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@access</span> <span class="pl-c1">public</span></span></td>
      </tr>
      <tr>
        <td id="L808" class="blob-num js-line-number" data-line-number="808"></td>
        <td id="LC808" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@var</span> <span class="pl-smi">string</span></span></td>
      </tr>
      <tr>
        <td id="L809" class="blob-num js-line-number" data-line-number="809"></td>
        <td id="LC809" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L810" class="blob-num js-line-number" data-line-number="810"></td>
        <td id="LC810" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">this</span>.<span class="pl-c1">content</span>;</td>
      </tr>
      <tr>
        <td id="L811" class="blob-num js-line-number" data-line-number="811"></td>
        <td id="LC811" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L812" class="blob-num js-line-number" data-line-number="812"></td>
        <td id="LC812" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Array with possible Delimiters for the entries</span></td>
      </tr>
      <tr>
        <td id="L813" class="blob-num js-line-number" data-line-number="813"></td>
        <td id="LC813" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L814" class="blob-num js-line-number" data-line-number="814"></td>
        <td id="LC814" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@access</span> <span class="pl-c1">private</span></span></td>
      </tr>
      <tr>
        <td id="L815" class="blob-num js-line-number" data-line-number="815"></td>
        <td id="LC815" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@var</span> <span class="pl-smi">array</span></span></td>
      </tr>
      <tr>
        <td id="L816" class="blob-num js-line-number" data-line-number="816"></td>
        <td id="LC816" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L817" class="blob-num js-line-number" data-line-number="817"></td>
        <td id="LC817" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">this</span>.<span class="pl-smi">_delimiters</span>;</td>
      </tr>
      <tr>
        <td id="L818" class="blob-num js-line-number" data-line-number="818"></td>
        <td id="LC818" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L819" class="blob-num js-line-number" data-line-number="819"></td>
        <td id="LC819" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Array to store warnings</span></td>
      </tr>
      <tr>
        <td id="L820" class="blob-num js-line-number" data-line-number="820"></td>
        <td id="LC820" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L821" class="blob-num js-line-number" data-line-number="821"></td>
        <td id="LC821" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@access</span> <span class="pl-c1">public</span></span></td>
      </tr>
      <tr>
        <td id="L822" class="blob-num js-line-number" data-line-number="822"></td>
        <td id="LC822" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@var</span> <span class="pl-smi">array</span></span></td>
      </tr>
      <tr>
        <td id="L823" class="blob-num js-line-number" data-line-number="823"></td>
        <td id="LC823" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L824" class="blob-num js-line-number" data-line-number="824"></td>
        <td id="LC824" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">this</span>.<span class="pl-smi">warnings</span>;</td>
      </tr>
      <tr>
        <td id="L825" class="blob-num js-line-number" data-line-number="825"></td>
        <td id="LC825" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L826" class="blob-num js-line-number" data-line-number="826"></td>
        <td id="LC826" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Run-time configuration options</span></td>
      </tr>
      <tr>
        <td id="L827" class="blob-num js-line-number" data-line-number="827"></td>
        <td id="LC827" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L828" class="blob-num js-line-number" data-line-number="828"></td>
        <td id="LC828" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@access</span> <span class="pl-c1">private</span></span></td>
      </tr>
      <tr>
        <td id="L829" class="blob-num js-line-number" data-line-number="829"></td>
        <td id="LC829" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@var</span> <span class="pl-smi">array</span></span></td>
      </tr>
      <tr>
        <td id="L830" class="blob-num js-line-number" data-line-number="830"></td>
        <td id="LC830" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L831" class="blob-num js-line-number" data-line-number="831"></td>
        <td id="LC831" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">this</span>.<span class="pl-smi">_options</span>;</td>
      </tr>
      <tr>
        <td id="L832" class="blob-num js-line-number" data-line-number="832"></td>
        <td id="LC832" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L833" class="blob-num js-line-number" data-line-number="833"></td>
        <td id="LC833" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * RTF Format String</span></td>
      </tr>
      <tr>
        <td id="L834" class="blob-num js-line-number" data-line-number="834"></td>
        <td id="LC834" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L835" class="blob-num js-line-number" data-line-number="835"></td>
        <td id="LC835" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@access</span> <span class="pl-c1">public</span></span></td>
      </tr>
      <tr>
        <td id="L836" class="blob-num js-line-number" data-line-number="836"></td>
        <td id="LC836" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@var</span> <span class="pl-smi">string</span></span></td>
      </tr>
      <tr>
        <td id="L837" class="blob-num js-line-number" data-line-number="837"></td>
        <td id="LC837" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L838" class="blob-num js-line-number" data-line-number="838"></td>
        <td id="LC838" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">this</span>.<span class="pl-smi">rtfstring</span>;</td>
      </tr>
      <tr>
        <td id="L839" class="blob-num js-line-number" data-line-number="839"></td>
        <td id="LC839" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L840" class="blob-num js-line-number" data-line-number="840"></td>
        <td id="LC840" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * HTML Format String</span></td>
      </tr>
      <tr>
        <td id="L841" class="blob-num js-line-number" data-line-number="841"></td>
        <td id="LC841" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L842" class="blob-num js-line-number" data-line-number="842"></td>
        <td id="LC842" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@access</span> <span class="pl-c1">public</span></span></td>
      </tr>
      <tr>
        <td id="L843" class="blob-num js-line-number" data-line-number="843"></td>
        <td id="LC843" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@var</span> <span class="pl-smi">string</span></span></td>
      </tr>
      <tr>
        <td id="L844" class="blob-num js-line-number" data-line-number="844"></td>
        <td id="LC844" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L845" class="blob-num js-line-number" data-line-number="845"></td>
        <td id="LC845" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">this</span>.<span class="pl-smi">htmlstring</span>;</td>
      </tr>
      <tr>
        <td id="L846" class="blob-num js-line-number" data-line-number="846"></td>
        <td id="LC846" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L847" class="blob-num js-line-number" data-line-number="847"></td>
        <td id="LC847" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Array with the &quot;allowed&quot; entry types</span></td>
      </tr>
      <tr>
        <td id="L848" class="blob-num js-line-number" data-line-number="848"></td>
        <td id="LC848" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L849" class="blob-num js-line-number" data-line-number="849"></td>
        <td id="LC849" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@access</span> <span class="pl-c1">public</span></span></td>
      </tr>
      <tr>
        <td id="L850" class="blob-num js-line-number" data-line-number="850"></td>
        <td id="LC850" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@var</span> <span class="pl-smi">array</span></span></td>
      </tr>
      <tr>
        <td id="L851" class="blob-num js-line-number" data-line-number="851"></td>
        <td id="LC851" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L852" class="blob-num js-line-number" data-line-number="852"></td>
        <td id="LC852" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">this</span>.<span class="pl-smi">allowedEntryTypes</span>;</td>
      </tr>
      <tr>
        <td id="L853" class="blob-num js-line-number" data-line-number="853"></td>
        <td id="LC853" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L854" class="blob-num js-line-number" data-line-number="854"></td>
        <td id="LC854" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Author Format Strings</span></td>
      </tr>
      <tr>
        <td id="L855" class="blob-num js-line-number" data-line-number="855"></td>
        <td id="LC855" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L856" class="blob-num js-line-number" data-line-number="856"></td>
        <td id="LC856" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@access</span> <span class="pl-c1">public</span></span></td>
      </tr>
      <tr>
        <td id="L857" class="blob-num js-line-number" data-line-number="857"></td>
        <td id="LC857" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@var</span> <span class="pl-smi">string</span></span></td>
      </tr>
      <tr>
        <td id="L858" class="blob-num js-line-number" data-line-number="858"></td>
        <td id="LC858" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L859" class="blob-num js-line-number" data-line-number="859"></td>
        <td id="LC859" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">this</span>.<span class="pl-smi">authorstring</span>;</td>
      </tr>
      <tr>
        <td id="L860" class="blob-num js-line-number" data-line-number="860"></td>
        <td id="LC860" class="blob-code blob-code-inner js-file-line">    </td>
      </tr>
      <tr>
        <td id="L861" class="blob-num js-line-number" data-line-number="861"></td>
        <td id="LC861" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">this</span>.<span class="pl-smi">_delimiters</span>     <span class="pl-k">=</span> {<span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L862" class="blob-num js-line-number" data-line-number="862"></td>
        <td id="LC862" class="blob-code blob-code-inner js-file-line">                                        <span class="pl-s"><span class="pl-pds">&#39;</span>{<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>}<span class="pl-pds">&#39;</span></span>};</td>
      </tr>
      <tr>
        <td id="L863" class="blob-num js-line-number" data-line-number="863"></td>
        <td id="LC863" class="blob-code blob-code-inner js-file-line">	<span class="pl-c1">this</span>.<span class="pl-c1">data</span>            <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L864" class="blob-num js-line-number" data-line-number="864"></td>
        <td id="LC864" class="blob-code blob-code-inner js-file-line">	<span class="pl-c1">this</span>.<span class="pl-c1">content</span>         <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L865" class="blob-num js-line-number" data-line-number="865"></td>
        <td id="LC865" class="blob-code blob-code-inner js-file-line">	<span class="pl-c"><span class="pl-c">//</span>this._stripDelimiter = stripDel;</span></td>
      </tr>
      <tr>
        <td id="L866" class="blob-num js-line-number" data-line-number="866"></td>
        <td id="LC866" class="blob-code blob-code-inner js-file-line">	<span class="pl-c"><span class="pl-c">//</span>this._validate       = val;</span></td>
      </tr>
      <tr>
        <td id="L867" class="blob-num js-line-number" data-line-number="867"></td>
        <td id="LC867" class="blob-code blob-code-inner js-file-line">	<span class="pl-c1">this</span>.<span class="pl-smi">warnings</span>        <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L868" class="blob-num js-line-number" data-line-number="868"></td>
        <td id="LC868" class="blob-code blob-code-inner js-file-line">	<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>        <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L869" class="blob-num js-line-number" data-line-number="869"></td>
        <td id="LC869" class="blob-code blob-code-inner js-file-line">		<span class="pl-s"><span class="pl-pds">&#39;</span>stripDelimiter<span class="pl-pds">&#39;</span></span>    <span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L870" class="blob-num js-line-number" data-line-number="870"></td>
        <td id="LC870" class="blob-code blob-code-inner js-file-line">		<span class="pl-s"><span class="pl-pds">&#39;</span>validate<span class="pl-pds">&#39;</span></span>          <span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L871" class="blob-num js-line-number" data-line-number="871"></td>
        <td id="LC871" class="blob-code blob-code-inner js-file-line">		<span class="pl-s"><span class="pl-pds">&#39;</span>unwrap<span class="pl-pds">&#39;</span></span>            <span class="pl-k">:</span> <span class="pl-c1">false</span>,</td>
      </tr>
      <tr>
        <td id="L872" class="blob-num js-line-number" data-line-number="872"></td>
        <td id="LC872" class="blob-code blob-code-inner js-file-line">		<span class="pl-s"><span class="pl-pds">&#39;</span>wordWrapWidth<span class="pl-pds">&#39;</span></span>     <span class="pl-k">:</span> <span class="pl-c1">false</span>,</td>
      </tr>
      <tr>
        <td id="L873" class="blob-num js-line-number" data-line-number="873"></td>
        <td id="LC873" class="blob-code blob-code-inner js-file-line">		<span class="pl-s"><span class="pl-pds">&#39;</span>wordWrapBreak<span class="pl-pds">&#39;</span></span>     <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L874" class="blob-num js-line-number" data-line-number="874"></td>
        <td id="LC874" class="blob-code blob-code-inner js-file-line">		<span class="pl-s"><span class="pl-pds">&#39;</span>wordWrapCut<span class="pl-pds">&#39;</span></span>       <span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L875" class="blob-num js-line-number" data-line-number="875"></td>
        <td id="LC875" class="blob-code blob-code-inner js-file-line">		<span class="pl-s"><span class="pl-pds">&#39;</span>removeCurlyBraces<span class="pl-pds">&#39;</span></span> <span class="pl-k">:</span> <span class="pl-c1">false</span>,</td>
      </tr>
      <tr>
        <td id="L876" class="blob-num js-line-number" data-line-number="876"></td>
        <td id="LC876" class="blob-code blob-code-inner js-file-line">		<span class="pl-s"><span class="pl-pds">&#39;</span>extractAuthors<span class="pl-pds">&#39;</span></span>    <span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L877" class="blob-num js-line-number" data-line-number="877"></td>
        <td id="LC877" class="blob-code blob-code-inner js-file-line">	};</td>
      </tr>
      <tr>
        <td id="L878" class="blob-num js-line-number" data-line-number="878"></td>
        <td id="LC878" class="blob-code blob-code-inner js-file-line">	<span class="pl-k">for</span> (option <span class="pl-k">in</span> options) {</td>
      </tr>
      <tr>
        <td id="L879" class="blob-num js-line-number" data-line-number="879"></td>
        <td id="LC879" class="blob-code blob-code-inner js-file-line">		test <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">setOption</span>(option, options[option]);</td>
      </tr>
      <tr>
        <td id="L880" class="blob-num js-line-number" data-line-number="880"></td>
        <td id="LC880" class="blob-code blob-code-inner js-file-line">		<span class="pl-k">if</span> (<span class="pl-c1">this</span>.<span class="pl-en">isError</span>(test)) {</td>
      </tr>
      <tr>
        <td id="L881" class="blob-num js-line-number" data-line-number="881"></td>
        <td id="LC881" class="blob-code blob-code-inner js-file-line">			<span class="pl-c"><span class="pl-c">//</span>Currently nothing is done here, but it could for example raise an warning</span></td>
      </tr>
      <tr>
        <td id="L882" class="blob-num js-line-number" data-line-number="882"></td>
        <td id="LC882" class="blob-code blob-code-inner js-file-line">		}</td>
      </tr>
      <tr>
        <td id="L883" class="blob-num js-line-number" data-line-number="883"></td>
        <td id="LC883" class="blob-code blob-code-inner js-file-line">	}</td>
      </tr>
      <tr>
        <td id="L884" class="blob-num js-line-number" data-line-number="884"></td>
        <td id="LC884" class="blob-code blob-code-inner js-file-line">	<span class="pl-c1">this</span>.<span class="pl-smi">rtfstring</span>         <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>AUTHORS, &quot;{<span class="pl-cce">\b</span> TITLE}&quot;, {<span class="pl-cce">\i</span> JOURNAL}, YEAR<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L885" class="blob-num js-line-number" data-line-number="885"></td>
        <td id="LC885" class="blob-code blob-code-inner js-file-line">	<span class="pl-c1">this</span>.<span class="pl-smi">htmlstring</span>        <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>AUTHORS, &quot;&lt;strong&gt;TITLE&lt;/strong&gt;&quot;, &lt;em&gt;JOURNAL&lt;/em&gt;, YEAR&lt;br /&gt;<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L886" class="blob-num js-line-number" data-line-number="886"></td>
        <td id="LC886" class="blob-code blob-code-inner js-file-line">	<span class="pl-c1">this</span>.<span class="pl-smi">allowedEntryTypes</span> <span class="pl-k">=</span> <span class="pl-en">array</span>(</td>
      </tr>
      <tr>
        <td id="L887" class="blob-num js-line-number" data-line-number="887"></td>
        <td id="LC887" class="blob-code blob-code-inner js-file-line">		<span class="pl-s"><span class="pl-pds">&#39;</span>article<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L888" class="blob-num js-line-number" data-line-number="888"></td>
        <td id="LC888" class="blob-code blob-code-inner js-file-line">		<span class="pl-s"><span class="pl-pds">&#39;</span>book<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L889" class="blob-num js-line-number" data-line-number="889"></td>
        <td id="LC889" class="blob-code blob-code-inner js-file-line">		<span class="pl-s"><span class="pl-pds">&#39;</span>booklet<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L890" class="blob-num js-line-number" data-line-number="890"></td>
        <td id="LC890" class="blob-code blob-code-inner js-file-line">		<span class="pl-s"><span class="pl-pds">&#39;</span>confernce<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L891" class="blob-num js-line-number" data-line-number="891"></td>
        <td id="LC891" class="blob-code blob-code-inner js-file-line">		<span class="pl-s"><span class="pl-pds">&#39;</span>inbook<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L892" class="blob-num js-line-number" data-line-number="892"></td>
        <td id="LC892" class="blob-code blob-code-inner js-file-line">		<span class="pl-s"><span class="pl-pds">&#39;</span>incollection<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L893" class="blob-num js-line-number" data-line-number="893"></td>
        <td id="LC893" class="blob-code blob-code-inner js-file-line">		<span class="pl-s"><span class="pl-pds">&#39;</span>inproceedings<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L894" class="blob-num js-line-number" data-line-number="894"></td>
        <td id="LC894" class="blob-code blob-code-inner js-file-line">		<span class="pl-s"><span class="pl-pds">&#39;</span>manual<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L895" class="blob-num js-line-number" data-line-number="895"></td>
        <td id="LC895" class="blob-code blob-code-inner js-file-line">		<span class="pl-s"><span class="pl-pds">&#39;</span>masterthesis<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L896" class="blob-num js-line-number" data-line-number="896"></td>
        <td id="LC896" class="blob-code blob-code-inner js-file-line">		<span class="pl-s"><span class="pl-pds">&#39;</span>misc<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L897" class="blob-num js-line-number" data-line-number="897"></td>
        <td id="LC897" class="blob-code blob-code-inner js-file-line">		<span class="pl-s"><span class="pl-pds">&#39;</span>phdthesis<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L898" class="blob-num js-line-number" data-line-number="898"></td>
        <td id="LC898" class="blob-code blob-code-inner js-file-line">		<span class="pl-s"><span class="pl-pds">&#39;</span>proceedings<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L899" class="blob-num js-line-number" data-line-number="899"></td>
        <td id="LC899" class="blob-code blob-code-inner js-file-line">		<span class="pl-s"><span class="pl-pds">&#39;</span>techreport<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L900" class="blob-num js-line-number" data-line-number="900"></td>
        <td id="LC900" class="blob-code blob-code-inner js-file-line">		<span class="pl-s"><span class="pl-pds">&#39;</span>unpublished<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L901" class="blob-num js-line-number" data-line-number="901"></td>
        <td id="LC901" class="blob-code blob-code-inner js-file-line">	);</td>
      </tr>
      <tr>
        <td id="L902" class="blob-num js-line-number" data-line-number="902"></td>
        <td id="LC902" class="blob-code blob-code-inner js-file-line">	<span class="pl-c1">this</span>.<span class="pl-smi">authorstring</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>VON LAST, JR, FIRST<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L903" class="blob-num js-line-number" data-line-number="903"></td>
        <td id="LC903" class="blob-code blob-code-inner js-file-line">    </td>
      </tr>
      <tr>
        <td id="L904" class="blob-num js-line-number" data-line-number="904"></td>
        <td id="LC904" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L905" class="blob-num js-line-number" data-line-number="905"></td>
        <td id="LC905" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L906" class="blob-num js-line-number" data-line-number="906"></td>
        <td id="LC906" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L907" class="blob-num js-line-number" data-line-number="907"></td>
        <td id="LC907" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">BibTex</span>.<span class="pl-c1">prototype</span> <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L908" class="blob-num js-line-number" data-line-number="908"></td>
        <td id="LC908" class="blob-code blob-code-inner js-file-line">     </td>
      </tr>
      <tr>
        <td id="L909" class="blob-num js-line-number" data-line-number="909"></td>
        <td id="LC909" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L910" class="blob-num js-line-number" data-line-number="910"></td>
        <td id="LC910" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Constructor</span></td>
      </tr>
      <tr>
        <td id="L911" class="blob-num js-line-number" data-line-number="911"></td>
        <td id="LC911" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L912" class="blob-num js-line-number" data-line-number="912"></td>
        <td id="LC912" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@access</span> <span class="pl-c1">public</span></span></td>
      </tr>
      <tr>
        <td id="L913" class="blob-num js-line-number" data-line-number="913"></td>
        <td id="LC913" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@return</span> void</span></td>
      </tr>
      <tr>
        <td id="L914" class="blob-num js-line-number" data-line-number="914"></td>
        <td id="LC914" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L915" class="blob-num js-line-number" data-line-number="915"></td>
        <td id="LC915" class="blob-code blob-code-inner js-file-line">   </td>
      </tr>
      <tr>
        <td id="L916" class="blob-num js-line-number" data-line-number="916"></td>
        <td id="LC916" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L917" class="blob-num js-line-number" data-line-number="917"></td>
        <td id="LC917" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L918" class="blob-num js-line-number" data-line-number="918"></td>
        <td id="LC918" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Sets run-time configuration options</span></td>
      </tr>
      <tr>
        <td id="L919" class="blob-num js-line-number" data-line-number="919"></td>
        <td id="LC919" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L920" class="blob-num js-line-number" data-line-number="920"></td>
        <td id="LC920" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@access</span> <span class="pl-c1">public</span></span></td>
      </tr>
      <tr>
        <td id="L921" class="blob-num js-line-number" data-line-number="921"></td>
        <td id="LC921" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">string</span> option option name</span></td>
      </tr>
      <tr>
        <td id="L922" class="blob-num js-line-number" data-line-number="922"></td>
        <td id="LC922" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">mixed</span>  value value for the option</span></td>
      </tr>
      <tr>
        <td id="L923" class="blob-num js-line-number" data-line-number="923"></td>
        <td id="LC923" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@return</span> mixed true on success PEAR_Error on failure</span></td>
      </tr>
      <tr>
        <td id="L924" class="blob-num js-line-number" data-line-number="924"></td>
        <td id="LC924" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L925" class="blob-num js-line-number" data-line-number="925"></td>
        <td id="LC925" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">setOption</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">option</span>, <span class="pl-smi">value</span>)</td>
      </tr>
      <tr>
        <td id="L926" class="blob-num js-line-number" data-line-number="926"></td>
        <td id="LC926" class="blob-code blob-code-inner js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L927" class="blob-num js-line-number" data-line-number="927"></td>
        <td id="LC927" class="blob-code blob-code-inner js-file-line">        ret <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L928" class="blob-num js-line-number" data-line-number="928"></td>
        <td id="LC928" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-en">array_key_exists</span>(option, <span class="pl-c1">this</span>.<span class="pl-smi">_options</span>)) {</td>
      </tr>
      <tr>
        <td id="L929" class="blob-num js-line-number" data-line-number="929"></td>
        <td id="LC929" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">_options</span>[option] <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L930" class="blob-num js-line-number" data-line-number="930"></td>
        <td id="LC930" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L931" class="blob-num js-line-number" data-line-number="931"></td>
        <td id="LC931" class="blob-code blob-code-inner js-file-line">            ret <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">raiseError</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>Unknown option <span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>option);</td>
      </tr>
      <tr>
        <td id="L932" class="blob-num js-line-number" data-line-number="932"></td>
        <td id="LC932" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L933" class="blob-num js-line-number" data-line-number="933"></td>
        <td id="LC933" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> ret;</td>
      </tr>
      <tr>
        <td id="L934" class="blob-num js-line-number" data-line-number="934"></td>
        <td id="LC934" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L935" class="blob-num js-line-number" data-line-number="935"></td>
        <td id="LC935" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L936" class="blob-num js-line-number" data-line-number="936"></td>
        <td id="LC936" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L937" class="blob-num js-line-number" data-line-number="937"></td>
        <td id="LC937" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Reads a give BibTex File</span></td>
      </tr>
      <tr>
        <td id="L938" class="blob-num js-line-number" data-line-number="938"></td>
        <td id="LC938" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L939" class="blob-num js-line-number" data-line-number="939"></td>
        <td id="LC939" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@access</span> <span class="pl-c1">public</span></span></td>
      </tr>
      <tr>
        <td id="L940" class="blob-num js-line-number" data-line-number="940"></td>
        <td id="LC940" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">string</span> filename Name of the file</span></td>
      </tr>
      <tr>
        <td id="L941" class="blob-num js-line-number" data-line-number="941"></td>
        <td id="LC941" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@return</span> mixed true on success PEAR_Error on failure</span></td>
      </tr>
      <tr>
        <td id="L942" class="blob-num js-line-number" data-line-number="942"></td>
        <td id="LC942" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L943" class="blob-num js-line-number" data-line-number="943"></td>
        <td id="LC943" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    function loadFile(filename)</span></td>
      </tr>
      <tr>
        <td id="L944" class="blob-num js-line-number" data-line-number="944"></td>
        <td id="LC944" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    {</span></td>
      </tr>
      <tr>
        <td id="L945" class="blob-num js-line-number" data-line-number="945"></td>
        <td id="LC945" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        if (file_exists(filename)) {</span></td>
      </tr>
      <tr>
        <td id="L946" class="blob-num js-line-number" data-line-number="946"></td>
        <td id="LC946" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            if ((this.content = @file_get_contents(filename)) === false) {</span></td>
      </tr>
      <tr>
        <td id="L947" class="blob-num js-line-number" data-line-number="947"></td>
        <td id="LC947" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                return PEAR::raiseError(&#39;Could not open file &#39;+filename);</span></td>
      </tr>
      <tr>
        <td id="L948" class="blob-num js-line-number" data-line-number="948"></td>
        <td id="LC948" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            } else {</span></td>
      </tr>
      <tr>
        <td id="L949" class="blob-num js-line-number" data-line-number="949"></td>
        <td id="LC949" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                this._pos    = 0;</span></td>
      </tr>
      <tr>
        <td id="L950" class="blob-num js-line-number" data-line-number="950"></td>
        <td id="LC950" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                this._oldpos = 0;</span></td>
      </tr>
      <tr>
        <td id="L951" class="blob-num js-line-number" data-line-number="951"></td>
        <td id="LC951" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                return true;</span></td>
      </tr>
      <tr>
        <td id="L952" class="blob-num js-line-number" data-line-number="952"></td>
        <td id="LC952" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            }</span></td>
      </tr>
      <tr>
        <td id="L953" class="blob-num js-line-number" data-line-number="953"></td>
        <td id="LC953" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        } else {</span></td>
      </tr>
      <tr>
        <td id="L954" class="blob-num js-line-number" data-line-number="954"></td>
        <td id="LC954" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            return PEAR::raiseError(&#39;Could not find file &#39;+filename);</span></td>
      </tr>
      <tr>
        <td id="L955" class="blob-num js-line-number" data-line-number="955"></td>
        <td id="LC955" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        }</span></td>
      </tr>
      <tr>
        <td id="L956" class="blob-num js-line-number" data-line-number="956"></td>
        <td id="LC956" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    }</span></td>
      </tr>
      <tr>
        <td id="L957" class="blob-num js-line-number" data-line-number="957"></td>
        <td id="LC957" class="blob-code blob-code-inner js-file-line"><span class="pl-c">	<span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L958" class="blob-num js-line-number" data-line-number="958"></td>
        <td id="LC958" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L959" class="blob-num js-line-number" data-line-number="959"></td>
        <td id="LC959" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Parses what is stored in content and clears the content if the parsing is successfull+</span></td>
      </tr>
      <tr>
        <td id="L960" class="blob-num js-line-number" data-line-number="960"></td>
        <td id="LC960" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L961" class="blob-num js-line-number" data-line-number="961"></td>
        <td id="LC961" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@access</span> <span class="pl-c1">public</span></span></td>
      </tr>
      <tr>
        <td id="L962" class="blob-num js-line-number" data-line-number="962"></td>
        <td id="LC962" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@return</span> boolean true on success and PEAR_Error if there was a problem</span></td>
      </tr>
      <tr>
        <td id="L963" class="blob-num js-line-number" data-line-number="963"></td>
        <td id="LC963" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L964" class="blob-num js-line-number" data-line-number="964"></td>
        <td id="LC964" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">parse</span><span class="pl-k">:</span> <span class="pl-k">function</span>()</td>
      </tr>
      <tr>
        <td id="L965" class="blob-num js-line-number" data-line-number="965"></td>
        <td id="LC965" class="blob-code blob-code-inner js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L966" class="blob-num js-line-number" data-line-number="966"></td>
        <td id="LC966" class="blob-code blob-code-inner js-file-line">    	<span class="pl-c"><span class="pl-c">//</span>alert(&quot;starting to parse&quot;);</span></td>
      </tr>
      <tr>
        <td id="L967" class="blob-num js-line-number" data-line-number="967"></td>
        <td id="LC967" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span>The amount of opening braces is compared to the amount of closing braces</span></td>
      </tr>
      <tr>
        <td id="L968" class="blob-num js-line-number" data-line-number="968"></td>
        <td id="LC968" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span>Braces inside comments are ignored</span></td>
      </tr>
      <tr>
        <td id="L969" class="blob-num js-line-number" data-line-number="969"></td>
        <td id="LC969" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">this</span>.<span class="pl-smi">warnings</span> <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L970" class="blob-num js-line-number" data-line-number="970"></td>
        <td id="LC970" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">this</span>.<span class="pl-c1">data</span>     <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L971" class="blob-num js-line-number" data-line-number="971"></td>
        <td id="LC971" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> valid          <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L972" class="blob-num js-line-number" data-line-number="972"></td>
        <td id="LC972" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> open           <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L973" class="blob-num js-line-number" data-line-number="973"></td>
        <td id="LC973" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> entry          <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L974" class="blob-num js-line-number" data-line-number="974"></td>
        <td id="LC974" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> charv           <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L975" class="blob-num js-line-number" data-line-number="975"></td>
        <td id="LC975" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> lastchar       <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L976" class="blob-num js-line-number" data-line-number="976"></td>
        <td id="LC976" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> buffer         <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L977" class="blob-num js-line-number" data-line-number="977"></td>
        <td id="LC977" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> <span class="pl-en">strlen</span>(<span class="pl-c1">this</span>.<span class="pl-c1">content</span>); i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L978" class="blob-num js-line-number" data-line-number="978"></td>
        <td id="LC978" class="blob-code blob-code-inner js-file-line">            charv <span class="pl-k">=</span> <span class="pl-en">substr</span>(<span class="pl-c1">this</span>.<span class="pl-c1">content</span>, i, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L979" class="blob-num js-line-number" data-line-number="979"></td>
        <td id="LC979" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ((<span class="pl-c1">0</span> <span class="pl-k">!=</span> open) <span class="pl-k">&amp;&amp;</span> (<span class="pl-s"><span class="pl-pds">&#39;</span>@<span class="pl-pds">&#39;</span></span> <span class="pl-k">==</span> charv)) {</td>
      </tr>
      <tr>
        <td id="L980" class="blob-num js-line-number" data-line-number="980"></td>
        <td id="LC980" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-en">_checkAt</span>(buffer)) {</td>
      </tr>
      <tr>
        <td id="L981" class="blob-num js-line-number" data-line-number="981"></td>
        <td id="LC981" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c1">this</span>.<span class="pl-en">_generateWarning</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>WARNING_MISSING_END_BRACE<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>, buffer);</td>
      </tr>
      <tr>
        <td id="L982" class="blob-num js-line-number" data-line-number="982"></td>
        <td id="LC982" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span>To correct the data we need to insert a closing brace</span></td>
      </tr>
      <tr>
        <td id="L983" class="blob-num js-line-number" data-line-number="983"></td>
        <td id="LC983" class="blob-code blob-code-inner js-file-line">                    charv     <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>}<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L984" class="blob-num js-line-number" data-line-number="984"></td>
        <td id="LC984" class="blob-code blob-code-inner js-file-line">                    i<span class="pl-k">--</span>;</td>
      </tr>
      <tr>
        <td id="L985" class="blob-num js-line-number" data-line-number="985"></td>
        <td id="LC985" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L986" class="blob-num js-line-number" data-line-number="986"></td>
        <td id="LC986" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L987" class="blob-num js-line-number" data-line-number="987"></td>
        <td id="LC987" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ((<span class="pl-c1">0</span> <span class="pl-k">==</span> open) <span class="pl-k">&amp;&amp;</span> (<span class="pl-s"><span class="pl-pds">&#39;</span>@<span class="pl-pds">&#39;</span></span> <span class="pl-k">==</span> charv)) { <span class="pl-c"><span class="pl-c">//</span>The beginning of an entry</span></td>
      </tr>
      <tr>
        <td id="L988" class="blob-num js-line-number" data-line-number="988"></td>
        <td id="LC988" class="blob-code blob-code-inner js-file-line">                entry <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L989" class="blob-num js-line-number" data-line-number="989"></td>
        <td id="LC989" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> <span class="pl-k">if</span> (entry <span class="pl-k">&amp;&amp;</span> (<span class="pl-s"><span class="pl-pds">&#39;</span>{<span class="pl-pds">&#39;</span></span> <span class="pl-k">==</span> charv) <span class="pl-k">&amp;&amp;</span> (<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\\</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">!=</span> lastchar)) { <span class="pl-c"><span class="pl-c">//</span>Inside an entry and non quoted brace is opening</span></td>
      </tr>
      <tr>
        <td id="L990" class="blob-num js-line-number" data-line-number="990"></td>
        <td id="LC990" class="blob-code blob-code-inner js-file-line">                open<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L991" class="blob-num js-line-number" data-line-number="991"></td>
        <td id="LC991" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> <span class="pl-k">if</span> (entry <span class="pl-k">&amp;&amp;</span> (<span class="pl-s"><span class="pl-pds">&#39;</span>}<span class="pl-pds">&#39;</span></span> <span class="pl-k">==</span> charv) <span class="pl-k">&amp;&amp;</span> (<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\\</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">!=</span> lastchar)) { <span class="pl-c"><span class="pl-c">//</span>Inside an entry and non quoted brace is closing</span></td>
      </tr>
      <tr>
        <td id="L992" class="blob-num js-line-number" data-line-number="992"></td>
        <td id="LC992" class="blob-code blob-code-inner js-file-line">                open<span class="pl-k">--</span>;</td>
      </tr>
      <tr>
        <td id="L993" class="blob-num js-line-number" data-line-number="993"></td>
        <td id="LC993" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (open <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) { <span class="pl-c"><span class="pl-c">//</span>More are closed than opened</span></td>
      </tr>
      <tr>
        <td id="L994" class="blob-num js-line-number" data-line-number="994"></td>
        <td id="LC994" class="blob-code blob-code-inner js-file-line">                    valid <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L995" class="blob-num js-line-number" data-line-number="995"></td>
        <td id="LC995" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L996" class="blob-num js-line-number" data-line-number="996"></td>
        <td id="LC996" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-c1">0</span> <span class="pl-k">==</span> open) { <span class="pl-c"><span class="pl-c">//</span>End of entry</span></td>
      </tr>
      <tr>
        <td id="L997" class="blob-num js-line-number" data-line-number="997"></td>
        <td id="LC997" class="blob-code blob-code-inner js-file-line">                    entry     <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L998" class="blob-num js-line-number" data-line-number="998"></td>
        <td id="LC998" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">var</span> entrydata <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">_parseEntry</span>(buffer);</td>
      </tr>
      <tr>
        <td id="L999" class="blob-num js-line-number" data-line-number="999"></td>
        <td id="LC999" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (<span class="pl-k">!</span>entrydata) {</td>
      </tr>
      <tr>
        <td id="L1000" class="blob-num js-line-number" data-line-number="1000"></td>
        <td id="LC1000" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1001" class="blob-num js-line-number" data-line-number="1001"></td>
        <td id="LC1001" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         * This is not yet used+</span></td>
      </tr>
      <tr>
        <td id="L1002" class="blob-num js-line-number" data-line-number="1002"></td>
        <td id="LC1002" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         * We are here if the Entry is either not correct or not supported+</span></td>
      </tr>
      <tr>
        <td id="L1003" class="blob-num js-line-number" data-line-number="1003"></td>
        <td id="LC1003" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         * But this should already generate a warning+</span></td>
      </tr>
      <tr>
        <td id="L1004" class="blob-num js-line-number" data-line-number="1004"></td>
        <td id="LC1004" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         * Therefore it should not be necessary to do anything here</span></td>
      </tr>
      <tr>
        <td id="L1005" class="blob-num js-line-number" data-line-number="1005"></td>
        <td id="LC1005" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1006" class="blob-num js-line-number" data-line-number="1006"></td>
        <td id="LC1006" class="blob-code blob-code-inner js-file-line">                    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1007" class="blob-num js-line-number" data-line-number="1007"></td>
        <td id="LC1007" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c1">this</span>.<span class="pl-c1">data</span>[<span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-c1">length</span>] <span class="pl-k">=</span> entrydata;</td>
      </tr>
      <tr>
        <td id="L1008" class="blob-num js-line-number" data-line-number="1008"></td>
        <td id="LC1008" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L1009" class="blob-num js-line-number" data-line-number="1009"></td>
        <td id="LC1009" class="blob-code blob-code-inner js-file-line">                    buffer <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1010" class="blob-num js-line-number" data-line-number="1010"></td>
        <td id="LC1010" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1011" class="blob-num js-line-number" data-line-number="1011"></td>
        <td id="LC1011" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1012" class="blob-num js-line-number" data-line-number="1012"></td>
        <td id="LC1012" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (entry) { <span class="pl-c"><span class="pl-c">//</span>Inside entry</span></td>
      </tr>
      <tr>
        <td id="L1013" class="blob-num js-line-number" data-line-number="1013"></td>
        <td id="LC1013" class="blob-code blob-code-inner js-file-line">                buffer <span class="pl-k">+=</span> charv;</td>
      </tr>
      <tr>
        <td id="L1014" class="blob-num js-line-number" data-line-number="1014"></td>
        <td id="LC1014" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1015" class="blob-num js-line-number" data-line-number="1015"></td>
        <td id="LC1015" class="blob-code blob-code-inner js-file-line">            lastchar <span class="pl-k">=</span> charv;</td>
      </tr>
      <tr>
        <td id="L1016" class="blob-num js-line-number" data-line-number="1016"></td>
        <td id="LC1016" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1017" class="blob-num js-line-number" data-line-number="1017"></td>
        <td id="LC1017" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span>If open is one it may be possible that the last ending brace is missing</span></td>
      </tr>
      <tr>
        <td id="L1018" class="blob-num js-line-number" data-line-number="1018"></td>
        <td id="LC1018" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-c1">1</span> <span class="pl-k">==</span> open) {</td>
      </tr>
      <tr>
        <td id="L1019" class="blob-num js-line-number" data-line-number="1019"></td>
        <td id="LC1019" class="blob-code blob-code-inner js-file-line">            entrydata <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">_parseEntry</span>(buffer);</td>
      </tr>
      <tr>
        <td id="L1020" class="blob-num js-line-number" data-line-number="1020"></td>
        <td id="LC1020" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span>entrydata) {</td>
      </tr>
      <tr>
        <td id="L1021" class="blob-num js-line-number" data-line-number="1021"></td>
        <td id="LC1021" class="blob-code blob-code-inner js-file-line">                valid <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L1022" class="blob-num js-line-number" data-line-number="1022"></td>
        <td id="LC1022" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1023" class="blob-num js-line-number" data-line-number="1023"></td>
        <td id="LC1023" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">this</span>.<span class="pl-c1">data</span>[<span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-c1">length</span>] <span class="pl-k">=</span> entrydata;</td>
      </tr>
      <tr>
        <td id="L1024" class="blob-num js-line-number" data-line-number="1024"></td>
        <td id="LC1024" class="blob-code blob-code-inner js-file-line">                buffer <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1025" class="blob-num js-line-number" data-line-number="1025"></td>
        <td id="LC1025" class="blob-code blob-code-inner js-file-line">                open   <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L1026" class="blob-num js-line-number" data-line-number="1026"></td>
        <td id="LC1026" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1027" class="blob-num js-line-number" data-line-number="1027"></td>
        <td id="LC1027" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1028" class="blob-num js-line-number" data-line-number="1028"></td>
        <td id="LC1028" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span>At this point the open should be zero</span></td>
      </tr>
      <tr>
        <td id="L1029" class="blob-num js-line-number" data-line-number="1029"></td>
        <td id="LC1029" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-c1">0</span> <span class="pl-k">!=</span> open) {</td>
      </tr>
      <tr>
        <td id="L1030" class="blob-num js-line-number" data-line-number="1030"></td>
        <td id="LC1030" class="blob-code blob-code-inner js-file-line">            valid <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L1031" class="blob-num js-line-number" data-line-number="1031"></td>
        <td id="LC1031" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1032" class="blob-num js-line-number" data-line-number="1032"></td>
        <td id="LC1032" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span>Are there Multiple entries with the same cite?</span></td>
      </tr>
      <tr>
        <td id="L1033" class="blob-num js-line-number" data-line-number="1033"></td>
        <td id="LC1033" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>[<span class="pl-s"><span class="pl-pds">&#39;</span>validate<span class="pl-pds">&#39;</span></span>]) {</td>
      </tr>
      <tr>
        <td id="L1034" class="blob-num js-line-number" data-line-number="1034"></td>
        <td id="LC1034" class="blob-code blob-code-inner js-file-line">            cites <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L1035" class="blob-num js-line-number" data-line-number="1035"></td>
        <td id="LC1035" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>; i<span class="pl-k">&lt;</span> <span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-c1">length</span>; i<span class="pl-k">++</span> ) {</td>
      </tr>
      <tr>
        <td id="L1036" class="blob-num js-line-number" data-line-number="1036"></td>
        <td id="LC1036" class="blob-code blob-code-inner js-file-line">                cites[<span class="pl-smi">cites</span>.<span class="pl-c1">length</span>] <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-c1">data</span>[i][<span class="pl-s"><span class="pl-pds">&#39;</span>cite<span class="pl-pds">&#39;</span></span>];</td>
      </tr>
      <tr>
        <td id="L1037" class="blob-num js-line-number" data-line-number="1037"></td>
        <td id="LC1037" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1038" class="blob-num js-line-number" data-line-number="1038"></td>
        <td id="LC1038" class="blob-code blob-code-inner js-file-line">            unique <span class="pl-k">=</span> <span class="pl-en">array_unique</span>(cites);</td>
      </tr>
      <tr>
        <td id="L1039" class="blob-num js-line-number" data-line-number="1039"></td>
        <td id="LC1039" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-smi">cites</span>.<span class="pl-c1">length</span> <span class="pl-k">!=</span> <span class="pl-en">sizeof</span>(unique)) { <span class="pl-c"><span class="pl-c">//</span>Some values have not been unique!</span></td>
      </tr>
      <tr>
        <td id="L1040" class="blob-num js-line-number" data-line-number="1040"></td>
        <td id="LC1040" class="blob-code blob-code-inner js-file-line">                notuniques <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L1041" class="blob-num js-line-number" data-line-number="1041"></td>
        <td id="LC1041" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> <span class="pl-smi">cites</span>.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L1042" class="blob-num js-line-number" data-line-number="1042"></td>
        <td id="LC1042" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">==</span> unique[i]) {</td>
      </tr>
      <tr>
        <td id="L1043" class="blob-num js-line-number" data-line-number="1043"></td>
        <td id="LC1043" class="blob-code blob-code-inner js-file-line">                        notuniques[<span class="pl-smi">notuniques</span>.<span class="pl-c1">length</span>] <span class="pl-k">=</span> cites[i];</td>
      </tr>
      <tr>
        <td id="L1044" class="blob-num js-line-number" data-line-number="1044"></td>
        <td id="LC1044" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L1045" class="blob-num js-line-number" data-line-number="1045"></td>
        <td id="LC1045" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1046" class="blob-num js-line-number" data-line-number="1046"></td>
        <td id="LC1046" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">this</span>.<span class="pl-en">_generateWarning</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>WARNING_MULTIPLE_ENTRIES<span class="pl-pds">&#39;</span></span>, <span class="pl-en">implode</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>,<span class="pl-pds">&#39;</span></span>,notuniques));</td>
      </tr>
      <tr>
        <td id="L1047" class="blob-num js-line-number" data-line-number="1047"></td>
        <td id="LC1047" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1048" class="blob-num js-line-number" data-line-number="1048"></td>
        <td id="LC1048" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1049" class="blob-num js-line-number" data-line-number="1049"></td>
        <td id="LC1049" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span>alert(&quot;finished parsing&quot;);</span></td>
      </tr>
      <tr>
        <td id="L1050" class="blob-num js-line-number" data-line-number="1050"></td>
        <td id="LC1050" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (valid) {</td>
      </tr>
      <tr>
        <td id="L1051" class="blob-num js-line-number" data-line-number="1051"></td>
        <td id="LC1051" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-c1">content</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1052" class="blob-num js-line-number" data-line-number="1052"></td>
        <td id="LC1052" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L1053" class="blob-num js-line-number" data-line-number="1053"></td>
        <td id="LC1053" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1054" class="blob-num js-line-number" data-line-number="1054"></td>
        <td id="LC1054" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">raiseError</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>Unbalanced parenthesis<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1055" class="blob-num js-line-number" data-line-number="1055"></td>
        <td id="LC1055" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1056" class="blob-num js-line-number" data-line-number="1056"></td>
        <td id="LC1056" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L1057" class="blob-num js-line-number" data-line-number="1057"></td>
        <td id="LC1057" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1058" class="blob-num js-line-number" data-line-number="1058"></td>
        <td id="LC1058" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1059" class="blob-num js-line-number" data-line-number="1059"></td>
        <td id="LC1059" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Extracting the data of one content</span></td>
      </tr>
      <tr>
        <td id="L1060" class="blob-num js-line-number" data-line-number="1060"></td>
        <td id="LC1060" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1061" class="blob-num js-line-number" data-line-number="1061"></td>
        <td id="LC1061" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * The parse function splits the content into its entries+</span></td>
      </tr>
      <tr>
        <td id="L1062" class="blob-num js-line-number" data-line-number="1062"></td>
        <td id="LC1062" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Then every entry is parsed by this function+</span></td>
      </tr>
      <tr>
        <td id="L1063" class="blob-num js-line-number" data-line-number="1063"></td>
        <td id="LC1063" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * It parses the entry backwards+</span></td>
      </tr>
      <tr>
        <td id="L1064" class="blob-num js-line-number" data-line-number="1064"></td>
        <td id="LC1064" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * First the last &#39;=&#39; is searched and the value extracted from that+</span></td>
      </tr>
      <tr>
        <td id="L1065" class="blob-num js-line-number" data-line-number="1065"></td>
        <td id="LC1065" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * A copy is made of the entry if warnings should be generated+ This takes quite</span></td>
      </tr>
      <tr>
        <td id="L1066" class="blob-num js-line-number" data-line-number="1066"></td>
        <td id="LC1066" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * some memory but it is needed to get good warnings+ If nor warnings are generated</span></td>
      </tr>
      <tr>
        <td id="L1067" class="blob-num js-line-number" data-line-number="1067"></td>
        <td id="LC1067" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * then you don have to worry about memory+</span></td>
      </tr>
      <tr>
        <td id="L1068" class="blob-num js-line-number" data-line-number="1068"></td>
        <td id="LC1068" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Then the last &#39;,&#39; is searched and the field extracted from that+</span></td>
      </tr>
      <tr>
        <td id="L1069" class="blob-num js-line-number" data-line-number="1069"></td>
        <td id="LC1069" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Again the entry is shortened+</span></td>
      </tr>
      <tr>
        <td id="L1070" class="blob-num js-line-number" data-line-number="1070"></td>
        <td id="LC1070" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Finally after all field:value pairs the cite and type is extraced and the</span></td>
      </tr>
      <tr>
        <td id="L1071" class="blob-num js-line-number" data-line-number="1071"></td>
        <td id="LC1071" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * authors are splitted+</span></td>
      </tr>
      <tr>
        <td id="L1072" class="blob-num js-line-number" data-line-number="1072"></td>
        <td id="LC1072" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * If there is a problem false is returned+</span></td>
      </tr>
      <tr>
        <td id="L1073" class="blob-num js-line-number" data-line-number="1073"></td>
        <td id="LC1073" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1074" class="blob-num js-line-number" data-line-number="1074"></td>
        <td id="LC1074" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@access</span> <span class="pl-c1">private</span></span></td>
      </tr>
      <tr>
        <td id="L1075" class="blob-num js-line-number" data-line-number="1075"></td>
        <td id="LC1075" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">string</span> entry The entry</span></td>
      </tr>
      <tr>
        <td id="L1076" class="blob-num js-line-number" data-line-number="1076"></td>
        <td id="LC1076" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@return</span> array The representation of the entry or false if there is a problem</span></td>
      </tr>
      <tr>
        <td id="L1077" class="blob-num js-line-number" data-line-number="1077"></td>
        <td id="LC1077" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1078" class="blob-num js-line-number" data-line-number="1078"></td>
        <td id="LC1078" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">_parseEntry</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">entry</span>)</td>
      </tr>
      <tr>
        <td id="L1079" class="blob-num js-line-number" data-line-number="1079"></td>
        <td id="LC1079" class="blob-code blob-code-inner js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L1080" class="blob-num js-line-number" data-line-number="1080"></td>
        <td id="LC1080" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> entrycopy <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1081" class="blob-num js-line-number" data-line-number="1081"></td>
        <td id="LC1081" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>[<span class="pl-s"><span class="pl-pds">&#39;</span>validate<span class="pl-pds">&#39;</span></span>]) {</td>
      </tr>
      <tr>
        <td id="L1082" class="blob-num js-line-number" data-line-number="1082"></td>
        <td id="LC1082" class="blob-code blob-code-inner js-file-line">            entrycopy <span class="pl-k">=</span> entry; <span class="pl-c"><span class="pl-c">//</span>We need a copy for printing the warnings</span></td>
      </tr>
      <tr>
        <td id="L1083" class="blob-num js-line-number" data-line-number="1083"></td>
        <td id="LC1083" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1084" class="blob-num js-line-number" data-line-number="1084"></td>
        <td id="LC1084" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> ret <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L1085" class="blob-num js-line-number" data-line-number="1085"></td>
        <td id="LC1085" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-s"><span class="pl-pds">&#39;</span>@string<span class="pl-pds">&#39;</span></span> <span class="pl-k">==</span>  <span class="pl-en">strtolower</span>(<span class="pl-en">substr</span>(entry, <span class="pl-c1">0</span>, <span class="pl-c1">7</span>))) {</td>
      </tr>
      <tr>
        <td id="L1086" class="blob-num js-line-number" data-line-number="1086"></td>
        <td id="LC1086" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>String are not yet supported!</span></td>
      </tr>
      <tr>
        <td id="L1087" class="blob-num js-line-number" data-line-number="1087"></td>
        <td id="LC1087" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>[<span class="pl-s"><span class="pl-pds">&#39;</span>validate<span class="pl-pds">&#39;</span></span>]) {</td>
      </tr>
      <tr>
        <td id="L1088" class="blob-num js-line-number" data-line-number="1088"></td>
        <td id="LC1088" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">this</span>.<span class="pl-en">_generateWarning</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>STRING_ENTRY_NOT_YET_SUPPORTED<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>, entry<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>}<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1089" class="blob-num js-line-number" data-line-number="1089"></td>
        <td id="LC1089" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1090" class="blob-num js-line-number" data-line-number="1090"></td>
        <td id="LC1090" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-s"><span class="pl-pds">&#39;</span>@preamble<span class="pl-pds">&#39;</span></span> <span class="pl-k">==</span>  <span class="pl-en">strtolower</span>(<span class="pl-en">substr</span>(entry, <span class="pl-c1">0</span>, <span class="pl-c1">9</span>))) {</td>
      </tr>
      <tr>
        <td id="L1091" class="blob-num js-line-number" data-line-number="1091"></td>
        <td id="LC1091" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>Preamble not yet supported!</span></td>
      </tr>
      <tr>
        <td id="L1092" class="blob-num js-line-number" data-line-number="1092"></td>
        <td id="LC1092" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>[<span class="pl-s"><span class="pl-pds">&#39;</span>validate<span class="pl-pds">&#39;</span></span>]) {</td>
      </tr>
      <tr>
        <td id="L1093" class="blob-num js-line-number" data-line-number="1093"></td>
        <td id="LC1093" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">this</span>.<span class="pl-en">_generateWarning</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>PREAMBLE_ENTRY_NOT_YET_SUPPORTED<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>, entry<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>}<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1094" class="blob-num js-line-number" data-line-number="1094"></td>
        <td id="LC1094" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1095" class="blob-num js-line-number" data-line-number="1095"></td>
        <td id="LC1095" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1096" class="blob-num js-line-number" data-line-number="1096"></td>
        <td id="LC1096" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>Parsing all fields</span></td>
      </tr>
      <tr>
        <td id="L1097" class="blob-num js-line-number" data-line-number="1097"></td>
        <td id="LC1097" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">while</span> (<span class="pl-en">strrpos</span>(entry,<span class="pl-s"><span class="pl-pds">&#39;</span>=<span class="pl-pds">&#39;</span></span>) <span class="pl-k">!==</span> <span class="pl-c1">false</span>) {</td>
      </tr>
      <tr>
        <td id="L1098" class="blob-num js-line-number" data-line-number="1098"></td>
        <td id="LC1098" class="blob-code blob-code-inner js-file-line">                position <span class="pl-k">=</span> <span class="pl-en">strrpos</span>(entry, <span class="pl-s"><span class="pl-pds">&#39;</span>=<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1099" class="blob-num js-line-number" data-line-number="1099"></td>
        <td id="LC1099" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span>Checking that the equal sign is not quoted or is not inside a equation (For example in an abstract)</span></td>
      </tr>
      <tr>
        <td id="L1100" class="blob-num js-line-number" data-line-number="1100"></td>
        <td id="LC1100" class="blob-code blob-code-inner js-file-line">                proceed  <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L1101" class="blob-num js-line-number" data-line-number="1101"></td>
        <td id="LC1101" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-en">substr</span>(entry, position<span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-c1">1</span>) <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\\</span><span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L1102" class="blob-num js-line-number" data-line-number="1102"></td>
        <td id="LC1102" class="blob-code blob-code-inner js-file-line">                    proceed <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L1103" class="blob-num js-line-number" data-line-number="1103"></td>
        <td id="LC1103" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1104" class="blob-num js-line-number" data-line-number="1104"></td>
        <td id="LC1104" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (proceed) {</td>
      </tr>
      <tr>
        <td id="L1105" class="blob-num js-line-number" data-line-number="1105"></td>
        <td id="LC1105" class="blob-code blob-code-inner js-file-line">                    proceed <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">_checkEqualSign</span>(entry, position);</td>
      </tr>
      <tr>
        <td id="L1106" class="blob-num js-line-number" data-line-number="1106"></td>
        <td id="LC1106" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1107" class="blob-num js-line-number" data-line-number="1107"></td>
        <td id="LC1107" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">while</span> (<span class="pl-k">!</span>proceed) {</td>
      </tr>
      <tr>
        <td id="L1108" class="blob-num js-line-number" data-line-number="1108"></td>
        <td id="LC1108" class="blob-code blob-code-inner js-file-line">                    substring <span class="pl-k">=</span> <span class="pl-en">substr</span>(entry, <span class="pl-c1">0</span>, position);</td>
      </tr>
      <tr>
        <td id="L1109" class="blob-num js-line-number" data-line-number="1109"></td>
        <td id="LC1109" class="blob-code blob-code-inner js-file-line">                    position  <span class="pl-k">=</span> <span class="pl-en">strrpos</span>(substring,<span class="pl-s"><span class="pl-pds">&#39;</span>=<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1110" class="blob-num js-line-number" data-line-number="1110"></td>
        <td id="LC1110" class="blob-code blob-code-inner js-file-line">                    proceed   <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L1111" class="blob-num js-line-number" data-line-number="1111"></td>
        <td id="LC1111" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (<span class="pl-en">substr</span>(entry, position<span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-c1">1</span>) <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\\</span><span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L1112" class="blob-num js-line-number" data-line-number="1112"></td>
        <td id="LC1112" class="blob-code blob-code-inner js-file-line">                        proceed <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L1113" class="blob-num js-line-number" data-line-number="1113"></td>
        <td id="LC1113" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L1114" class="blob-num js-line-number" data-line-number="1114"></td>
        <td id="LC1114" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (proceed) {</td>
      </tr>
      <tr>
        <td id="L1115" class="blob-num js-line-number" data-line-number="1115"></td>
        <td id="LC1115" class="blob-code blob-code-inner js-file-line">                        proceed <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">_checkEqualSign</span>(entry, position);</td>
      </tr>
      <tr>
        <td id="L1116" class="blob-num js-line-number" data-line-number="1116"></td>
        <td id="LC1116" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L1117" class="blob-num js-line-number" data-line-number="1117"></td>
        <td id="LC1117" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1118" class="blob-num js-line-number" data-line-number="1118"></td>
        <td id="LC1118" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1119" class="blob-num js-line-number" data-line-number="1119"></td>
        <td id="LC1119" class="blob-code blob-code-inner js-file-line">                value <span class="pl-k">=</span> <span class="pl-en">trim</span>(<span class="pl-en">substr</span>(entry, position<span class="pl-k">+</span><span class="pl-c1">1</span>));</td>
      </tr>
      <tr>
        <td id="L1120" class="blob-num js-line-number" data-line-number="1120"></td>
        <td id="LC1120" class="blob-code blob-code-inner js-file-line">                entry <span class="pl-k">=</span> <span class="pl-en">substr</span>(entry, <span class="pl-c1">0</span>, position);</td>
      </tr>
      <tr>
        <td id="L1121" class="blob-num js-line-number" data-line-number="1121"></td>
        <td id="LC1121" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1122" class="blob-num js-line-number" data-line-number="1122"></td>
        <td id="LC1122" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-s"><span class="pl-pds">&#39;</span>,<span class="pl-pds">&#39;</span></span> <span class="pl-k">==</span> <span class="pl-en">substr</span>(value, <span class="pl-en">strlen</span>(value)<span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-c1">1</span>)) {</td>
      </tr>
      <tr>
        <td id="L1123" class="blob-num js-line-number" data-line-number="1123"></td>
        <td id="LC1123" class="blob-code blob-code-inner js-file-line">                    value <span class="pl-k">=</span> <span class="pl-en">substr</span>(value, <span class="pl-c1">0</span>, <span class="pl-k">-</span><span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1124" class="blob-num js-line-number" data-line-number="1124"></td>
        <td id="LC1124" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1125" class="blob-num js-line-number" data-line-number="1125"></td>
        <td id="LC1125" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>[<span class="pl-s"><span class="pl-pds">&#39;</span>validate<span class="pl-pds">&#39;</span></span>]) {</td>
      </tr>
      <tr>
        <td id="L1126" class="blob-num js-line-number" data-line-number="1126"></td>
        <td id="LC1126" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c1">this</span>.<span class="pl-en">_validateValue</span>(value, entrycopy);</td>
      </tr>
      <tr>
        <td id="L1127" class="blob-num js-line-number" data-line-number="1127"></td>
        <td id="LC1127" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1128" class="blob-num js-line-number" data-line-number="1128"></td>
        <td id="LC1128" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>[<span class="pl-s"><span class="pl-pds">&#39;</span>stripDelimiter<span class="pl-pds">&#39;</span></span>]) {</td>
      </tr>
      <tr>
        <td id="L1129" class="blob-num js-line-number" data-line-number="1129"></td>
        <td id="LC1129" class="blob-code blob-code-inner js-file-line">                    value <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">_stripDelimiter</span>(value);</td>
      </tr>
      <tr>
        <td id="L1130" class="blob-num js-line-number" data-line-number="1130"></td>
        <td id="LC1130" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1131" class="blob-num js-line-number" data-line-number="1131"></td>
        <td id="LC1131" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>[<span class="pl-s"><span class="pl-pds">&#39;</span>unwrap<span class="pl-pds">&#39;</span></span>]) {</td>
      </tr>
      <tr>
        <td id="L1132" class="blob-num js-line-number" data-line-number="1132"></td>
        <td id="LC1132" class="blob-code blob-code-inner js-file-line">                    value <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">_unwrap</span>(value);</td>
      </tr>
      <tr>
        <td id="L1133" class="blob-num js-line-number" data-line-number="1133"></td>
        <td id="LC1133" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1134" class="blob-num js-line-number" data-line-number="1134"></td>
        <td id="LC1134" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>[<span class="pl-s"><span class="pl-pds">&#39;</span>removeCurlyBraces<span class="pl-pds">&#39;</span></span>]) {</td>
      </tr>
      <tr>
        <td id="L1135" class="blob-num js-line-number" data-line-number="1135"></td>
        <td id="LC1135" class="blob-code blob-code-inner js-file-line">                    value <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">_removeCurlyBraces</span>(value);</td>
      </tr>
      <tr>
        <td id="L1136" class="blob-num js-line-number" data-line-number="1136"></td>
        <td id="LC1136" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1137" class="blob-num js-line-number" data-line-number="1137"></td>
        <td id="LC1137" class="blob-code blob-code-inner js-file-line">                position    <span class="pl-k">=</span> <span class="pl-en">strrpos</span>(entry, <span class="pl-s"><span class="pl-pds">&#39;</span>,<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1138" class="blob-num js-line-number" data-line-number="1138"></td>
        <td id="LC1138" class="blob-code blob-code-inner js-file-line">                field       <span class="pl-k">=</span> <span class="pl-en">strtolower</span>(<span class="pl-en">trim</span>(<span class="pl-en">substr</span>(entry, position<span class="pl-k">+</span><span class="pl-c1">1</span>)));</td>
      </tr>
      <tr>
        <td id="L1139" class="blob-num js-line-number" data-line-number="1139"></td>
        <td id="LC1139" class="blob-code blob-code-inner js-file-line">                ret[field] <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L1140" class="blob-num js-line-number" data-line-number="1140"></td>
        <td id="LC1140" class="blob-code blob-code-inner js-file-line">                entry       <span class="pl-k">=</span> <span class="pl-en">substr</span>(entry, <span class="pl-c1">0</span>, position);</td>
      </tr>
      <tr>
        <td id="L1141" class="blob-num js-line-number" data-line-number="1141"></td>
        <td id="LC1141" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1142" class="blob-num js-line-number" data-line-number="1142"></td>
        <td id="LC1142" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>Parsing cite and entry type</span></td>
      </tr>
      <tr>
        <td id="L1143" class="blob-num js-line-number" data-line-number="1143"></td>
        <td id="LC1143" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> arr <span class="pl-k">=</span> <span class="pl-smi">entry</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>{<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1144" class="blob-num js-line-number" data-line-number="1144"></td>
        <td id="LC1144" class="blob-code blob-code-inner js-file-line">            ret[<span class="pl-s"><span class="pl-pds">&#39;</span>cite<span class="pl-pds">&#39;</span></span>] <span class="pl-k">=</span> <span class="pl-en">trim</span>(arr[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L1145" class="blob-num js-line-number" data-line-number="1145"></td>
        <td id="LC1145" class="blob-code blob-code-inner js-file-line">            ret[<span class="pl-s"><span class="pl-pds">&#39;</span>entryType<span class="pl-pds">&#39;</span></span>] <span class="pl-k">=</span> <span class="pl-en">strtolower</span>(<span class="pl-en">trim</span>(arr[<span class="pl-c1">0</span>]));</td>
      </tr>
      <tr>
        <td id="L1146" class="blob-num js-line-number" data-line-number="1146"></td>
        <td id="LC1146" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>alert(array_keys(ret));</span></td>
      </tr>
      <tr>
        <td id="L1147" class="blob-num js-line-number" data-line-number="1147"></td>
        <td id="LC1147" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-s"><span class="pl-pds">&#39;</span>@<span class="pl-pds">&#39;</span></span> <span class="pl-k">==</span> ret[<span class="pl-s"><span class="pl-pds">&#39;</span>entryType<span class="pl-pds">&#39;</span></span>].<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>,<span class="pl-c1">1</span>)) {</td>
      </tr>
      <tr>
        <td id="L1148" class="blob-num js-line-number" data-line-number="1148"></td>
        <td id="LC1148" class="blob-code blob-code-inner js-file-line">                ret[<span class="pl-s"><span class="pl-pds">&#39;</span>entryType<span class="pl-pds">&#39;</span></span>] <span class="pl-k">=</span> <span class="pl-en">substr</span>(ret[<span class="pl-s"><span class="pl-pds">&#39;</span>entryType<span class="pl-pds">&#39;</span></span>], <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1149" class="blob-num js-line-number" data-line-number="1149"></td>
        <td id="LC1149" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1150" class="blob-num js-line-number" data-line-number="1150"></td>
        <td id="LC1150" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>[<span class="pl-s"><span class="pl-pds">&#39;</span>validate<span class="pl-pds">&#39;</span></span>]) {</td>
      </tr>
      <tr>
        <td id="L1151" class="blob-num js-line-number" data-line-number="1151"></td>
        <td id="LC1151" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-en">_checkAllowedEntryType</span>(ret[<span class="pl-s"><span class="pl-pds">&#39;</span>entryType<span class="pl-pds">&#39;</span></span>])) {</td>
      </tr>
      <tr>
        <td id="L1152" class="blob-num js-line-number" data-line-number="1152"></td>
        <td id="LC1152" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c1">this</span>.<span class="pl-en">_generateWarning</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>WARNING_NOT_ALLOWED_ENTRY_TYPE<span class="pl-pds">&#39;</span></span>, ret[<span class="pl-s"><span class="pl-pds">&#39;</span>entryType<span class="pl-pds">&#39;</span></span>], entry<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>}<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1153" class="blob-num js-line-number" data-line-number="1153"></td>
        <td id="LC1153" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1154" class="blob-num js-line-number" data-line-number="1154"></td>
        <td id="LC1154" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1155" class="blob-num js-line-number" data-line-number="1155"></td>
        <td id="LC1155" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>Handling the authors</span></td>
      </tr>
      <tr>
        <td id="L1156" class="blob-num js-line-number" data-line-number="1156"></td>
        <td id="LC1156" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-en">in_array</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>author<span class="pl-pds">&#39;</span></span>, <span class="pl-en">array_keys</span>(ret)) <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">this</span>.<span class="pl-smi">_options</span>[<span class="pl-s"><span class="pl-pds">&#39;</span>extractAuthors<span class="pl-pds">&#39;</span></span>]) {</td>
      </tr>
      <tr>
        <td id="L1157" class="blob-num js-line-number" data-line-number="1157"></td>
        <td id="LC1157" class="blob-code blob-code-inner js-file-line">                ret[<span class="pl-s"><span class="pl-pds">&#39;</span>author<span class="pl-pds">&#39;</span></span>] <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">_extractAuthors</span>(ret[<span class="pl-s"><span class="pl-pds">&#39;</span>author<span class="pl-pds">&#39;</span></span>]);</td>
      </tr>
      <tr>
        <td id="L1158" class="blob-num js-line-number" data-line-number="1158"></td>
        <td id="LC1158" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1159" class="blob-num js-line-number" data-line-number="1159"></td>
        <td id="LC1159" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>Handling the editors (added by vkaravir 2017)</span></td>
      </tr>
      <tr>
        <td id="L1160" class="blob-num js-line-number" data-line-number="1160"></td>
        <td id="LC1160" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-en">in_array</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>editor<span class="pl-pds">&#39;</span></span>, <span class="pl-en">array_keys</span>(ret)) <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">this</span>.<span class="pl-smi">_options</span>[<span class="pl-s"><span class="pl-pds">&#39;</span>extractAuthors<span class="pl-pds">&#39;</span></span>]) {</td>
      </tr>
      <tr>
        <td id="L1161" class="blob-num js-line-number" data-line-number="1161"></td>
        <td id="LC1161" class="blob-code blob-code-inner js-file-line">                ret[<span class="pl-s"><span class="pl-pds">&#39;</span>editor<span class="pl-pds">&#39;</span></span>] <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">_extractAuthors</span>(ret[<span class="pl-s"><span class="pl-pds">&#39;</span>editor<span class="pl-pds">&#39;</span></span>]);</td>
      </tr>
      <tr>
        <td id="L1162" class="blob-num js-line-number" data-line-number="1162"></td>
        <td id="LC1162" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1163" class="blob-num js-line-number" data-line-number="1163"></td>
        <td id="LC1163" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1164" class="blob-num js-line-number" data-line-number="1164"></td>
        <td id="LC1164" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> ret;</td>
      </tr>
      <tr>
        <td id="L1165" class="blob-num js-line-number" data-line-number="1165"></td>
        <td id="LC1165" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L1166" class="blob-num js-line-number" data-line-number="1166"></td>
        <td id="LC1166" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1167" class="blob-num js-line-number" data-line-number="1167"></td>
        <td id="LC1167" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1168" class="blob-num js-line-number" data-line-number="1168"></td>
        <td id="LC1168" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Checking whether the position of the &#39;=&#39; is correct</span></td>
      </tr>
      <tr>
        <td id="L1169" class="blob-num js-line-number" data-line-number="1169"></td>
        <td id="LC1169" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1170" class="blob-num js-line-number" data-line-number="1170"></td>
        <td id="LC1170" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Sometimes there is a problem if a &#39;=&#39; is used inside an entry (for example abstract)+</span></td>
      </tr>
      <tr>
        <td id="L1171" class="blob-num js-line-number" data-line-number="1171"></td>
        <td id="LC1171" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * This method checks if the &#39;=&#39; is outside braces then the &#39;=&#39; is correct and true is returned+</span></td>
      </tr>
      <tr>
        <td id="L1172" class="blob-num js-line-number" data-line-number="1172"></td>
        <td id="LC1172" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * If the &#39;=&#39; is inside braces it contains to a equation and therefore false is returned+</span></td>
      </tr>
      <tr>
        <td id="L1173" class="blob-num js-line-number" data-line-number="1173"></td>
        <td id="LC1173" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1174" class="blob-num js-line-number" data-line-number="1174"></td>
        <td id="LC1174" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@access</span> <span class="pl-c1">private</span></span></td>
      </tr>
      <tr>
        <td id="L1175" class="blob-num js-line-number" data-line-number="1175"></td>
        <td id="LC1175" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">string</span> entry The text of the whole remaining entry</span></td>
      </tr>
      <tr>
        <td id="L1176" class="blob-num js-line-number" data-line-number="1176"></td>
        <td id="LC1176" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">int</span> the current used place of the &#39;=&#39;</span></td>
      </tr>
      <tr>
        <td id="L1177" class="blob-num js-line-number" data-line-number="1177"></td>
        <td id="LC1177" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@return</span> bool true if the &#39;=&#39; is correct, false if it contains to an equation</span></td>
      </tr>
      <tr>
        <td id="L1178" class="blob-num js-line-number" data-line-number="1178"></td>
        <td id="LC1178" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1179" class="blob-num js-line-number" data-line-number="1179"></td>
        <td id="LC1179" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">_checkEqualSign</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">entry</span>, <span class="pl-smi">position</span>)</td>
      </tr>
      <tr>
        <td id="L1180" class="blob-num js-line-number" data-line-number="1180"></td>
        <td id="LC1180" class="blob-code blob-code-inner js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L1181" class="blob-num js-line-number" data-line-number="1181"></td>
        <td id="LC1181" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> ret <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L1182" class="blob-num js-line-number" data-line-number="1182"></td>
        <td id="LC1182" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span>This is getting tricky</span></td>
      </tr>
      <tr>
        <td id="L1183" class="blob-num js-line-number" data-line-number="1183"></td>
        <td id="LC1183" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span>We check the string backwards until the position and count the closing an opening braces</span></td>
      </tr>
      <tr>
        <td id="L1184" class="blob-num js-line-number" data-line-number="1184"></td>
        <td id="LC1184" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span>If we reach the position the amount of opening and closing braces should be equal</span></td>
      </tr>
      <tr>
        <td id="L1185" class="blob-num js-line-number" data-line-number="1185"></td>
        <td id="LC1185" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> length <span class="pl-k">=</span> <span class="pl-en">strlen</span>(entry);</td>
      </tr>
      <tr>
        <td id="L1186" class="blob-num js-line-number" data-line-number="1186"></td>
        <td id="LC1186" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> open   <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L1187" class="blob-num js-line-number" data-line-number="1187"></td>
        <td id="LC1187" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> length<span class="pl-k">-</span><span class="pl-c1">1</span>; i <span class="pl-k">&gt;=</span> position; i<span class="pl-k">--</span>) {</td>
      </tr>
      <tr>
        <td id="L1188" class="blob-num js-line-number" data-line-number="1188"></td>
        <td id="LC1188" class="blob-code blob-code-inner js-file-line">            precedingchar <span class="pl-k">=</span> <span class="pl-en">substr</span>(entry, i<span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1189" class="blob-num js-line-number" data-line-number="1189"></td>
        <td id="LC1189" class="blob-code blob-code-inner js-file-line">            charv          <span class="pl-k">=</span> <span class="pl-en">substr</span>(entry, i, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1190" class="blob-num js-line-number" data-line-number="1190"></td>
        <td id="LC1190" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ((<span class="pl-s"><span class="pl-pds">&#39;</span>{<span class="pl-pds">&#39;</span></span> <span class="pl-k">==</span> charv) <span class="pl-k">&amp;&amp;</span> (<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\\</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">!=</span> precedingchar)) {</td>
      </tr>
      <tr>
        <td id="L1191" class="blob-num js-line-number" data-line-number="1191"></td>
        <td id="LC1191" class="blob-code blob-code-inner js-file-line">                open<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L1192" class="blob-num js-line-number" data-line-number="1192"></td>
        <td id="LC1192" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1193" class="blob-num js-line-number" data-line-number="1193"></td>
        <td id="LC1193" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ((<span class="pl-s"><span class="pl-pds">&#39;</span>}<span class="pl-pds">&#39;</span></span> <span class="pl-k">==</span> charv) <span class="pl-k">&amp;&amp;</span> (<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\\</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">!=</span> precedingchar)) {</td>
      </tr>
      <tr>
        <td id="L1194" class="blob-num js-line-number" data-line-number="1194"></td>
        <td id="LC1194" class="blob-code blob-code-inner js-file-line">                open<span class="pl-k">--</span>;</td>
      </tr>
      <tr>
        <td id="L1195" class="blob-num js-line-number" data-line-number="1195"></td>
        <td id="LC1195" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1196" class="blob-num js-line-number" data-line-number="1196"></td>
        <td id="LC1196" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1197" class="blob-num js-line-number" data-line-number="1197"></td>
        <td id="LC1197" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-c1">0</span> <span class="pl-k">!=</span> open) {</td>
      </tr>
      <tr>
        <td id="L1198" class="blob-num js-line-number" data-line-number="1198"></td>
        <td id="LC1198" class="blob-code blob-code-inner js-file-line">            ret <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L1199" class="blob-num js-line-number" data-line-number="1199"></td>
        <td id="LC1199" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1200" class="blob-num js-line-number" data-line-number="1200"></td>
        <td id="LC1200" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span>There is still the posibility that the entry is delimited by double quotes+</span></td>
      </tr>
      <tr>
        <td id="L1201" class="blob-num js-line-number" data-line-number="1201"></td>
        <td id="LC1201" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span>Then it is possible that the braces are equal even if the &#39;=&#39; is in an equation+</span></td>
      </tr>
      <tr>
        <td id="L1202" class="blob-num js-line-number" data-line-number="1202"></td>
        <td id="LC1202" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (ret) {</td>
      </tr>
      <tr>
        <td id="L1203" class="blob-num js-line-number" data-line-number="1203"></td>
        <td id="LC1203" class="blob-code blob-code-inner js-file-line">            entrycopy <span class="pl-k">=</span> <span class="pl-en">trim</span>(entry);</td>
      </tr>
      <tr>
        <td id="L1204" class="blob-num js-line-number" data-line-number="1204"></td>
        <td id="LC1204" class="blob-code blob-code-inner js-file-line">            lastchar  <span class="pl-k">=</span> <span class="pl-en">substr</span>(entrycopy,<span class="pl-en">strlen</span>(entrycopy)<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1205" class="blob-num js-line-number" data-line-number="1205"></td>
        <td id="LC1205" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-s"><span class="pl-pds">&#39;</span>,<span class="pl-pds">&#39;</span></span> <span class="pl-k">==</span> lastchar) {</td>
      </tr>
      <tr>
        <td id="L1206" class="blob-num js-line-number" data-line-number="1206"></td>
        <td id="LC1206" class="blob-code blob-code-inner js-file-line">                lastchar <span class="pl-k">=</span> <span class="pl-en">substr</span>(entrycopy, <span class="pl-en">strlen</span>(entrycopy)<span class="pl-k">-</span><span class="pl-c1">2</span>, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1207" class="blob-num js-line-number" data-line-number="1207"></td>
        <td id="LC1207" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1208" class="blob-num js-line-number" data-line-number="1208"></td>
        <td id="LC1208" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span> <span class="pl-k">==</span> lastchar) {</td>
      </tr>
      <tr>
        <td id="L1209" class="blob-num js-line-number" data-line-number="1209"></td>
        <td id="LC1209" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span>The return value is set to false</span></td>
      </tr>
      <tr>
        <td id="L1210" class="blob-num js-line-number" data-line-number="1210"></td>
        <td id="LC1210" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span>If we find the closing &quot; before the &#39;=&#39; it is set to true again+</span></td>
      </tr>
      <tr>
        <td id="L1211" class="blob-num js-line-number" data-line-number="1211"></td>
        <td id="LC1211" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span>Remember we begin to search the entry backwards so the &quot; has to show up twice - ending and beginning delimiter</span></td>
      </tr>
      <tr>
        <td id="L1212" class="blob-num js-line-number" data-line-number="1212"></td>
        <td id="LC1212" class="blob-code blob-code-inner js-file-line">                ret <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L1213" class="blob-num js-line-number" data-line-number="1213"></td>
        <td id="LC1213" class="blob-code blob-code-inner js-file-line">                found <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L1214" class="blob-num js-line-number" data-line-number="1214"></td>
        <td id="LC1214" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> length; i <span class="pl-k">&gt;=</span> position; i<span class="pl-k">--</span>) {</td>
      </tr>
      <tr>
        <td id="L1215" class="blob-num js-line-number" data-line-number="1215"></td>
        <td id="LC1215" class="blob-code blob-code-inner js-file-line">                    precedingchar <span class="pl-k">=</span> <span class="pl-en">substr</span>(entry, i<span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1216" class="blob-num js-line-number" data-line-number="1216"></td>
        <td id="LC1216" class="blob-code blob-code-inner js-file-line">                    charv          <span class="pl-k">=</span> <span class="pl-en">substr</span>(entry, i, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1217" class="blob-num js-line-number" data-line-number="1217"></td>
        <td id="LC1217" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> ((<span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span> <span class="pl-k">==</span> charv) <span class="pl-k">&amp;&amp;</span> (<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\\</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">!=</span> precedingchar)) {</td>
      </tr>
      <tr>
        <td id="L1218" class="blob-num js-line-number" data-line-number="1218"></td>
        <td id="LC1218" class="blob-code blob-code-inner js-file-line">                        found<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L1219" class="blob-num js-line-number" data-line-number="1219"></td>
        <td id="LC1219" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L1220" class="blob-num js-line-number" data-line-number="1220"></td>
        <td id="LC1220" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (<span class="pl-c1">2</span> <span class="pl-k">==</span> found) {</td>
      </tr>
      <tr>
        <td id="L1221" class="blob-num js-line-number" data-line-number="1221"></td>
        <td id="LC1221" class="blob-code blob-code-inner js-file-line">                        ret <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L1222" class="blob-num js-line-number" data-line-number="1222"></td>
        <td id="LC1222" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L1223" class="blob-num js-line-number" data-line-number="1223"></td>
        <td id="LC1223" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L1224" class="blob-num js-line-number" data-line-number="1224"></td>
        <td id="LC1224" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1225" class="blob-num js-line-number" data-line-number="1225"></td>
        <td id="LC1225" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1226" class="blob-num js-line-number" data-line-number="1226"></td>
        <td id="LC1226" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1227" class="blob-num js-line-number" data-line-number="1227"></td>
        <td id="LC1227" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> ret;</td>
      </tr>
      <tr>
        <td id="L1228" class="blob-num js-line-number" data-line-number="1228"></td>
        <td id="LC1228" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L1229" class="blob-num js-line-number" data-line-number="1229"></td>
        <td id="LC1229" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1230" class="blob-num js-line-number" data-line-number="1230"></td>
        <td id="LC1230" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1231" class="blob-num js-line-number" data-line-number="1231"></td>
        <td id="LC1231" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Checking if the entry type is allowed</span></td>
      </tr>
      <tr>
        <td id="L1232" class="blob-num js-line-number" data-line-number="1232"></td>
        <td id="LC1232" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1233" class="blob-num js-line-number" data-line-number="1233"></td>
        <td id="LC1233" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@access</span> <span class="pl-c1">private</span></span></td>
      </tr>
      <tr>
        <td id="L1234" class="blob-num js-line-number" data-line-number="1234"></td>
        <td id="LC1234" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">string</span> entry The entry to check</span></td>
      </tr>
      <tr>
        <td id="L1235" class="blob-num js-line-number" data-line-number="1235"></td>
        <td id="LC1235" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@return</span> bool true if allowed, false otherwise</span></td>
      </tr>
      <tr>
        <td id="L1236" class="blob-num js-line-number" data-line-number="1236"></td>
        <td id="LC1236" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1237" class="blob-num js-line-number" data-line-number="1237"></td>
        <td id="LC1237" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">_checkAllowedEntryType</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">entry</span>)</td>
      </tr>
      <tr>
        <td id="L1238" class="blob-num js-line-number" data-line-number="1238"></td>
        <td id="LC1238" class="blob-code blob-code-inner js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L1239" class="blob-num js-line-number" data-line-number="1239"></td>
        <td id="LC1239" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">in_array</span>(entry, <span class="pl-c1">this</span>.<span class="pl-smi">allowedEntryTypes</span>);</td>
      </tr>
      <tr>
        <td id="L1240" class="blob-num js-line-number" data-line-number="1240"></td>
        <td id="LC1240" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L1241" class="blob-num js-line-number" data-line-number="1241"></td>
        <td id="LC1241" class="blob-code blob-code-inner js-file-line">    </td>
      </tr>
      <tr>
        <td id="L1242" class="blob-num js-line-number" data-line-number="1242"></td>
        <td id="LC1242" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1243" class="blob-num js-line-number" data-line-number="1243"></td>
        <td id="LC1243" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Checking whether an at is outside an entry</span></td>
      </tr>
      <tr>
        <td id="L1244" class="blob-num js-line-number" data-line-number="1244"></td>
        <td id="LC1244" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1245" class="blob-num js-line-number" data-line-number="1245"></td>
        <td id="LC1245" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Sometimes an entry misses an entry brace+ Then the at of the next entry seems to be</span></td>
      </tr>
      <tr>
        <td id="L1246" class="blob-num js-line-number" data-line-number="1246"></td>
        <td id="LC1246" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * inside an entry+ This is checked here+ When it is most likely that the at is an opening</span></td>
      </tr>
      <tr>
        <td id="L1247" class="blob-num js-line-number" data-line-number="1247"></td>
        <td id="LC1247" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * at of the next entry this method returns true+</span></td>
      </tr>
      <tr>
        <td id="L1248" class="blob-num js-line-number" data-line-number="1248"></td>
        <td id="LC1248" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1249" class="blob-num js-line-number" data-line-number="1249"></td>
        <td id="LC1249" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@access</span> <span class="pl-c1">private</span></span></td>
      </tr>
      <tr>
        <td id="L1250" class="blob-num js-line-number" data-line-number="1250"></td>
        <td id="LC1250" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">string</span> entry The text of the entry until the at</span></td>
      </tr>
      <tr>
        <td id="L1251" class="blob-num js-line-number" data-line-number="1251"></td>
        <td id="LC1251" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@return</span> bool true if the at is correct, false if the at is likely to begin the next entry+</span></td>
      </tr>
      <tr>
        <td id="L1252" class="blob-num js-line-number" data-line-number="1252"></td>
        <td id="LC1252" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1253" class="blob-num js-line-number" data-line-number="1253"></td>
        <td id="LC1253" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">_checkAt</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">entry</span>)</td>
      </tr>
      <tr>
        <td id="L1254" class="blob-num js-line-number" data-line-number="1254"></td>
        <td id="LC1254" class="blob-code blob-code-inner js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L1255" class="blob-num js-line-number" data-line-number="1255"></td>
        <td id="LC1255" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> ret     <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L1256" class="blob-num js-line-number" data-line-number="1256"></td>
        <td id="LC1256" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> opening <span class="pl-k">=</span> <span class="pl-en">array_keys</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_delimiters</span>);</td>
      </tr>
      <tr>
        <td id="L1257" class="blob-num js-line-number" data-line-number="1257"></td>
        <td id="LC1257" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> closing <span class="pl-k">=</span> <span class="pl-en">array_values</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_delimiters</span>);</td>
      </tr>
      <tr>
        <td id="L1258" class="blob-num js-line-number" data-line-number="1258"></td>
        <td id="LC1258" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span>Getting the value (at is only allowd in values)</span></td>
      </tr>
      <tr>
        <td id="L1259" class="blob-num js-line-number" data-line-number="1259"></td>
        <td id="LC1259" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-en">strrpos</span>(entry,<span class="pl-s"><span class="pl-pds">&#39;</span>=<span class="pl-pds">&#39;</span></span>) <span class="pl-k">!==</span> <span class="pl-c1">false</span>) {</td>
      </tr>
      <tr>
        <td id="L1260" class="blob-num js-line-number" data-line-number="1260"></td>
        <td id="LC1260" class="blob-code blob-code-inner js-file-line">            position <span class="pl-k">=</span> <span class="pl-en">strrpos</span>(entry, <span class="pl-s"><span class="pl-pds">&#39;</span>=<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1261" class="blob-num js-line-number" data-line-number="1261"></td>
        <td id="LC1261" class="blob-code blob-code-inner js-file-line">            proceed  <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L1262" class="blob-num js-line-number" data-line-number="1262"></td>
        <td id="LC1262" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-en">substr</span>(entry, position<span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-c1">1</span>) <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\\</span><span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L1263" class="blob-num js-line-number" data-line-number="1263"></td>
        <td id="LC1263" class="blob-code blob-code-inner js-file-line">                proceed <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L1264" class="blob-num js-line-number" data-line-number="1264"></td>
        <td id="LC1264" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1265" class="blob-num js-line-number" data-line-number="1265"></td>
        <td id="LC1265" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">while</span> (<span class="pl-k">!</span>proceed) {</td>
      </tr>
      <tr>
        <td id="L1266" class="blob-num js-line-number" data-line-number="1266"></td>
        <td id="LC1266" class="blob-code blob-code-inner js-file-line">                substring <span class="pl-k">=</span> <span class="pl-en">substr</span>(entry, <span class="pl-c1">0</span>, position);</td>
      </tr>
      <tr>
        <td id="L1267" class="blob-num js-line-number" data-line-number="1267"></td>
        <td id="LC1267" class="blob-code blob-code-inner js-file-line">                position  <span class="pl-k">=</span> <span class="pl-en">strrpos</span>(substring,<span class="pl-s"><span class="pl-pds">&#39;</span>=<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1268" class="blob-num js-line-number" data-line-number="1268"></td>
        <td id="LC1268" class="blob-code blob-code-inner js-file-line">                proceed   <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L1269" class="blob-num js-line-number" data-line-number="1269"></td>
        <td id="LC1269" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-en">substr</span>(entry, position<span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-c1">1</span>) <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\\</span><span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L1270" class="blob-num js-line-number" data-line-number="1270"></td>
        <td id="LC1270" class="blob-code blob-code-inner js-file-line">                    proceed <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L1271" class="blob-num js-line-number" data-line-number="1271"></td>
        <td id="LC1271" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1272" class="blob-num js-line-number" data-line-number="1272"></td>
        <td id="LC1272" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1273" class="blob-num js-line-number" data-line-number="1273"></td>
        <td id="LC1273" class="blob-code blob-code-inner js-file-line">            value    <span class="pl-k">=</span> <span class="pl-en">trim</span>(<span class="pl-en">substr</span>(entry, position<span class="pl-k">+</span><span class="pl-c1">1</span>));</td>
      </tr>
      <tr>
        <td id="L1274" class="blob-num js-line-number" data-line-number="1274"></td>
        <td id="LC1274" class="blob-code blob-code-inner js-file-line">            open     <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L1275" class="blob-num js-line-number" data-line-number="1275"></td>
        <td id="LC1275" class="blob-code blob-code-inner js-file-line">            charv     <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1276" class="blob-num js-line-number" data-line-number="1276"></td>
        <td id="LC1276" class="blob-code blob-code-inner js-file-line">            lastchar <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1277" class="blob-num js-line-number" data-line-number="1277"></td>
        <td id="LC1277" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> <span class="pl-en">strlen</span>(value); i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L1278" class="blob-num js-line-number" data-line-number="1278"></td>
        <td id="LC1278" class="blob-code blob-code-inner js-file-line">                charv <span class="pl-k">=</span> <span class="pl-en">substr</span>(<span class="pl-c1">this</span>.<span class="pl-c1">content</span>, i, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1279" class="blob-num js-line-number" data-line-number="1279"></td>
        <td id="LC1279" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-en">in_array</span>(charv, opening) <span class="pl-k">&amp;&amp;</span> (<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\\</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">!=</span> lastchar)) {</td>
      </tr>
      <tr>
        <td id="L1280" class="blob-num js-line-number" data-line-number="1280"></td>
        <td id="LC1280" class="blob-code blob-code-inner js-file-line">                    open<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L1281" class="blob-num js-line-number" data-line-number="1281"></td>
        <td id="LC1281" class="blob-code blob-code-inner js-file-line">                } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-en">in_array</span>(charv, closing) <span class="pl-k">&amp;&amp;</span> (<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\\</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">!=</span> lastchar)) {</td>
      </tr>
      <tr>
        <td id="L1282" class="blob-num js-line-number" data-line-number="1282"></td>
        <td id="LC1282" class="blob-code blob-code-inner js-file-line">                    open<span class="pl-k">--</span>;</td>
      </tr>
      <tr>
        <td id="L1283" class="blob-num js-line-number" data-line-number="1283"></td>
        <td id="LC1283" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1284" class="blob-num js-line-number" data-line-number="1284"></td>
        <td id="LC1284" class="blob-code blob-code-inner js-file-line">                lastchar <span class="pl-k">=</span> charv;</td>
      </tr>
      <tr>
        <td id="L1285" class="blob-num js-line-number" data-line-number="1285"></td>
        <td id="LC1285" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1286" class="blob-num js-line-number" data-line-number="1286"></td>
        <td id="LC1286" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>if open is grater zero were are inside an entry</span></td>
      </tr>
      <tr>
        <td id="L1287" class="blob-num js-line-number" data-line-number="1287"></td>
        <td id="LC1287" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (open<span class="pl-k">&gt;</span><span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L1288" class="blob-num js-line-number" data-line-number="1288"></td>
        <td id="LC1288" class="blob-code blob-code-inner js-file-line">                ret <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L1289" class="blob-num js-line-number" data-line-number="1289"></td>
        <td id="LC1289" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1290" class="blob-num js-line-number" data-line-number="1290"></td>
        <td id="LC1290" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1291" class="blob-num js-line-number" data-line-number="1291"></td>
        <td id="LC1291" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> ret;</td>
      </tr>
      <tr>
        <td id="L1292" class="blob-num js-line-number" data-line-number="1292"></td>
        <td id="LC1292" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L1293" class="blob-num js-line-number" data-line-number="1293"></td>
        <td id="LC1293" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1294" class="blob-num js-line-number" data-line-number="1294"></td>
        <td id="LC1294" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1295" class="blob-num js-line-number" data-line-number="1295"></td>
        <td id="LC1295" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Stripping Delimiter</span></td>
      </tr>
      <tr>
        <td id="L1296" class="blob-num js-line-number" data-line-number="1296"></td>
        <td id="LC1296" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1297" class="blob-num js-line-number" data-line-number="1297"></td>
        <td id="LC1297" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@access</span> <span class="pl-c1">private</span></span></td>
      </tr>
      <tr>
        <td id="L1298" class="blob-num js-line-number" data-line-number="1298"></td>
        <td id="LC1298" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">string</span> entry The entry where the Delimiter should be stripped from</span></td>
      </tr>
      <tr>
        <td id="L1299" class="blob-num js-line-number" data-line-number="1299"></td>
        <td id="LC1299" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@return</span> string Stripped entry</span></td>
      </tr>
      <tr>
        <td id="L1300" class="blob-num js-line-number" data-line-number="1300"></td>
        <td id="LC1300" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1301" class="blob-num js-line-number" data-line-number="1301"></td>
        <td id="LC1301" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">_stripDelimiter</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">entry</span>)</td>
      </tr>
      <tr>
        <td id="L1302" class="blob-num js-line-number" data-line-number="1302"></td>
        <td id="LC1302" class="blob-code blob-code-inner js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L1303" class="blob-num js-line-number" data-line-number="1303"></td>
        <td id="LC1303" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> beginningdels <span class="pl-k">=</span> <span class="pl-en">array_keys</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_delimiters</span>);</td>
      </tr>
      <tr>
        <td id="L1304" class="blob-num js-line-number" data-line-number="1304"></td>
        <td id="LC1304" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> ength        <span class="pl-k">=</span> <span class="pl-en">strlen</span>(entry);</td>
      </tr>
      <tr>
        <td id="L1305" class="blob-num js-line-number" data-line-number="1305"></td>
        <td id="LC1305" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> firstchar     <span class="pl-k">=</span> <span class="pl-en">substr</span>(entry, <span class="pl-c1">0</span>, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1306" class="blob-num js-line-number" data-line-number="1306"></td>
        <td id="LC1306" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> lastchar      <span class="pl-k">=</span> <span class="pl-en">substr</span>(entry, <span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1307" class="blob-num js-line-number" data-line-number="1307"></td>
        <td id="LC1307" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">while</span> (<span class="pl-en">in_array</span>(firstchar, beginningdels)) { <span class="pl-c"><span class="pl-c">//</span>The first character is an opening delimiter</span></td>
      </tr>
      <tr>
        <td id="L1308" class="blob-num js-line-number" data-line-number="1308"></td>
        <td id="LC1308" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (lastchar <span class="pl-k">==</span> <span class="pl-c1">this</span>.<span class="pl-smi">_delimiters</span>[firstchar]) { <span class="pl-c"><span class="pl-c">//</span>Matches to closing Delimiter</span></td>
      </tr>
      <tr>
        <td id="L1309" class="blob-num js-line-number" data-line-number="1309"></td>
        <td id="LC1309" class="blob-code blob-code-inner js-file-line">                entry <span class="pl-k">=</span> <span class="pl-en">substr</span>(entry, <span class="pl-c1">1</span>, <span class="pl-k">-</span><span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1310" class="blob-num js-line-number" data-line-number="1310"></td>
        <td id="LC1310" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1311" class="blob-num js-line-number" data-line-number="1311"></td>
        <td id="LC1311" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L1312" class="blob-num js-line-number" data-line-number="1312"></td>
        <td id="LC1312" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1313" class="blob-num js-line-number" data-line-number="1313"></td>
        <td id="LC1313" class="blob-code blob-code-inner js-file-line">            firstchar <span class="pl-k">=</span> <span class="pl-en">substr</span>(entry, <span class="pl-c1">0</span>, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1314" class="blob-num js-line-number" data-line-number="1314"></td>
        <td id="LC1314" class="blob-code blob-code-inner js-file-line">            lastchar  <span class="pl-k">=</span> <span class="pl-en">substr</span>(entry, <span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1315" class="blob-num js-line-number" data-line-number="1315"></td>
        <td id="LC1315" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1316" class="blob-num js-line-number" data-line-number="1316"></td>
        <td id="LC1316" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> entry;</td>
      </tr>
      <tr>
        <td id="L1317" class="blob-num js-line-number" data-line-number="1317"></td>
        <td id="LC1317" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L1318" class="blob-num js-line-number" data-line-number="1318"></td>
        <td id="LC1318" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1319" class="blob-num js-line-number" data-line-number="1319"></td>
        <td id="LC1319" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1320" class="blob-num js-line-number" data-line-number="1320"></td>
        <td id="LC1320" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Unwrapping entry</span></td>
      </tr>
      <tr>
        <td id="L1321" class="blob-num js-line-number" data-line-number="1321"></td>
        <td id="LC1321" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1322" class="blob-num js-line-number" data-line-number="1322"></td>
        <td id="LC1322" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@access</span> <span class="pl-c1">private</span></span></td>
      </tr>
      <tr>
        <td id="L1323" class="blob-num js-line-number" data-line-number="1323"></td>
        <td id="LC1323" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">string</span> entry The entry to unwrap</span></td>
      </tr>
      <tr>
        <td id="L1324" class="blob-num js-line-number" data-line-number="1324"></td>
        <td id="LC1324" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@return</span> string unwrapped entry</span></td>
      </tr>
      <tr>
        <td id="L1325" class="blob-num js-line-number" data-line-number="1325"></td>
        <td id="LC1325" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1326" class="blob-num js-line-number" data-line-number="1326"></td>
        <td id="LC1326" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">_unwrap</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">entry</span>)</td>
      </tr>
      <tr>
        <td id="L1327" class="blob-num js-line-number" data-line-number="1327"></td>
        <td id="LC1327" class="blob-code blob-code-inner js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L1328" class="blob-num js-line-number" data-line-number="1328"></td>
        <td id="LC1328" class="blob-code blob-code-inner js-file-line">        entry <span class="pl-k">=</span> <span class="pl-smi">entry</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-k">+</span><span class="pl-pds">/</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1329" class="blob-num js-line-number" data-line-number="1329"></td>
        <td id="LC1329" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">trim</span>(entry);</td>
      </tr>
      <tr>
        <td id="L1330" class="blob-num js-line-number" data-line-number="1330"></td>
        <td id="LC1330" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L1331" class="blob-num js-line-number" data-line-number="1331"></td>
        <td id="LC1331" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1332" class="blob-num js-line-number" data-line-number="1332"></td>
        <td id="LC1332" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1333" class="blob-num js-line-number" data-line-number="1333"></td>
        <td id="LC1333" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Wordwrap an entry</span></td>
      </tr>
      <tr>
        <td id="L1334" class="blob-num js-line-number" data-line-number="1334"></td>
        <td id="LC1334" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1335" class="blob-num js-line-number" data-line-number="1335"></td>
        <td id="LC1335" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@access</span> <span class="pl-c1">private</span></span></td>
      </tr>
      <tr>
        <td id="L1336" class="blob-num js-line-number" data-line-number="1336"></td>
        <td id="LC1336" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">string</span> entry The entry to wrap</span></td>
      </tr>
      <tr>
        <td id="L1337" class="blob-num js-line-number" data-line-number="1337"></td>
        <td id="LC1337" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@return</span> string wrapped entry</span></td>
      </tr>
      <tr>
        <td id="L1338" class="blob-num js-line-number" data-line-number="1338"></td>
        <td id="LC1338" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1339" class="blob-num js-line-number" data-line-number="1339"></td>
        <td id="LC1339" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">_wordwrap</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">entry</span>)</td>
      </tr>
      <tr>
        <td id="L1340" class="blob-num js-line-number" data-line-number="1340"></td>
        <td id="LC1340" class="blob-code blob-code-inner js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L1341" class="blob-num js-line-number" data-line-number="1341"></td>
        <td id="LC1341" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( (<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span><span class="pl-k">!=</span>entry) <span class="pl-k">&amp;&amp;</span> (<span class="pl-en">is_string</span>(entry)) ) {</td>
      </tr>
      <tr>
        <td id="L1342" class="blob-num js-line-number" data-line-number="1342"></td>
        <td id="LC1342" class="blob-code blob-code-inner js-file-line">            entry <span class="pl-k">=</span> <span class="pl-en">wordwrap</span>(entry, <span class="pl-c1">this</span>.<span class="pl-smi">_options</span>[<span class="pl-s"><span class="pl-pds">&#39;</span>wordWrapWidth<span class="pl-pds">&#39;</span></span>], <span class="pl-c1">this</span>.<span class="pl-smi">_options</span>[<span class="pl-s"><span class="pl-pds">&#39;</span>wordWrapBreak<span class="pl-pds">&#39;</span></span>], <span class="pl-c1">this</span>.<span class="pl-smi">_options</span>[<span class="pl-s"><span class="pl-pds">&#39;</span>wordWrapCut<span class="pl-pds">&#39;</span></span>]);</td>
      </tr>
      <tr>
        <td id="L1343" class="blob-num js-line-number" data-line-number="1343"></td>
        <td id="LC1343" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1344" class="blob-num js-line-number" data-line-number="1344"></td>
        <td id="LC1344" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> entry;</td>
      </tr>
      <tr>
        <td id="L1345" class="blob-num js-line-number" data-line-number="1345"></td>
        <td id="LC1345" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L1346" class="blob-num js-line-number" data-line-number="1346"></td>
        <td id="LC1346" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1347" class="blob-num js-line-number" data-line-number="1347"></td>
        <td id="LC1347" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1348" class="blob-num js-line-number" data-line-number="1348"></td>
        <td id="LC1348" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Extracting the authors</span></td>
      </tr>
      <tr>
        <td id="L1349" class="blob-num js-line-number" data-line-number="1349"></td>
        <td id="LC1349" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1350" class="blob-num js-line-number" data-line-number="1350"></td>
        <td id="LC1350" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@access</span> <span class="pl-c1">private</span></span></td>
      </tr>
      <tr>
        <td id="L1351" class="blob-num js-line-number" data-line-number="1351"></td>
        <td id="LC1351" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">string</span> entry The entry with the authors</span></td>
      </tr>
      <tr>
        <td id="L1352" class="blob-num js-line-number" data-line-number="1352"></td>
        <td id="LC1352" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@return</span> array the extracted authors</span></td>
      </tr>
      <tr>
        <td id="L1353" class="blob-num js-line-number" data-line-number="1353"></td>
        <td id="LC1353" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1354" class="blob-num js-line-number" data-line-number="1354"></td>
        <td id="LC1354" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">_extractAuthors</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">entry</span>) {</td>
      </tr>
      <tr>
        <td id="L1355" class="blob-num js-line-number" data-line-number="1355"></td>
        <td id="LC1355" class="blob-code blob-code-inner js-file-line">        entry       <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">_unwrap</span>(entry);</td>
      </tr>
      <tr>
        <td id="L1356" class="blob-num js-line-number" data-line-number="1356"></td>
        <td id="LC1356" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> authorarray <span class="pl-k">=</span> <span class="pl-smi">entry</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&#39;</span> and <span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1357" class="blob-num js-line-number" data-line-number="1357"></td>
        <td id="LC1357" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> <span class="pl-smi">authorarray</span>.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L1358" class="blob-num js-line-number" data-line-number="1358"></td>
        <td id="LC1358" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> author <span class="pl-k">=</span> <span class="pl-en">trim</span>(authorarray[i]);</td>
      </tr>
      <tr>
        <td id="L1359" class="blob-num js-line-number" data-line-number="1359"></td>
        <td id="LC1359" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">/*</span>The first version of how an author could be written (First von Last)</span></td>
      </tr>
      <tr>
        <td id="L1360" class="blob-num js-line-number" data-line-number="1360"></td>
        <td id="LC1360" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             has no commas in it<span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1361" class="blob-num js-line-number" data-line-number="1361"></td>
        <td id="LC1361" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> first    <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1362" class="blob-num js-line-number" data-line-number="1362"></td>
        <td id="LC1362" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> von      <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1363" class="blob-num js-line-number" data-line-number="1363"></td>
        <td id="LC1363" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> last     <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1364" class="blob-num js-line-number" data-line-number="1364"></td>
        <td id="LC1364" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> jr       <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1365" class="blob-num js-line-number" data-line-number="1365"></td>
        <td id="LC1365" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-en">strpos</span>(author, <span class="pl-s"><span class="pl-pds">&#39;</span>,<span class="pl-pds">&#39;</span></span>) <span class="pl-k">===</span> <span class="pl-c1">false</span>) {</td>
      </tr>
      <tr>
        <td id="L1366" class="blob-num js-line-number" data-line-number="1366"></td>
        <td id="LC1366" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> tmparray <span class="pl-k">=</span> <span class="pl-smi">author</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&#39;</span> |~<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1367" class="blob-num js-line-number" data-line-number="1367"></td>
        <td id="LC1367" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> size     <span class="pl-k">=</span> <span class="pl-smi">tmparray</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L1368" class="blob-num js-line-number" data-line-number="1368"></td>
        <td id="LC1368" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-c1">1</span> <span class="pl-k">==</span> size) { <span class="pl-c"><span class="pl-c">//</span>There is only a last</span></td>
      </tr>
      <tr>
        <td id="L1369" class="blob-num js-line-number" data-line-number="1369"></td>
        <td id="LC1369" class="blob-code blob-code-inner js-file-line">                    last <span class="pl-k">=</span> tmparray[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L1370" class="blob-num js-line-number" data-line-number="1370"></td>
        <td id="LC1370" class="blob-code blob-code-inner js-file-line">                } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-c1">2</span> <span class="pl-k">==</span> size) { <span class="pl-c"><span class="pl-c">//</span>There is a first and a last</span></td>
      </tr>
      <tr>
        <td id="L1371" class="blob-num js-line-number" data-line-number="1371"></td>
        <td id="LC1371" class="blob-code blob-code-inner js-file-line">                    first <span class="pl-k">=</span> tmparray[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L1372" class="blob-num js-line-number" data-line-number="1372"></td>
        <td id="LC1372" class="blob-code blob-code-inner js-file-line">                    last  <span class="pl-k">=</span> tmparray[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L1373" class="blob-num js-line-number" data-line-number="1373"></td>
        <td id="LC1373" class="blob-code blob-code-inner js-file-line">                } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1374" class="blob-num js-line-number" data-line-number="1374"></td>
        <td id="LC1374" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">var</span> invon  <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L1375" class="blob-num js-line-number" data-line-number="1375"></td>
        <td id="LC1375" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">var</span> inlast <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L1376" class="blob-num js-line-number" data-line-number="1376"></td>
        <td id="LC1376" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">for</span> (<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-c1">0</span>; j<span class="pl-k">&lt;</span>(size<span class="pl-k">-</span><span class="pl-c1">1</span>); j<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L1377" class="blob-num js-line-number" data-line-number="1377"></td>
        <td id="LC1377" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (inlast) {</td>
      </tr>
      <tr>
        <td id="L1378" class="blob-num js-line-number" data-line-number="1378"></td>
        <td id="LC1378" class="blob-code blob-code-inner js-file-line">                            last <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>tmparray[j];</td>
      </tr>
      <tr>
        <td id="L1379" class="blob-num js-line-number" data-line-number="1379"></td>
        <td id="LC1379" class="blob-code blob-code-inner js-file-line">                        } <span class="pl-k">else</span> <span class="pl-k">if</span> (invon) {</td>
      </tr>
      <tr>
        <td id="L1380" class="blob-num js-line-number" data-line-number="1380"></td>
        <td id="LC1380" class="blob-code blob-code-inner js-file-line">                            casev <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">_determineCase</span>(tmparray[j]);</td>
      </tr>
      <tr>
        <td id="L1381" class="blob-num js-line-number" data-line-number="1381"></td>
        <td id="LC1381" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">if</span> (<span class="pl-c1">this</span>.<span class="pl-en">isError</span>(casev)) {</td>
      </tr>
      <tr>
        <td id="L1382" class="blob-num js-line-number" data-line-number="1382"></td>
        <td id="LC1382" class="blob-code blob-code-inner js-file-line">                                <span class="pl-c"><span class="pl-c">//</span> IGNORE?</span></td>
      </tr>
      <tr>
        <td id="L1383" class="blob-num js-line-number" data-line-number="1383"></td>
        <td id="LC1383" class="blob-code blob-code-inner js-file-line">                            } <span class="pl-k">else</span> <span class="pl-k">if</span> ((<span class="pl-c1">0</span> <span class="pl-k">==</span> casev) <span class="pl-k">||</span> (<span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">==</span> casev)) { <span class="pl-c"><span class="pl-c">//</span>Change from von to last</span></td>
      </tr>
      <tr>
        <td id="L1384" class="blob-num js-line-number" data-line-number="1384"></td>
        <td id="LC1384" class="blob-code blob-code-inner js-file-line">                                <span class="pl-c"><span class="pl-c">//</span>You only change when there is no more lower case there</span></td>
      </tr>
      <tr>
        <td id="L1385" class="blob-num js-line-number" data-line-number="1385"></td>
        <td id="LC1385" class="blob-code blob-code-inner js-file-line">                                islast <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L1386" class="blob-num js-line-number" data-line-number="1386"></td>
        <td id="LC1386" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">for</span> (<span class="pl-k">var</span> k<span class="pl-k">=</span>(j<span class="pl-k">+</span><span class="pl-c1">1</span>); k<span class="pl-k">&lt;</span>(size<span class="pl-k">-</span><span class="pl-c1">1</span>); k<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L1387" class="blob-num js-line-number" data-line-number="1387"></td>
        <td id="LC1387" class="blob-code blob-code-inner js-file-line">                                    futurecase <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">_determineCase</span>(tmparray[k]);</td>
      </tr>
      <tr>
        <td id="L1388" class="blob-num js-line-number" data-line-number="1388"></td>
        <td id="LC1388" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">if</span> (<span class="pl-c1">this</span>.<span class="pl-en">isError</span>(casev)) {</td>
      </tr>
      <tr>
        <td id="L1389" class="blob-num js-line-number" data-line-number="1389"></td>
        <td id="LC1389" class="blob-code blob-code-inner js-file-line">                                        <span class="pl-c"><span class="pl-c">//</span> IGNORE?</span></td>
      </tr>
      <tr>
        <td id="L1390" class="blob-num js-line-number" data-line-number="1390"></td>
        <td id="LC1390" class="blob-code blob-code-inner js-file-line">                                    } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-c1">0</span> <span class="pl-k">==</span> futurecase) {</td>
      </tr>
      <tr>
        <td id="L1391" class="blob-num js-line-number" data-line-number="1391"></td>
        <td id="LC1391" class="blob-code blob-code-inner js-file-line">                                        islast <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L1392" class="blob-num js-line-number" data-line-number="1392"></td>
        <td id="LC1392" class="blob-code blob-code-inner js-file-line">                                    }</td>
      </tr>
      <tr>
        <td id="L1393" class="blob-num js-line-number" data-line-number="1393"></td>
        <td id="LC1393" class="blob-code blob-code-inner js-file-line">                                }</td>
      </tr>
      <tr>
        <td id="L1394" class="blob-num js-line-number" data-line-number="1394"></td>
        <td id="LC1394" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">if</span> (islast) {</td>
      </tr>
      <tr>
        <td id="L1395" class="blob-num js-line-number" data-line-number="1395"></td>
        <td id="LC1395" class="blob-code blob-code-inner js-file-line">                                    inlast <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L1396" class="blob-num js-line-number" data-line-number="1396"></td>
        <td id="LC1396" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">if</span> (<span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">==</span> casev) { <span class="pl-c"><span class="pl-c">//</span>Caseless belongs to the last</span></td>
      </tr>
      <tr>
        <td id="L1397" class="blob-num js-line-number" data-line-number="1397"></td>
        <td id="LC1397" class="blob-code blob-code-inner js-file-line">                                        last <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>tmparray[j];</td>
      </tr>
      <tr>
        <td id="L1398" class="blob-num js-line-number" data-line-number="1398"></td>
        <td id="LC1398" class="blob-code blob-code-inner js-file-line">                                    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1399" class="blob-num js-line-number" data-line-number="1399"></td>
        <td id="LC1399" class="blob-code blob-code-inner js-file-line">                                        von  <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>tmparray[j];</td>
      </tr>
      <tr>
        <td id="L1400" class="blob-num js-line-number" data-line-number="1400"></td>
        <td id="LC1400" class="blob-code blob-code-inner js-file-line">                                    }</td>
      </tr>
      <tr>
        <td id="L1401" class="blob-num js-line-number" data-line-number="1401"></td>
        <td id="LC1401" class="blob-code blob-code-inner js-file-line">                                } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1402" class="blob-num js-line-number" data-line-number="1402"></td>
        <td id="LC1402" class="blob-code blob-code-inner js-file-line">                                    von    <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>tmparray[j];</td>
      </tr>
      <tr>
        <td id="L1403" class="blob-num js-line-number" data-line-number="1403"></td>
        <td id="LC1403" class="blob-code blob-code-inner js-file-line">                                }</td>
      </tr>
      <tr>
        <td id="L1404" class="blob-num js-line-number" data-line-number="1404"></td>
        <td id="LC1404" class="blob-code blob-code-inner js-file-line">                            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1405" class="blob-num js-line-number" data-line-number="1405"></td>
        <td id="LC1405" class="blob-code blob-code-inner js-file-line">                                von <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>tmparray[j];</td>
      </tr>
      <tr>
        <td id="L1406" class="blob-num js-line-number" data-line-number="1406"></td>
        <td id="LC1406" class="blob-code blob-code-inner js-file-line">                            }</td>
      </tr>
      <tr>
        <td id="L1407" class="blob-num js-line-number" data-line-number="1407"></td>
        <td id="LC1407" class="blob-code blob-code-inner js-file-line">                        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1408" class="blob-num js-line-number" data-line-number="1408"></td>
        <td id="LC1408" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">var</span> casev <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">_determineCase</span>(tmparray[j]);</td>
      </tr>
      <tr>
        <td id="L1409" class="blob-num js-line-number" data-line-number="1409"></td>
        <td id="LC1409" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">if</span> (<span class="pl-c1">this</span>.<span class="pl-en">isError</span>(casev)) {</td>
      </tr>
      <tr>
        <td id="L1410" class="blob-num js-line-number" data-line-number="1410"></td>
        <td id="LC1410" class="blob-code blob-code-inner js-file-line">                                <span class="pl-c"><span class="pl-c">//</span> IGNORE?</span></td>
      </tr>
      <tr>
        <td id="L1411" class="blob-num js-line-number" data-line-number="1411"></td>
        <td id="LC1411" class="blob-code blob-code-inner js-file-line">                            } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-c1">0</span> <span class="pl-k">==</span> casev) { <span class="pl-c"><span class="pl-c">//</span>Change from first to von</span></td>
      </tr>
      <tr>
        <td id="L1412" class="blob-num js-line-number" data-line-number="1412"></td>
        <td id="LC1412" class="blob-code blob-code-inner js-file-line">                                invon <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L1413" class="blob-num js-line-number" data-line-number="1413"></td>
        <td id="LC1413" class="blob-code blob-code-inner js-file-line">                                von   <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>tmparray[j];</td>
      </tr>
      <tr>
        <td id="L1414" class="blob-num js-line-number" data-line-number="1414"></td>
        <td id="LC1414" class="blob-code blob-code-inner js-file-line">                            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1415" class="blob-num js-line-number" data-line-number="1415"></td>
        <td id="LC1415" class="blob-code blob-code-inner js-file-line">                                first <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>tmparray[j];</td>
      </tr>
      <tr>
        <td id="L1416" class="blob-num js-line-number" data-line-number="1416"></td>
        <td id="LC1416" class="blob-code blob-code-inner js-file-line">                            }</td>
      </tr>
      <tr>
        <td id="L1417" class="blob-num js-line-number" data-line-number="1417"></td>
        <td id="LC1417" class="blob-code blob-code-inner js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L1418" class="blob-num js-line-number" data-line-number="1418"></td>
        <td id="LC1418" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L1419" class="blob-num js-line-number" data-line-number="1419"></td>
        <td id="LC1419" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span>The last entry is always the last!</span></td>
      </tr>
      <tr>
        <td id="L1420" class="blob-num js-line-number" data-line-number="1420"></td>
        <td id="LC1420" class="blob-code blob-code-inner js-file-line">                    last <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>tmparray[size<span class="pl-k">-</span><span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L1421" class="blob-num js-line-number" data-line-number="1421"></td>
        <td id="LC1421" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1422" class="blob-num js-line-number" data-line-number="1422"></td>
        <td id="LC1422" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> { <span class="pl-c"><span class="pl-c">//</span>Version 2 and 3</span></td>
      </tr>
      <tr>
        <td id="L1423" class="blob-num js-line-number" data-line-number="1423"></td>
        <td id="LC1423" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> tmparray     <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L1424" class="blob-num js-line-number" data-line-number="1424"></td>
        <td id="LC1424" class="blob-code blob-code-inner js-file-line">                tmparray     <span class="pl-k">=</span> <span class="pl-en">explode</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>,<span class="pl-pds">&#39;</span></span>, author);</td>
      </tr>
      <tr>
        <td id="L1425" class="blob-num js-line-number" data-line-number="1425"></td>
        <td id="LC1425" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span>The first entry must contain von and last</span></td>
      </tr>
      <tr>
        <td id="L1426" class="blob-num js-line-number" data-line-number="1426"></td>
        <td id="LC1426" class="blob-code blob-code-inner js-file-line">                vonlastarray <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L1427" class="blob-num js-line-number" data-line-number="1427"></td>
        <td id="LC1427" class="blob-code blob-code-inner js-file-line">                vonlastarray <span class="pl-k">=</span> <span class="pl-en">explode</span>(<span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span>, tmparray[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L1428" class="blob-num js-line-number" data-line-number="1428"></td>
        <td id="LC1428" class="blob-code blob-code-inner js-file-line">                size         <span class="pl-k">=</span> <span class="pl-en">sizeof</span>(vonlastarray);</td>
      </tr>
      <tr>
        <td id="L1429" class="blob-num js-line-number" data-line-number="1429"></td>
        <td id="LC1429" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-c1">1</span><span class="pl-k">==</span>size) { <span class="pl-c"><span class="pl-c">//</span>Only one entry.got to be the last</span></td>
      </tr>
      <tr>
        <td id="L1430" class="blob-num js-line-number" data-line-number="1430"></td>
        <td id="LC1430" class="blob-code blob-code-inner js-file-line">                    last <span class="pl-k">=</span> vonlastarray[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L1431" class="blob-num js-line-number" data-line-number="1431"></td>
        <td id="LC1431" class="blob-code blob-code-inner js-file-line">                } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1432" class="blob-num js-line-number" data-line-number="1432"></td>
        <td id="LC1432" class="blob-code blob-code-inner js-file-line">                    inlast <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L1433" class="blob-num js-line-number" data-line-number="1433"></td>
        <td id="LC1433" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">for</span> (<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-c1">0</span>; j<span class="pl-k">&lt;</span>(size<span class="pl-k">-</span><span class="pl-c1">1</span>); j<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L1434" class="blob-num js-line-number" data-line-number="1434"></td>
        <td id="LC1434" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (inlast) {</td>
      </tr>
      <tr>
        <td id="L1435" class="blob-num js-line-number" data-line-number="1435"></td>
        <td id="LC1435" class="blob-code blob-code-inner js-file-line">                            last <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>vonlastarray[j];</td>
      </tr>
      <tr>
        <td id="L1436" class="blob-num js-line-number" data-line-number="1436"></td>
        <td id="LC1436" class="blob-code blob-code-inner js-file-line">                        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1437" class="blob-num js-line-number" data-line-number="1437"></td>
        <td id="LC1437" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">if</span> (<span class="pl-c1">0</span> <span class="pl-k">!=</span> (<span class="pl-c1">this</span>.<span class="pl-en">_determineCase</span>(vonlastarray[j]))) { <span class="pl-c"><span class="pl-c">//</span>Change from von to last</span></td>
      </tr>
      <tr>
        <td id="L1438" class="blob-num js-line-number" data-line-number="1438"></td>
        <td id="LC1438" class="blob-code blob-code-inner js-file-line">                                islast <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L1439" class="blob-num js-line-number" data-line-number="1439"></td>
        <td id="LC1439" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">for</span> (<span class="pl-k">var</span> k<span class="pl-k">=</span>(j<span class="pl-k">+</span><span class="pl-c1">1</span>); k<span class="pl-k">&lt;</span>(size<span class="pl-k">-</span><span class="pl-c1">1</span>); k<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L1440" class="blob-num js-line-number" data-line-number="1440"></td>
        <td id="LC1440" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-c1">this</span>.<span class="pl-en">_determineCase</span>(vonlastarray[k]);</td>
      </tr>
      <tr>
        <td id="L1441" class="blob-num js-line-number" data-line-number="1441"></td>
        <td id="LC1441" class="blob-code blob-code-inner js-file-line">                                    casev <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">_determineCase</span>(vonlastarray[k]);</td>
      </tr>
      <tr>
        <td id="L1442" class="blob-num js-line-number" data-line-number="1442"></td>
        <td id="LC1442" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">if</span> (<span class="pl-c1">this</span>.<span class="pl-en">isError</span>(casev)) {</td>
      </tr>
      <tr>
        <td id="L1443" class="blob-num js-line-number" data-line-number="1443"></td>
        <td id="LC1443" class="blob-code blob-code-inner js-file-line">                                        <span class="pl-c"><span class="pl-c">//</span> IGNORE?</span></td>
      </tr>
      <tr>
        <td id="L1444" class="blob-num js-line-number" data-line-number="1444"></td>
        <td id="LC1444" class="blob-code blob-code-inner js-file-line">                                    } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-c1">0</span> <span class="pl-k">==</span> casev) {</td>
      </tr>
      <tr>
        <td id="L1445" class="blob-num js-line-number" data-line-number="1445"></td>
        <td id="LC1445" class="blob-code blob-code-inner js-file-line">                                        islast <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L1446" class="blob-num js-line-number" data-line-number="1446"></td>
        <td id="LC1446" class="blob-code blob-code-inner js-file-line">                                    }</td>
      </tr>
      <tr>
        <td id="L1447" class="blob-num js-line-number" data-line-number="1447"></td>
        <td id="LC1447" class="blob-code blob-code-inner js-file-line">                                }</td>
      </tr>
      <tr>
        <td id="L1448" class="blob-num js-line-number" data-line-number="1448"></td>
        <td id="LC1448" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">if</span> (islast) {</td>
      </tr>
      <tr>
        <td id="L1449" class="blob-num js-line-number" data-line-number="1449"></td>
        <td id="LC1449" class="blob-code blob-code-inner js-file-line">                                    inlast <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L1450" class="blob-num js-line-number" data-line-number="1450"></td>
        <td id="LC1450" class="blob-code blob-code-inner js-file-line">                                    last   <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>vonlastarray[j];</td>
      </tr>
      <tr>
        <td id="L1451" class="blob-num js-line-number" data-line-number="1451"></td>
        <td id="LC1451" class="blob-code blob-code-inner js-file-line">                                } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1452" class="blob-num js-line-number" data-line-number="1452"></td>
        <td id="LC1452" class="blob-code blob-code-inner js-file-line">                                    von    <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>vonlastarray[j];</td>
      </tr>
      <tr>
        <td id="L1453" class="blob-num js-line-number" data-line-number="1453"></td>
        <td id="LC1453" class="blob-code blob-code-inner js-file-line">                                }</td>
      </tr>
      <tr>
        <td id="L1454" class="blob-num js-line-number" data-line-number="1454"></td>
        <td id="LC1454" class="blob-code blob-code-inner js-file-line">                            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1455" class="blob-num js-line-number" data-line-number="1455"></td>
        <td id="LC1455" class="blob-code blob-code-inner js-file-line">                                von    <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>vonlastarray[j];</td>
      </tr>
      <tr>
        <td id="L1456" class="blob-num js-line-number" data-line-number="1456"></td>
        <td id="LC1456" class="blob-code blob-code-inner js-file-line">                            }</td>
      </tr>
      <tr>
        <td id="L1457" class="blob-num js-line-number" data-line-number="1457"></td>
        <td id="LC1457" class="blob-code blob-code-inner js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L1458" class="blob-num js-line-number" data-line-number="1458"></td>
        <td id="LC1458" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L1459" class="blob-num js-line-number" data-line-number="1459"></td>
        <td id="LC1459" class="blob-code blob-code-inner js-file-line">                    last <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>vonlastarray[size<span class="pl-k">-</span><span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L1460" class="blob-num js-line-number" data-line-number="1460"></td>
        <td id="LC1460" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1461" class="blob-num js-line-number" data-line-number="1461"></td>
        <td id="LC1461" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span>Now we check if it is version three (three entries in the array (two commas)</span></td>
      </tr>
      <tr>
        <td id="L1462" class="blob-num js-line-number" data-line-number="1462"></td>
        <td id="LC1462" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-c1">3</span><span class="pl-k">==</span><span class="pl-smi">tmparray</span>.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L1463" class="blob-num js-line-number" data-line-number="1463"></td>
        <td id="LC1463" class="blob-code blob-code-inner js-file-line">                    jr <span class="pl-k">=</span> tmparray[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L1464" class="blob-num js-line-number" data-line-number="1464"></td>
        <td id="LC1464" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1465" class="blob-num js-line-number" data-line-number="1465"></td>
        <td id="LC1465" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span>Everything in the last entry is first</span></td>
      </tr>
      <tr>
        <td id="L1466" class="blob-num js-line-number" data-line-number="1466"></td>
        <td id="LC1466" class="blob-code blob-code-inner js-file-line">                first <span class="pl-k">=</span> tmparray[<span class="pl-smi">tmparray</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L1467" class="blob-num js-line-number" data-line-number="1467"></td>
        <td id="LC1467" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1468" class="blob-num js-line-number" data-line-number="1468"></td>
        <td id="LC1468" class="blob-code blob-code-inner js-file-line">            authorarray[i] <span class="pl-k">=</span> {<span class="pl-s"><span class="pl-pds">&#39;</span>first<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span><span class="pl-en">trim</span>(first), <span class="pl-s"><span class="pl-pds">&#39;</span>von<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span><span class="pl-en">trim</span>(von), <span class="pl-s"><span class="pl-pds">&#39;</span>last<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span><span class="pl-en">trim</span>(last), <span class="pl-s"><span class="pl-pds">&#39;</span>jr<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span><span class="pl-en">trim</span>(jr)};</td>
      </tr>
      <tr>
        <td id="L1469" class="blob-num js-line-number" data-line-number="1469"></td>
        <td id="LC1469" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1470" class="blob-num js-line-number" data-line-number="1470"></td>
        <td id="LC1470" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> authorarray;</td>
      </tr>
      <tr>
        <td id="L1471" class="blob-num js-line-number" data-line-number="1471"></td>
        <td id="LC1471" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L1472" class="blob-num js-line-number" data-line-number="1472"></td>
        <td id="LC1472" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1473" class="blob-num js-line-number" data-line-number="1473"></td>
        <td id="LC1473" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1474" class="blob-num js-line-number" data-line-number="1474"></td>
        <td id="LC1474" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Case Determination according to the needs of BibTex</span></td>
      </tr>
      <tr>
        <td id="L1475" class="blob-num js-line-number" data-line-number="1475"></td>
        <td id="LC1475" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1476" class="blob-num js-line-number" data-line-number="1476"></td>
        <td id="LC1476" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * To parse the Author(s) correctly a determination is needed</span></td>
      </tr>
      <tr>
        <td id="L1477" class="blob-num js-line-number" data-line-number="1477"></td>
        <td id="LC1477" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * to get the Case of a word+ There are three possible values:</span></td>
      </tr>
      <tr>
        <td id="L1478" class="blob-num js-line-number" data-line-number="1478"></td>
        <td id="LC1478" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * - Upper Case (return value 1)</span></td>
      </tr>
      <tr>
        <td id="L1479" class="blob-num js-line-number" data-line-number="1479"></td>
        <td id="LC1479" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * - Lower Case (return value 0)</span></td>
      </tr>
      <tr>
        <td id="L1480" class="blob-num js-line-number" data-line-number="1480"></td>
        <td id="LC1480" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * - Caseless   (return value -1)</span></td>
      </tr>
      <tr>
        <td id="L1481" class="blob-num js-line-number" data-line-number="1481"></td>
        <td id="LC1481" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1482" class="blob-num js-line-number" data-line-number="1482"></td>
        <td id="LC1482" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@access</span> <span class="pl-c1">private</span></span></td>
      </tr>
      <tr>
        <td id="L1483" class="blob-num js-line-number" data-line-number="1483"></td>
        <td id="LC1483" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">string</span> word</span></td>
      </tr>
      <tr>
        <td id="L1484" class="blob-num js-line-number" data-line-number="1484"></td>
        <td id="LC1484" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@return</span> int The Case or PEAR_Error if there was a problem</span></td>
      </tr>
      <tr>
        <td id="L1485" class="blob-num js-line-number" data-line-number="1485"></td>
        <td id="LC1485" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1486" class="blob-num js-line-number" data-line-number="1486"></td>
        <td id="LC1486" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">_determineCase</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">word</span>) {</td>
      </tr>
      <tr>
        <td id="L1487" class="blob-num js-line-number" data-line-number="1487"></td>
        <td id="LC1487" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> ret         <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L1488" class="blob-num js-line-number" data-line-number="1488"></td>
        <td id="LC1488" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> trimmedword <span class="pl-k">=</span> <span class="pl-en">trim</span> (word);</td>
      </tr>
      <tr>
        <td id="L1489" class="blob-num js-line-number" data-line-number="1489"></td>
        <td id="LC1489" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">/*</span>We need this variable+ Without the next of would not work</span></td>
      </tr>
      <tr>
        <td id="L1490" class="blob-num js-line-number" data-line-number="1490"></td>
        <td id="LC1490" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         (trim changes the variable automatically to a string!)<span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1491" class="blob-num js-line-number" data-line-number="1491"></td>
        <td id="LC1491" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-en">is_string</span>(word) <span class="pl-k">&amp;&amp;</span> (<span class="pl-en">strlen</span>(trimmedword) <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>)) {</td>
      </tr>
      <tr>
        <td id="L1492" class="blob-num js-line-number" data-line-number="1492"></td>
        <td id="LC1492" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> i         <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L1493" class="blob-num js-line-number" data-line-number="1493"></td>
        <td id="LC1493" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> found     <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L1494" class="blob-num js-line-number" data-line-number="1494"></td>
        <td id="LC1494" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> openbrace <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L1495" class="blob-num js-line-number" data-line-number="1495"></td>
        <td id="LC1495" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">while</span> (<span class="pl-k">!</span>found <span class="pl-k">&amp;&amp;</span> (i <span class="pl-k">&lt;=</span> <span class="pl-en">strlen</span>(word))) {</td>
      </tr>
      <tr>
        <td id="L1496" class="blob-num js-line-number" data-line-number="1496"></td>
        <td id="LC1496" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> letter <span class="pl-k">=</span> <span class="pl-en">substr</span>(trimmedword, i, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1497" class="blob-num js-line-number" data-line-number="1497"></td>
        <td id="LC1497" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> ordv    <span class="pl-k">=</span> <span class="pl-en">ord</span>(letter);</td>
      </tr>
      <tr>
        <td id="L1498" class="blob-num js-line-number" data-line-number="1498"></td>
        <td id="LC1498" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (ordv <span class="pl-k">==</span> <span class="pl-c1">123</span>) { <span class="pl-c"><span class="pl-c">//</span>Open brace</span></td>
      </tr>
      <tr>
        <td id="L1499" class="blob-num js-line-number" data-line-number="1499"></td>
        <td id="LC1499" class="blob-code blob-code-inner js-file-line">                    openbrace<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L1500" class="blob-num js-line-number" data-line-number="1500"></td>
        <td id="LC1500" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1501" class="blob-num js-line-number" data-line-number="1501"></td>
        <td id="LC1501" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (ordv <span class="pl-k">==</span> <span class="pl-c1">125</span>) { <span class="pl-c"><span class="pl-c">//</span>Closing brace</span></td>
      </tr>
      <tr>
        <td id="L1502" class="blob-num js-line-number" data-line-number="1502"></td>
        <td id="LC1502" class="blob-code blob-code-inner js-file-line">                    openbrace<span class="pl-k">--</span>;</td>
      </tr>
      <tr>
        <td id="L1503" class="blob-num js-line-number" data-line-number="1503"></td>
        <td id="LC1503" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1504" class="blob-num js-line-number" data-line-number="1504"></td>
        <td id="LC1504" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> ((ordv<span class="pl-k">&gt;=</span><span class="pl-c1">65</span>) <span class="pl-k">&amp;&amp;</span> (ordv<span class="pl-k">&lt;=</span><span class="pl-c1">90</span>) <span class="pl-k">&amp;&amp;</span> (<span class="pl-c1">0</span><span class="pl-k">==</span>openbrace)) { <span class="pl-c"><span class="pl-c">//</span>The first character is uppercase</span></td>
      </tr>
      <tr>
        <td id="L1505" class="blob-num js-line-number" data-line-number="1505"></td>
        <td id="LC1505" class="blob-code blob-code-inner js-file-line">                    ret   <span class="pl-k">=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L1506" class="blob-num js-line-number" data-line-number="1506"></td>
        <td id="LC1506" class="blob-code blob-code-inner js-file-line">                    found <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L1507" class="blob-num js-line-number" data-line-number="1507"></td>
        <td id="LC1507" class="blob-code blob-code-inner js-file-line">                } <span class="pl-k">else</span> <span class="pl-k">if</span> ( (ordv<span class="pl-k">&gt;=</span><span class="pl-c1">97</span>) <span class="pl-k">&amp;&amp;</span> (ordv<span class="pl-k">&lt;=</span><span class="pl-c1">122</span>) <span class="pl-k">&amp;&amp;</span> (<span class="pl-c1">0</span><span class="pl-k">==</span>openbrace) ) { <span class="pl-c"><span class="pl-c">//</span>The first character is lowercase</span></td>
      </tr>
      <tr>
        <td id="L1508" class="blob-num js-line-number" data-line-number="1508"></td>
        <td id="LC1508" class="blob-code blob-code-inner js-file-line">                    ret   <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L1509" class="blob-num js-line-number" data-line-number="1509"></td>
        <td id="LC1509" class="blob-code blob-code-inner js-file-line">                    found <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L1510" class="blob-num js-line-number" data-line-number="1510"></td>
        <td id="LC1510" class="blob-code blob-code-inner js-file-line">                } <span class="pl-k">else</span> { <span class="pl-c"><span class="pl-c">//</span>Not yet found</span></td>
      </tr>
      <tr>
        <td id="L1511" class="blob-num js-line-number" data-line-number="1511"></td>
        <td id="LC1511" class="blob-code blob-code-inner js-file-line">                    i<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L1512" class="blob-num js-line-number" data-line-number="1512"></td>
        <td id="LC1512" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1513" class="blob-num js-line-number" data-line-number="1513"></td>
        <td id="LC1513" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1514" class="blob-num js-line-number" data-line-number="1514"></td>
        <td id="LC1514" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1515" class="blob-num js-line-number" data-line-number="1515"></td>
        <td id="LC1515" class="blob-code blob-code-inner js-file-line">            ret <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">raiseError</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>Could not determine case on word: <span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>word);</td>
      </tr>
      <tr>
        <td id="L1516" class="blob-num js-line-number" data-line-number="1516"></td>
        <td id="LC1516" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1517" class="blob-num js-line-number" data-line-number="1517"></td>
        <td id="LC1517" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> ret;</td>
      </tr>
      <tr>
        <td id="L1518" class="blob-num js-line-number" data-line-number="1518"></td>
        <td id="LC1518" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L1519" class="blob-num js-line-number" data-line-number="1519"></td>
        <td id="LC1519" class="blob-code blob-code-inner js-file-line">    </td>
      </tr>
      <tr>
        <td id="L1520" class="blob-num js-line-number" data-line-number="1520"></td>
        <td id="LC1520" class="blob-code blob-code-inner js-file-line">    </td>
      </tr>
      <tr>
        <td id="L1521" class="blob-num js-line-number" data-line-number="1521"></td>
        <td id="LC1521" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">isError</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">obj</span>){</td>
      </tr>
      <tr>
        <td id="L1522" class="blob-num js-line-number" data-line-number="1522"></td>
        <td id="LC1522" class="blob-code blob-code-inner js-file-line">    	<span class="pl-k">return</span> ( <span class="pl-k">typeof</span>(obj) <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Object<span class="pl-pds">&#39;</span></span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">obj</span>.<span class="pl-smi">isError</span> <span class="pl-k">==</span> <span class="pl-c1">1</span> );</td>
      </tr>
      <tr>
        <td id="L1523" class="blob-num js-line-number" data-line-number="1523"></td>
        <td id="LC1523" class="blob-code blob-code-inner js-file-line">    </td>
      </tr>
      <tr>
        <td id="L1524" class="blob-num js-line-number" data-line-number="1524"></td>
        <td id="LC1524" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L1525" class="blob-num js-line-number" data-line-number="1525"></td>
        <td id="LC1525" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1526" class="blob-num js-line-number" data-line-number="1526"></td>
        <td id="LC1526" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1527" class="blob-num js-line-number" data-line-number="1527"></td>
        <td id="LC1527" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Validation of a value</span></td>
      </tr>
      <tr>
        <td id="L1528" class="blob-num js-line-number" data-line-number="1528"></td>
        <td id="LC1528" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1529" class="blob-num js-line-number" data-line-number="1529"></td>
        <td id="LC1529" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * There may be several problems with the value of a field+</span></td>
      </tr>
      <tr>
        <td id="L1530" class="blob-num js-line-number" data-line-number="1530"></td>
        <td id="LC1530" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * These problems exist but do not break the parsing+</span></td>
      </tr>
      <tr>
        <td id="L1531" class="blob-num js-line-number" data-line-number="1531"></td>
        <td id="LC1531" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * If a problem is detected a warning is appended to the array warnings+</span></td>
      </tr>
      <tr>
        <td id="L1532" class="blob-num js-line-number" data-line-number="1532"></td>
        <td id="LC1532" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1533" class="blob-num js-line-number" data-line-number="1533"></td>
        <td id="LC1533" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@access</span> <span class="pl-c1">private</span></span></td>
      </tr>
      <tr>
        <td id="L1534" class="blob-num js-line-number" data-line-number="1534"></td>
        <td id="LC1534" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">string</span> entry The entry aka one line which which should be validated</span></td>
      </tr>
      <tr>
        <td id="L1535" class="blob-num js-line-number" data-line-number="1535"></td>
        <td id="LC1535" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">string</span> wholeentry The whole BibTex Entry which the one line is part of</span></td>
      </tr>
      <tr>
        <td id="L1536" class="blob-num js-line-number" data-line-number="1536"></td>
        <td id="LC1536" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@return</span> void</span></td>
      </tr>
      <tr>
        <td id="L1537" class="blob-num js-line-number" data-line-number="1537"></td>
        <td id="LC1537" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1538" class="blob-num js-line-number" data-line-number="1538"></td>
        <td id="LC1538" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">_validateValue</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">entry</span>, <span class="pl-smi">wholeentry</span>)</td>
      </tr>
      <tr>
        <td id="L1539" class="blob-num js-line-number" data-line-number="1539"></td>
        <td id="LC1539" class="blob-code blob-code-inner js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L1540" class="blob-num js-line-number" data-line-number="1540"></td>
        <td id="LC1540" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span>There is no @ allowed if the entry is enclosed by braces</span></td>
      </tr>
      <tr>
        <td id="L1541" class="blob-num js-line-number" data-line-number="1541"></td>
        <td id="LC1541" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( <span class="pl-smi">entry</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>{<span class="pl-c1">.</span><span class="pl-k">*</span>@<span class="pl-c1">.</span><span class="pl-k">*</span>}<span class="pl-pds">/</span></span>)) {</td>
      </tr>
      <tr>
        <td id="L1542" class="blob-num js-line-number" data-line-number="1542"></td>
        <td id="LC1542" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-en">_generateWarning</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>WARNING_AT_IN_BRACES<span class="pl-pds">&#39;</span></span>, entry, wholeentry);</td>
      </tr>
      <tr>
        <td id="L1543" class="blob-num js-line-number" data-line-number="1543"></td>
        <td id="LC1543" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1544" class="blob-num js-line-number" data-line-number="1544"></td>
        <td id="LC1544" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span>No escaped &quot; allowed if the entry is enclosed by double quotes</span></td>
      </tr>
      <tr>
        <td id="L1545" class="blob-num js-line-number" data-line-number="1545"></td>
        <td id="LC1545" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-smi">entry</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-cce">\&quot;</span><span class="pl-c1">.</span><span class="pl-k">*</span><span class="pl-cce">\\</span>&quot;<span class="pl-c1">.</span><span class="pl-k">*</span><span class="pl-cce">\&quot;</span><span class="pl-pds">/</span></span>)) {</td>
      </tr>
      <tr>
        <td id="L1546" class="blob-num js-line-number" data-line-number="1546"></td>
        <td id="LC1546" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-en">_generateWarning</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>WARNING_ESCAPED_DOUBLE_QUOTE_INSIDE_DOUBLE_QUOTES<span class="pl-pds">&#39;</span></span>, entry, wholeentry);</td>
      </tr>
      <tr>
        <td id="L1547" class="blob-num js-line-number" data-line-number="1547"></td>
        <td id="LC1547" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1548" class="blob-num js-line-number" data-line-number="1548"></td>
        <td id="LC1548" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span>Amount of Braces is not correct</span></td>
      </tr>
      <tr>
        <td id="L1549" class="blob-num js-line-number" data-line-number="1549"></td>
        <td id="LC1549" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> open     <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L1550" class="blob-num js-line-number" data-line-number="1550"></td>
        <td id="LC1550" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> lastchar <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1551" class="blob-num js-line-number" data-line-number="1551"></td>
        <td id="LC1551" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> charv     <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1552" class="blob-num js-line-number" data-line-number="1552"></td>
        <td id="LC1552" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> <span class="pl-en">strlen</span>(entry); i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L1553" class="blob-num js-line-number" data-line-number="1553"></td>
        <td id="LC1553" class="blob-code blob-code-inner js-file-line">            charv <span class="pl-k">=</span> <span class="pl-en">substr</span>(entry, i, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1554" class="blob-num js-line-number" data-line-number="1554"></td>
        <td id="LC1554" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ((<span class="pl-s"><span class="pl-pds">&#39;</span>{<span class="pl-pds">&#39;</span></span> <span class="pl-k">==</span> charv) <span class="pl-k">&amp;&amp;</span> (<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\\</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">!=</span> lastchar)) {</td>
      </tr>
      <tr>
        <td id="L1555" class="blob-num js-line-number" data-line-number="1555"></td>
        <td id="LC1555" class="blob-code blob-code-inner js-file-line">                open<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L1556" class="blob-num js-line-number" data-line-number="1556"></td>
        <td id="LC1556" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1557" class="blob-num js-line-number" data-line-number="1557"></td>
        <td id="LC1557" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ((<span class="pl-s"><span class="pl-pds">&#39;</span>}<span class="pl-pds">&#39;</span></span> <span class="pl-k">==</span> charv) <span class="pl-k">&amp;&amp;</span> (<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\\</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">!=</span> lastchar)) {</td>
      </tr>
      <tr>
        <td id="L1558" class="blob-num js-line-number" data-line-number="1558"></td>
        <td id="LC1558" class="blob-code blob-code-inner js-file-line">                open<span class="pl-k">--</span>;</td>
      </tr>
      <tr>
        <td id="L1559" class="blob-num js-line-number" data-line-number="1559"></td>
        <td id="LC1559" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1560" class="blob-num js-line-number" data-line-number="1560"></td>
        <td id="LC1560" class="blob-code blob-code-inner js-file-line">            lastchar <span class="pl-k">=</span> charv;</td>
      </tr>
      <tr>
        <td id="L1561" class="blob-num js-line-number" data-line-number="1561"></td>
        <td id="LC1561" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1562" class="blob-num js-line-number" data-line-number="1562"></td>
        <td id="LC1562" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-c1">0</span> <span class="pl-k">!=</span> open) {</td>
      </tr>
      <tr>
        <td id="L1563" class="blob-num js-line-number" data-line-number="1563"></td>
        <td id="LC1563" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-en">_generateWarning</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>WARNING_UNBALANCED_AMOUNT_OF_BRACES<span class="pl-pds">&#39;</span></span>, entry, wholeentry);</td>
      </tr>
      <tr>
        <td id="L1564" class="blob-num js-line-number" data-line-number="1564"></td>
        <td id="LC1564" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1565" class="blob-num js-line-number" data-line-number="1565"></td>
        <td id="LC1565" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L1566" class="blob-num js-line-number" data-line-number="1566"></td>
        <td id="LC1566" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1567" class="blob-num js-line-number" data-line-number="1567"></td>
        <td id="LC1567" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1568" class="blob-num js-line-number" data-line-number="1568"></td>
        <td id="LC1568" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Remove curly braces from entry</span></td>
      </tr>
      <tr>
        <td id="L1569" class="blob-num js-line-number" data-line-number="1569"></td>
        <td id="LC1569" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1570" class="blob-num js-line-number" data-line-number="1570"></td>
        <td id="LC1570" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@access</span> <span class="pl-c1">private</span></span></td>
      </tr>
      <tr>
        <td id="L1571" class="blob-num js-line-number" data-line-number="1571"></td>
        <td id="LC1571" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">string</span> value The value in which curly braces to be removed</span></td>
      </tr>
      <tr>
        <td id="L1572" class="blob-num js-line-number" data-line-number="1572"></td>
        <td id="LC1572" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">string</span> Value with removed curly braces</span></td>
      </tr>
      <tr>
        <td id="L1573" class="blob-num js-line-number" data-line-number="1573"></td>
        <td id="LC1573" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1574" class="blob-num js-line-number" data-line-number="1574"></td>
        <td id="LC1574" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">_removeCurlyBraces</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>)</td>
      </tr>
      <tr>
        <td id="L1575" class="blob-num js-line-number" data-line-number="1575"></td>
        <td id="LC1575" class="blob-code blob-code-inner js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L1576" class="blob-num js-line-number" data-line-number="1576"></td>
        <td id="LC1576" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span>First we save the delimiters</span></td>
      </tr>
      <tr>
        <td id="L1577" class="blob-num js-line-number" data-line-number="1577"></td>
        <td id="LC1577" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> beginningdels <span class="pl-k">=</span> <span class="pl-en">array_keys</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_delimiters</span>);</td>
      </tr>
      <tr>
        <td id="L1578" class="blob-num js-line-number" data-line-number="1578"></td>
        <td id="LC1578" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> firstchar     <span class="pl-k">=</span> <span class="pl-en">substr</span>(value, <span class="pl-c1">0</span>, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1579" class="blob-num js-line-number" data-line-number="1579"></td>
        <td id="LC1579" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> lastchar      <span class="pl-k">=</span> <span class="pl-en">substr</span>(value, <span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1580" class="blob-num js-line-number" data-line-number="1580"></td>
        <td id="LC1580" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> begin         <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1581" class="blob-num js-line-number" data-line-number="1581"></td>
        <td id="LC1581" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> end           <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1582" class="blob-num js-line-number" data-line-number="1582"></td>
        <td id="LC1582" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">while</span> (<span class="pl-en">in_array</span>(firstchar, beginningdels)) { <span class="pl-c"><span class="pl-c">//</span>The first character is an opening delimiter</span></td>
      </tr>
      <tr>
        <td id="L1583" class="blob-num js-line-number" data-line-number="1583"></td>
        <td id="LC1583" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (lastchar <span class="pl-k">==</span> <span class="pl-c1">this</span>.<span class="pl-smi">_delimiters</span>[firstchar]) { <span class="pl-c"><span class="pl-c">//</span>Matches to closing Delimiter</span></td>
      </tr>
      <tr>
        <td id="L1584" class="blob-num js-line-number" data-line-number="1584"></td>
        <td id="LC1584" class="blob-code blob-code-inner js-file-line">                begin <span class="pl-k">+=</span> firstchar;</td>
      </tr>
      <tr>
        <td id="L1585" class="blob-num js-line-number" data-line-number="1585"></td>
        <td id="LC1585" class="blob-code blob-code-inner js-file-line">                end   <span class="pl-k">+=</span> lastchar;</td>
      </tr>
      <tr>
        <td id="L1586" class="blob-num js-line-number" data-line-number="1586"></td>
        <td id="LC1586" class="blob-code blob-code-inner js-file-line">                value  <span class="pl-k">=</span> <span class="pl-en">substr</span>(value, <span class="pl-c1">1</span>, <span class="pl-k">-</span><span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1587" class="blob-num js-line-number" data-line-number="1587"></td>
        <td id="LC1587" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1588" class="blob-num js-line-number" data-line-number="1588"></td>
        <td id="LC1588" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L1589" class="blob-num js-line-number" data-line-number="1589"></td>
        <td id="LC1589" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1590" class="blob-num js-line-number" data-line-number="1590"></td>
        <td id="LC1590" class="blob-code blob-code-inner js-file-line">            firstchar <span class="pl-k">=</span> <span class="pl-en">substr</span>(value, <span class="pl-c1">0</span>, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1591" class="blob-num js-line-number" data-line-number="1591"></td>
        <td id="LC1591" class="blob-code blob-code-inner js-file-line">            lastchar  <span class="pl-k">=</span> <span class="pl-en">substr</span>(value, <span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1592" class="blob-num js-line-number" data-line-number="1592"></td>
        <td id="LC1592" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1593" class="blob-num js-line-number" data-line-number="1593"></td>
        <td id="LC1593" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span>Now we get rid of the curly braces</span></td>
      </tr>
      <tr>
        <td id="L1594" class="blob-num js-line-number" data-line-number="1594"></td>
        <td id="LC1594" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> pattern     <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>/([^<span class="pl-cce">\\\\</span>])<span class="pl-cce">\{</span>(+*?[^<span class="pl-cce">\\\\</span>])<span class="pl-cce">\}</span>/<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1595" class="blob-num js-line-number" data-line-number="1595"></td>
        <td id="LC1595" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> replacement <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>12<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1596" class="blob-num js-line-number" data-line-number="1596"></td>
        <td id="LC1596" class="blob-code blob-code-inner js-file-line">        value       <span class="pl-k">=</span> <span class="pl-smi">value</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>(<span class="pl-c1">[<span class="pl-k">^</span><span class="pl-cce">\\\\</span>]</span>)<span class="pl-cce">\{</span>(<span class="pl-c1">.</span><span class="pl-k">*?</span><span class="pl-c1">[<span class="pl-k">^</span><span class="pl-cce">\\\\</span>]</span>)<span class="pl-cce">\}</span><span class="pl-pds">/</span></span>, replacement);</td>
      </tr>
      <tr>
        <td id="L1597" class="blob-num js-line-number" data-line-number="1597"></td>
        <td id="LC1597" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span>Reattach delimiters</span></td>
      </tr>
      <tr>
        <td id="L1598" class="blob-num js-line-number" data-line-number="1598"></td>
        <td id="LC1598" class="blob-code blob-code-inner js-file-line">        value       <span class="pl-k">=</span> begin<span class="pl-k">+</span>value<span class="pl-k">+</span>end;</td>
      </tr>
      <tr>
        <td id="L1599" class="blob-num js-line-number" data-line-number="1599"></td>
        <td id="LC1599" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> value;</td>
      </tr>
      <tr>
        <td id="L1600" class="blob-num js-line-number" data-line-number="1600"></td>
        <td id="LC1600" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L1601" class="blob-num js-line-number" data-line-number="1601"></td>
        <td id="LC1601" class="blob-code blob-code-inner js-file-line">    </td>
      </tr>
      <tr>
        <td id="L1602" class="blob-num js-line-number" data-line-number="1602"></td>
        <td id="LC1602" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1603" class="blob-num js-line-number" data-line-number="1603"></td>
        <td id="LC1603" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Generates a warning</span></td>
      </tr>
      <tr>
        <td id="L1604" class="blob-num js-line-number" data-line-number="1604"></td>
        <td id="LC1604" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1605" class="blob-num js-line-number" data-line-number="1605"></td>
        <td id="LC1605" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@access</span> <span class="pl-c1">private</span></span></td>
      </tr>
      <tr>
        <td id="L1606" class="blob-num js-line-number" data-line-number="1606"></td>
        <td id="LC1606" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">string</span> type The type of the warning</span></td>
      </tr>
      <tr>
        <td id="L1607" class="blob-num js-line-number" data-line-number="1607"></td>
        <td id="LC1607" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">string</span> entry The line of the entry where the warning occurred</span></td>
      </tr>
      <tr>
        <td id="L1608" class="blob-num js-line-number" data-line-number="1608"></td>
        <td id="LC1608" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">string</span> wholeentry OPTIONAL The whole entry where the warning occurred</span></td>
      </tr>
      <tr>
        <td id="L1609" class="blob-num js-line-number" data-line-number="1609"></td>
        <td id="LC1609" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1610" class="blob-num js-line-number" data-line-number="1610"></td>
        <td id="LC1610" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">_generateWarning</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">type</span>, <span class="pl-smi">entry</span>, <span class="pl-smi">wholeentry</span>)</td>
      </tr>
      <tr>
        <td id="L1611" class="blob-num js-line-number" data-line-number="1611"></td>
        <td id="LC1611" class="blob-code blob-code-inner js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L1612" class="blob-num js-line-number" data-line-number="1612"></td>
        <td id="LC1612" class="blob-code blob-code-inner js-file-line">    	<span class="pl-k">if</span> ( <span class="pl-k">typeof</span> wholeentry <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span> ) wholeentry <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1613" class="blob-num js-line-number" data-line-number="1613"></td>
        <td id="LC1613" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> warning <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L1614" class="blob-num js-line-number" data-line-number="1614"></td>
        <td id="LC1614" class="blob-code blob-code-inner js-file-line">        warning[<span class="pl-s"><span class="pl-pds">&#39;</span>warning<span class="pl-pds">&#39;</span></span>]    <span class="pl-k">=</span> type;</td>
      </tr>
      <tr>
        <td id="L1615" class="blob-num js-line-number" data-line-number="1615"></td>
        <td id="LC1615" class="blob-code blob-code-inner js-file-line">        warning[<span class="pl-s"><span class="pl-pds">&#39;</span>entry<span class="pl-pds">&#39;</span></span>]      <span class="pl-k">=</span> entry;</td>
      </tr>
      <tr>
        <td id="L1616" class="blob-num js-line-number" data-line-number="1616"></td>
        <td id="LC1616" class="blob-code blob-code-inner js-file-line">        warning[<span class="pl-s"><span class="pl-pds">&#39;</span>wholeentry<span class="pl-pds">&#39;</span></span>] <span class="pl-k">=</span> wholeentry;</td>
      </tr>
      <tr>
        <td id="L1617" class="blob-num js-line-number" data-line-number="1617"></td>
        <td id="LC1617" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">this</span>.<span class="pl-smi">warnings</span>[<span class="pl-c1">this</span>.<span class="pl-smi">warnings</span>.<span class="pl-c1">length</span>]      <span class="pl-k">=</span> warning;</td>
      </tr>
      <tr>
        <td id="L1618" class="blob-num js-line-number" data-line-number="1618"></td>
        <td id="LC1618" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L1619" class="blob-num js-line-number" data-line-number="1619"></td>
        <td id="LC1619" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1620" class="blob-num js-line-number" data-line-number="1620"></td>
        <td id="LC1620" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1621" class="blob-num js-line-number" data-line-number="1621"></td>
        <td id="LC1621" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Cleares all warnings</span></td>
      </tr>
      <tr>
        <td id="L1622" class="blob-num js-line-number" data-line-number="1622"></td>
        <td id="LC1622" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1623" class="blob-num js-line-number" data-line-number="1623"></td>
        <td id="LC1623" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@access</span> <span class="pl-c1">public</span></span></td>
      </tr>
      <tr>
        <td id="L1624" class="blob-num js-line-number" data-line-number="1624"></td>
        <td id="LC1624" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1625" class="blob-num js-line-number" data-line-number="1625"></td>
        <td id="LC1625" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">clearWarnings</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-k">function</span>()</td>
      </tr>
      <tr>
        <td id="L1626" class="blob-num js-line-number" data-line-number="1626"></td>
        <td id="LC1626" class="blob-code blob-code-inner js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L1627" class="blob-num js-line-number" data-line-number="1627"></td>
        <td id="LC1627" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">this</span>.<span class="pl-smi">warnings</span> <span class="pl-k">=</span> <span class="pl-en">array</span>();</td>
      </tr>
      <tr>
        <td id="L1628" class="blob-num js-line-number" data-line-number="1628"></td>
        <td id="LC1628" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L1629" class="blob-num js-line-number" data-line-number="1629"></td>
        <td id="LC1629" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1630" class="blob-num js-line-number" data-line-number="1630"></td>
        <td id="LC1630" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1631" class="blob-num js-line-number" data-line-number="1631"></td>
        <td id="LC1631" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Is there a warning?</span></td>
      </tr>
      <tr>
        <td id="L1632" class="blob-num js-line-number" data-line-number="1632"></td>
        <td id="LC1632" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1633" class="blob-num js-line-number" data-line-number="1633"></td>
        <td id="LC1633" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@access</span> <span class="pl-c1">public</span></span></td>
      </tr>
      <tr>
        <td id="L1634" class="blob-num js-line-number" data-line-number="1634"></td>
        <td id="LC1634" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@return</span> true if there is, false otherwise</span></td>
      </tr>
      <tr>
        <td id="L1635" class="blob-num js-line-number" data-line-number="1635"></td>
        <td id="LC1635" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1636" class="blob-num js-line-number" data-line-number="1636"></td>
        <td id="LC1636" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">hasWarning</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-k">function</span>()</td>
      </tr>
      <tr>
        <td id="L1637" class="blob-num js-line-number" data-line-number="1637"></td>
        <td id="LC1637" class="blob-code blob-code-inner js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L1638" class="blob-num js-line-number" data-line-number="1638"></td>
        <td id="LC1638" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-en">sizeof</span>(<span class="pl-c1">this</span>.<span class="pl-smi">warnings</span>)<span class="pl-k">&gt;</span><span class="pl-c1">0</span>) <span class="pl-k">return</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L1639" class="blob-num js-line-number" data-line-number="1639"></td>
        <td id="LC1639" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> <span class="pl-k">return</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L1640" class="blob-num js-line-number" data-line-number="1640"></td>
        <td id="LC1640" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L1641" class="blob-num js-line-number" data-line-number="1641"></td>
        <td id="LC1641" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1642" class="blob-num js-line-number" data-line-number="1642"></td>
        <td id="LC1642" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1643" class="blob-num js-line-number" data-line-number="1643"></td>
        <td id="LC1643" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Returns the amount of available BibTex entries</span></td>
      </tr>
      <tr>
        <td id="L1644" class="blob-num js-line-number" data-line-number="1644"></td>
        <td id="LC1644" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1645" class="blob-num js-line-number" data-line-number="1645"></td>
        <td id="LC1645" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@access</span> <span class="pl-c1">public</span></span></td>
      </tr>
      <tr>
        <td id="L1646" class="blob-num js-line-number" data-line-number="1646"></td>
        <td id="LC1646" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@return</span> int The amount of available BibTex entries</span></td>
      </tr>
      <tr>
        <td id="L1647" class="blob-num js-line-number" data-line-number="1647"></td>
        <td id="LC1647" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1648" class="blob-num js-line-number" data-line-number="1648"></td>
        <td id="LC1648" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">amount</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-k">function</span>()</td>
      </tr>
      <tr>
        <td id="L1649" class="blob-num js-line-number" data-line-number="1649"></td>
        <td id="LC1649" class="blob-code blob-code-inner js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L1650" class="blob-num js-line-number" data-line-number="1650"></td>
        <td id="LC1650" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">sizeof</span>(<span class="pl-c1">this</span>.<span class="pl-c1">data</span>);</td>
      </tr>
      <tr>
        <td id="L1651" class="blob-num js-line-number" data-line-number="1651"></td>
        <td id="LC1651" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L1652" class="blob-num js-line-number" data-line-number="1652"></td>
        <td id="LC1652" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1653" class="blob-num js-line-number" data-line-number="1653"></td>
        <td id="LC1653" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Returns the author formatted</span></td>
      </tr>
      <tr>
        <td id="L1654" class="blob-num js-line-number" data-line-number="1654"></td>
        <td id="LC1654" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1655" class="blob-num js-line-number" data-line-number="1655"></td>
        <td id="LC1655" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * The Author is formatted as setted in the authorstring</span></td>
      </tr>
      <tr>
        <td id="L1656" class="blob-num js-line-number" data-line-number="1656"></td>
        <td id="LC1656" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1657" class="blob-num js-line-number" data-line-number="1657"></td>
        <td id="LC1657" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@access</span> <span class="pl-c1">private</span></span></td>
      </tr>
      <tr>
        <td id="L1658" class="blob-num js-line-number" data-line-number="1658"></td>
        <td id="LC1658" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">array</span> array Author array</span></td>
      </tr>
      <tr>
        <td id="L1659" class="blob-num js-line-number" data-line-number="1659"></td>
        <td id="LC1659" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@return</span> string the formatted author string</span></td>
      </tr>
      <tr>
        <td id="L1660" class="blob-num js-line-number" data-line-number="1660"></td>
        <td id="LC1660" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1661" class="blob-num js-line-number" data-line-number="1661"></td>
        <td id="LC1661" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">_formatAuthor</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">array</span>)</td>
      </tr>
      <tr>
        <td id="L1662" class="blob-num js-line-number" data-line-number="1662"></td>
        <td id="LC1662" class="blob-code blob-code-inner js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L1663" class="blob-num js-line-number" data-line-number="1663"></td>
        <td id="LC1663" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-en">array_key_exists</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>von<span class="pl-pds">&#39;</span></span>, array)) {</td>
      </tr>
      <tr>
        <td id="L1664" class="blob-num js-line-number" data-line-number="1664"></td>
        <td id="LC1664" class="blob-code blob-code-inner js-file-line">            array[<span class="pl-s"><span class="pl-pds">&#39;</span>von<span class="pl-pds">&#39;</span></span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1665" class="blob-num js-line-number" data-line-number="1665"></td>
        <td id="LC1665" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1666" class="blob-num js-line-number" data-line-number="1666"></td>
        <td id="LC1666" class="blob-code blob-code-inner js-file-line">            array[<span class="pl-s"><span class="pl-pds">&#39;</span>von<span class="pl-pds">&#39;</span></span>] <span class="pl-k">=</span> <span class="pl-en">trim</span>(array[<span class="pl-s"><span class="pl-pds">&#39;</span>von<span class="pl-pds">&#39;</span></span>]);</td>
      </tr>
      <tr>
        <td id="L1667" class="blob-num js-line-number" data-line-number="1667"></td>
        <td id="LC1667" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1668" class="blob-num js-line-number" data-line-number="1668"></td>
        <td id="LC1668" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-en">array_key_exists</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>last<span class="pl-pds">&#39;</span></span>, array)) {</td>
      </tr>
      <tr>
        <td id="L1669" class="blob-num js-line-number" data-line-number="1669"></td>
        <td id="LC1669" class="blob-code blob-code-inner js-file-line">            array[<span class="pl-s"><span class="pl-pds">&#39;</span>last<span class="pl-pds">&#39;</span></span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1670" class="blob-num js-line-number" data-line-number="1670"></td>
        <td id="LC1670" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1671" class="blob-num js-line-number" data-line-number="1671"></td>
        <td id="LC1671" class="blob-code blob-code-inner js-file-line">            array[<span class="pl-s"><span class="pl-pds">&#39;</span>last<span class="pl-pds">&#39;</span></span>] <span class="pl-k">=</span> <span class="pl-en">trim</span>(array[<span class="pl-s"><span class="pl-pds">&#39;</span>last<span class="pl-pds">&#39;</span></span>]);</td>
      </tr>
      <tr>
        <td id="L1672" class="blob-num js-line-number" data-line-number="1672"></td>
        <td id="LC1672" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1673" class="blob-num js-line-number" data-line-number="1673"></td>
        <td id="LC1673" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-en">array_key_exists</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>jr<span class="pl-pds">&#39;</span></span>, array)) {</td>
      </tr>
      <tr>
        <td id="L1674" class="blob-num js-line-number" data-line-number="1674"></td>
        <td id="LC1674" class="blob-code blob-code-inner js-file-line">            array[<span class="pl-s"><span class="pl-pds">&#39;</span>jr<span class="pl-pds">&#39;</span></span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1675" class="blob-num js-line-number" data-line-number="1675"></td>
        <td id="LC1675" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1676" class="blob-num js-line-number" data-line-number="1676"></td>
        <td id="LC1676" class="blob-code blob-code-inner js-file-line">            array[<span class="pl-s"><span class="pl-pds">&#39;</span>jr<span class="pl-pds">&#39;</span></span>] <span class="pl-k">=</span> <span class="pl-en">trim</span>(array[<span class="pl-s"><span class="pl-pds">&#39;</span>jr<span class="pl-pds">&#39;</span></span>]);</td>
      </tr>
      <tr>
        <td id="L1677" class="blob-num js-line-number" data-line-number="1677"></td>
        <td id="LC1677" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1678" class="blob-num js-line-number" data-line-number="1678"></td>
        <td id="LC1678" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-en">array_key_exists</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>first<span class="pl-pds">&#39;</span></span>, array)) {</td>
      </tr>
      <tr>
        <td id="L1679" class="blob-num js-line-number" data-line-number="1679"></td>
        <td id="LC1679" class="blob-code blob-code-inner js-file-line">            array[<span class="pl-s"><span class="pl-pds">&#39;</span>first<span class="pl-pds">&#39;</span></span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1680" class="blob-num js-line-number" data-line-number="1680"></td>
        <td id="LC1680" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1681" class="blob-num js-line-number" data-line-number="1681"></td>
        <td id="LC1681" class="blob-code blob-code-inner js-file-line">            array[<span class="pl-s"><span class="pl-pds">&#39;</span>first<span class="pl-pds">&#39;</span></span>] <span class="pl-k">=</span> <span class="pl-en">trim</span>(array[<span class="pl-s"><span class="pl-pds">&#39;</span>first<span class="pl-pds">&#39;</span></span>]);</td>
      </tr>
      <tr>
        <td id="L1682" class="blob-num js-line-number" data-line-number="1682"></td>
        <td id="LC1682" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1683" class="blob-num js-line-number" data-line-number="1683"></td>
        <td id="LC1683" class="blob-code blob-code-inner js-file-line">        ret <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-smi">authorstring</span>;</td>
      </tr>
      <tr>
        <td id="L1684" class="blob-num js-line-number" data-line-number="1684"></td>
        <td id="LC1684" class="blob-code blob-code-inner js-file-line">        ret <span class="pl-k">=</span> <span class="pl-en">str_replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>VON<span class="pl-pds">&quot;</span></span>, array[<span class="pl-s"><span class="pl-pds">&#39;</span>von<span class="pl-pds">&#39;</span></span>], ret);</td>
      </tr>
      <tr>
        <td id="L1685" class="blob-num js-line-number" data-line-number="1685"></td>
        <td id="LC1685" class="blob-code blob-code-inner js-file-line">        ret <span class="pl-k">=</span> <span class="pl-en">str_replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>LAST<span class="pl-pds">&quot;</span></span>, array[<span class="pl-s"><span class="pl-pds">&#39;</span>last<span class="pl-pds">&#39;</span></span>], ret);</td>
      </tr>
      <tr>
        <td id="L1686" class="blob-num js-line-number" data-line-number="1686"></td>
        <td id="LC1686" class="blob-code blob-code-inner js-file-line">        ret <span class="pl-k">=</span> <span class="pl-en">str_replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>JR<span class="pl-pds">&quot;</span></span>, array[<span class="pl-s"><span class="pl-pds">&#39;</span>jr<span class="pl-pds">&#39;</span></span>], ret);</td>
      </tr>
      <tr>
        <td id="L1687" class="blob-num js-line-number" data-line-number="1687"></td>
        <td id="LC1687" class="blob-code blob-code-inner js-file-line">        ret <span class="pl-k">=</span> <span class="pl-en">str_replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>FIRST<span class="pl-pds">&quot;</span></span>, array[<span class="pl-s"><span class="pl-pds">&#39;</span>first<span class="pl-pds">&#39;</span></span>], ret);</td>
      </tr>
      <tr>
        <td id="L1688" class="blob-num js-line-number" data-line-number="1688"></td>
        <td id="LC1688" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-en">trim</span>(ret);</td>
      </tr>
      <tr>
        <td id="L1689" class="blob-num js-line-number" data-line-number="1689"></td>
        <td id="LC1689" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L1690" class="blob-num js-line-number" data-line-number="1690"></td>
        <td id="LC1690" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1691" class="blob-num js-line-number" data-line-number="1691"></td>
        <td id="LC1691" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1692" class="blob-num js-line-number" data-line-number="1692"></td>
        <td id="LC1692" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Converts the stored BibTex entries to a BibTex String</span></td>
      </tr>
      <tr>
        <td id="L1693" class="blob-num js-line-number" data-line-number="1693"></td>
        <td id="LC1693" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1694" class="blob-num js-line-number" data-line-number="1694"></td>
        <td id="LC1694" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * In the field list, the author is the last field+</span></td>
      </tr>
      <tr>
        <td id="L1695" class="blob-num js-line-number" data-line-number="1695"></td>
        <td id="LC1695" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1696" class="blob-num js-line-number" data-line-number="1696"></td>
        <td id="LC1696" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@access</span> <span class="pl-c1">public</span></span></td>
      </tr>
      <tr>
        <td id="L1697" class="blob-num js-line-number" data-line-number="1697"></td>
        <td id="LC1697" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@return</span> string The BibTex string</span></td>
      </tr>
      <tr>
        <td id="L1698" class="blob-num js-line-number" data-line-number="1698"></td>
        <td id="LC1698" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1699" class="blob-num js-line-number" data-line-number="1699"></td>
        <td id="LC1699" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">bibTex</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-k">function</span>()</td>
      </tr>
      <tr>
        <td id="L1700" class="blob-num js-line-number" data-line-number="1700"></td>
        <td id="LC1700" class="blob-code blob-code-inner js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L1701" class="blob-num js-line-number" data-line-number="1701"></td>
        <td id="LC1701" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> bibtex <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1702" class="blob-num js-line-number" data-line-number="1702"></td>
        <td id="LC1702" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span> ; i<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L1703" class="blob-num js-line-number" data-line-number="1703"></td>
        <td id="LC1703" class="blob-code blob-code-inner js-file-line">        	<span class="pl-k">var</span> entry <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-c1">data</span>[i];</td>
      </tr>
      <tr>
        <td id="L1704" class="blob-num js-line-number" data-line-number="1704"></td>
        <td id="LC1704" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>Intro</span></td>
      </tr>
      <tr>
        <td id="L1705" class="blob-num js-line-number" data-line-number="1705"></td>
        <td id="LC1705" class="blob-code blob-code-inner js-file-line">            bibtex <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>@<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span><span class="pl-en">strtolower</span>(entry[<span class="pl-s"><span class="pl-pds">&#39;</span>entryType<span class="pl-pds">&#39;</span></span>])<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span> { <span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>entry[<span class="pl-s"><span class="pl-pds">&#39;</span>cite<span class="pl-pds">&#39;</span></span>]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1706" class="blob-num js-line-number" data-line-number="1706"></td>
        <td id="LC1706" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>Other fields except author</span></td>
      </tr>
      <tr>
        <td id="L1707" class="blob-num js-line-number" data-line-number="1707"></td>
        <td id="LC1707" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (key <span class="pl-k">in</span> entry) {</td>
      </tr>
      <tr>
        <td id="L1708" class="blob-num js-line-number" data-line-number="1708"></td>
        <td id="LC1708" class="blob-code blob-code-inner js-file-line">            	<span class="pl-k">var</span> val <span class="pl-k">=</span> entry[key];</td>
      </tr>
      <tr>
        <td id="L1709" class="blob-num js-line-number" data-line-number="1709"></td>
        <td id="LC1709" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>[<span class="pl-s"><span class="pl-pds">&#39;</span>wordWrapWidth<span class="pl-pds">&#39;</span></span>]<span class="pl-k">&gt;</span><span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L1710" class="blob-num js-line-number" data-line-number="1710"></td>
        <td id="LC1710" class="blob-code blob-code-inner js-file-line">                    val <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">_wordWrap</span>(val);</td>
      </tr>
      <tr>
        <td id="L1711" class="blob-num js-line-number" data-line-number="1711"></td>
        <td id="LC1711" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1712" class="blob-num js-line-number" data-line-number="1712"></td>
        <td id="LC1712" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-en">in_array</span>(key, <span class="pl-en">array</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>cite<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>entryType<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>author<span class="pl-pds">&#39;</span></span>))) {</td>
      </tr>
      <tr>
        <td id="L1713" class="blob-num js-line-number" data-line-number="1713"></td>
        <td id="LC1713" class="blob-code blob-code-inner js-file-line">                    bibtex <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>key<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span> = {<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>val<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>},<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1714" class="blob-num js-line-number" data-line-number="1714"></td>
        <td id="LC1714" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1715" class="blob-num js-line-number" data-line-number="1715"></td>
        <td id="LC1715" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1716" class="blob-num js-line-number" data-line-number="1716"></td>
        <td id="LC1716" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>Author</span></td>
      </tr>
      <tr>
        <td id="L1717" class="blob-num js-line-number" data-line-number="1717"></td>
        <td id="LC1717" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-en">array_key_exists</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>author<span class="pl-pds">&#39;</span></span>, entry)) {</td>
      </tr>
      <tr>
        <td id="L1718" class="blob-num js-line-number" data-line-number="1718"></td>
        <td id="LC1718" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>[<span class="pl-s"><span class="pl-pds">&#39;</span>extractAuthors<span class="pl-pds">&#39;</span></span>]) {</td>
      </tr>
      <tr>
        <td id="L1719" class="blob-num js-line-number" data-line-number="1719"></td>
        <td id="LC1719" class="blob-code blob-code-inner js-file-line">                    tmparray <span class="pl-k">=</span> []; <span class="pl-c"><span class="pl-c">//</span>In this array the authors are saved and the joind with an and</span></td>
      </tr>
      <tr>
        <td id="L1720" class="blob-num js-line-number" data-line-number="1720"></td>
        <td id="LC1720" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">for</span> (j <span class="pl-k">in</span> entry[<span class="pl-s"><span class="pl-pds">&#39;</span>author<span class="pl-pds">&#39;</span></span>]) {</td>
      </tr>
      <tr>
        <td id="L1721" class="blob-num js-line-number" data-line-number="1721"></td>
        <td id="LC1721" class="blob-code blob-code-inner js-file-line">                    	<span class="pl-k">var</span> authorentry <span class="pl-k">=</span> entry[<span class="pl-s"><span class="pl-pds">&#39;</span>author<span class="pl-pds">&#39;</span></span>][j];</td>
      </tr>
      <tr>
        <td id="L1722" class="blob-num js-line-number" data-line-number="1722"></td>
        <td id="LC1722" class="blob-code blob-code-inner js-file-line">                        tmparray[<span class="pl-smi">tmparray</span>.<span class="pl-c1">length</span>] <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">_formatAuthor</span>(authorentry);</td>
      </tr>
      <tr>
        <td id="L1723" class="blob-num js-line-number" data-line-number="1723"></td>
        <td id="LC1723" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L1724" class="blob-num js-line-number" data-line-number="1724"></td>
        <td id="LC1724" class="blob-code blob-code-inner js-file-line">                    author <span class="pl-k">=</span> <span class="pl-en">join</span>(<span class="pl-s"><span class="pl-pds">&#39;</span> and <span class="pl-pds">&#39;</span></span>, tmparray);</td>
      </tr>
      <tr>
        <td id="L1725" class="blob-num js-line-number" data-line-number="1725"></td>
        <td id="LC1725" class="blob-code blob-code-inner js-file-line">                } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1726" class="blob-num js-line-number" data-line-number="1726"></td>
        <td id="LC1726" class="blob-code blob-code-inner js-file-line">                    author <span class="pl-k">=</span> entry[<span class="pl-s"><span class="pl-pds">&#39;</span>author<span class="pl-pds">&#39;</span></span>];</td>
      </tr>
      <tr>
        <td id="L1727" class="blob-num js-line-number" data-line-number="1727"></td>
        <td id="LC1727" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1728" class="blob-num js-line-number" data-line-number="1728"></td>
        <td id="LC1728" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1729" class="blob-num js-line-number" data-line-number="1729"></td>
        <td id="LC1729" class="blob-code blob-code-inner js-file-line">                author <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1730" class="blob-num js-line-number" data-line-number="1730"></td>
        <td id="LC1730" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1731" class="blob-num js-line-number" data-line-number="1731"></td>
        <td id="LC1731" class="blob-code blob-code-inner js-file-line">            bibtex <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t</span>author = {<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>author<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1732" class="blob-num js-line-number" data-line-number="1732"></td>
        <td id="LC1732" class="blob-code blob-code-inner js-file-line">            bibtex<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-cce">\n\n</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1733" class="blob-num js-line-number" data-line-number="1733"></td>
        <td id="LC1733" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1734" class="blob-num js-line-number" data-line-number="1734"></td>
        <td id="LC1734" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> bibtex;</td>
      </tr>
      <tr>
        <td id="L1735" class="blob-num js-line-number" data-line-number="1735"></td>
        <td id="LC1735" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L1736" class="blob-num js-line-number" data-line-number="1736"></td>
        <td id="LC1736" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1737" class="blob-num js-line-number" data-line-number="1737"></td>
        <td id="LC1737" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1738" class="blob-num js-line-number" data-line-number="1738"></td>
        <td id="LC1738" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Adds a new BibTex entry to the data</span></td>
      </tr>
      <tr>
        <td id="L1739" class="blob-num js-line-number" data-line-number="1739"></td>
        <td id="LC1739" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1740" class="blob-num js-line-number" data-line-number="1740"></td>
        <td id="LC1740" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@access</span> <span class="pl-c1">public</span></span></td>
      </tr>
      <tr>
        <td id="L1741" class="blob-num js-line-number" data-line-number="1741"></td>
        <td id="LC1741" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> <span class="pl-smi">array</span> newentry The new data to add</span></td>
      </tr>
      <tr>
        <td id="L1742" class="blob-num js-line-number" data-line-number="1742"></td>
        <td id="LC1742" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@return</span> void</span></td>
      </tr>
      <tr>
        <td id="L1743" class="blob-num js-line-number" data-line-number="1743"></td>
        <td id="LC1743" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1744" class="blob-num js-line-number" data-line-number="1744"></td>
        <td id="LC1744" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">addEntry</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">newentry</span>)</td>
      </tr>
      <tr>
        <td id="L1745" class="blob-num js-line-number" data-line-number="1745"></td>
        <td id="LC1745" class="blob-code blob-code-inner js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L1746" class="blob-num js-line-number" data-line-number="1746"></td>
        <td id="LC1746" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">this</span>.<span class="pl-c1">data</span>[<span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-c1">length</span>] <span class="pl-k">=</span> newentry;</td>
      </tr>
      <tr>
        <td id="L1747" class="blob-num js-line-number" data-line-number="1747"></td>
        <td id="LC1747" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L1748" class="blob-num js-line-number" data-line-number="1748"></td>
        <td id="LC1748" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1749" class="blob-num js-line-number" data-line-number="1749"></td>
        <td id="LC1749" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1750" class="blob-num js-line-number" data-line-number="1750"></td>
        <td id="LC1750" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Returns statistic</span></td>
      </tr>
      <tr>
        <td id="L1751" class="blob-num js-line-number" data-line-number="1751"></td>
        <td id="LC1751" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1752" class="blob-num js-line-number" data-line-number="1752"></td>
        <td id="LC1752" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * This functions returns a hash table+ The keys are the different</span></td>
      </tr>
      <tr>
        <td id="L1753" class="blob-num js-line-number" data-line-number="1753"></td>
        <td id="LC1753" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * entry types and the values are the amount of these entries+</span></td>
      </tr>
      <tr>
        <td id="L1754" class="blob-num js-line-number" data-line-number="1754"></td>
        <td id="LC1754" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1755" class="blob-num js-line-number" data-line-number="1755"></td>
        <td id="LC1755" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@access</span> <span class="pl-c1">public</span></span></td>
      </tr>
      <tr>
        <td id="L1756" class="blob-num js-line-number" data-line-number="1756"></td>
        <td id="LC1756" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@return</span> array Hash Table with the data</span></td>
      </tr>
      <tr>
        <td id="L1757" class="blob-num js-line-number" data-line-number="1757"></td>
        <td id="LC1757" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1758" class="blob-num js-line-number" data-line-number="1758"></td>
        <td id="LC1758" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">getStatistic</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-k">function</span>()</td>
      </tr>
      <tr>
        <td id="L1759" class="blob-num js-line-number" data-line-number="1759"></td>
        <td id="LC1759" class="blob-code blob-code-inner js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L1760" class="blob-num js-line-number" data-line-number="1760"></td>
        <td id="LC1760" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> ret <span class="pl-k">=</span> <span class="pl-en">array</span>();</td>
      </tr>
      <tr>
        <td id="L1761" class="blob-num js-line-number" data-line-number="1761"></td>
        <td id="LC1761" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>; i<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L1762" class="blob-num js-line-number" data-line-number="1762"></td>
        <td id="LC1762" class="blob-code blob-code-inner js-file-line">        	<span class="pl-k">var</span> entry <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-c1">data</span>[i];</td>
      </tr>
      <tr>
        <td id="L1763" class="blob-num js-line-number" data-line-number="1763"></td>
        <td id="LC1763" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-en">array_key_exists</span>(entry[<span class="pl-s"><span class="pl-pds">&#39;</span>entryType<span class="pl-pds">&#39;</span></span>], ret)) {</td>
      </tr>
      <tr>
        <td id="L1764" class="blob-num js-line-number" data-line-number="1764"></td>
        <td id="LC1764" class="blob-code blob-code-inner js-file-line">                ret[entry[<span class="pl-s"><span class="pl-pds">&#39;</span>entryType<span class="pl-pds">&#39;</span></span>]]<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L1765" class="blob-num js-line-number" data-line-number="1765"></td>
        <td id="LC1765" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1766" class="blob-num js-line-number" data-line-number="1766"></td>
        <td id="LC1766" class="blob-code blob-code-inner js-file-line">                ret[entry[<span class="pl-s"><span class="pl-pds">&#39;</span>entryType<span class="pl-pds">&#39;</span></span>]] <span class="pl-k">=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L1767" class="blob-num js-line-number" data-line-number="1767"></td>
        <td id="LC1767" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1768" class="blob-num js-line-number" data-line-number="1768"></td>
        <td id="LC1768" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1769" class="blob-num js-line-number" data-line-number="1769"></td>
        <td id="LC1769" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> ret;</td>
      </tr>
      <tr>
        <td id="L1770" class="blob-num js-line-number" data-line-number="1770"></td>
        <td id="LC1770" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L1771" class="blob-num js-line-number" data-line-number="1771"></td>
        <td id="LC1771" class="blob-code blob-code-inner js-file-line">    </td>
      </tr>
      <tr>
        <td id="L1772" class="blob-num js-line-number" data-line-number="1772"></td>
        <td id="LC1772" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1773" class="blob-num js-line-number" data-line-number="1773"></td>
        <td id="LC1773" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Returns the stored data in RTF format</span></td>
      </tr>
      <tr>
        <td id="L1774" class="blob-num js-line-number" data-line-number="1774"></td>
        <td id="LC1774" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1775" class="blob-num js-line-number" data-line-number="1775"></td>
        <td id="LC1775" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * This method simply returns a RTF formatted string+ This is done very</span></td>
      </tr>
      <tr>
        <td id="L1776" class="blob-num js-line-number" data-line-number="1776"></td>
        <td id="LC1776" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * simple and is not intended for heavy using and fine formatting+ This</span></td>
      </tr>
      <tr>
        <td id="L1777" class="blob-num js-line-number" data-line-number="1777"></td>
        <td id="LC1777" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * should be done by BibTex! It is intended to give some kind of quick</span></td>
      </tr>
      <tr>
        <td id="L1778" class="blob-num js-line-number" data-line-number="1778"></td>
        <td id="LC1778" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * preview or to send someone a reference list as word/rtf format (even</span></td>
      </tr>
      <tr>
        <td id="L1779" class="blob-num js-line-number" data-line-number="1779"></td>
        <td id="LC1779" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * some people in the scientific field still use word)+ If you want to</span></td>
      </tr>
      <tr>
        <td id="L1780" class="blob-num js-line-number" data-line-number="1780"></td>
        <td id="LC1780" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * change the default format you have to override the class variable</span></td>
      </tr>
      <tr>
        <td id="L1781" class="blob-num js-line-number" data-line-number="1781"></td>
        <td id="LC1781" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * &quot;rtfstring&quot;+ This variable is used and the placeholders simply replaced+</span></td>
      </tr>
      <tr>
        <td id="L1782" class="blob-num js-line-number" data-line-number="1782"></td>
        <td id="LC1782" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Lines with no data cause an warning!</span></td>
      </tr>
      <tr>
        <td id="L1783" class="blob-num js-line-number" data-line-number="1783"></td>
        <td id="LC1783" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1784" class="blob-num js-line-number" data-line-number="1784"></td>
        <td id="LC1784" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@return</span> string the RTF Strings</span></td>
      </tr>
      <tr>
        <td id="L1785" class="blob-num js-line-number" data-line-number="1785"></td>
        <td id="LC1785" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1786" class="blob-num js-line-number" data-line-number="1786"></td>
        <td id="LC1786" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">rtf</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-k">function</span>()</td>
      </tr>
      <tr>
        <td id="L1787" class="blob-num js-line-number" data-line-number="1787"></td>
        <td id="LC1787" class="blob-code blob-code-inner js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L1788" class="blob-num js-line-number" data-line-number="1788"></td>
        <td id="LC1788" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> ret <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>{<span class="pl-cce">\\</span>rtf<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1789" class="blob-num js-line-number" data-line-number="1789"></td>
        <td id="LC1789" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>; i<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L1790" class="blob-num js-line-number" data-line-number="1790"></td>
        <td id="LC1790" class="blob-code blob-code-inner js-file-line">        	<span class="pl-k">var</span> entry <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-c1">data</span>[i];</td>
      </tr>
      <tr>
        <td id="L1791" class="blob-num js-line-number" data-line-number="1791"></td>
        <td id="LC1791" class="blob-code blob-code-inner js-file-line">            line    <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-smi">rtfstring</span>;</td>
      </tr>
      <tr>
        <td id="L1792" class="blob-num js-line-number" data-line-number="1792"></td>
        <td id="LC1792" class="blob-code blob-code-inner js-file-line">            title   <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1793" class="blob-num js-line-number" data-line-number="1793"></td>
        <td id="LC1793" class="blob-code blob-code-inner js-file-line">            journal <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1794" class="blob-num js-line-number" data-line-number="1794"></td>
        <td id="LC1794" class="blob-code blob-code-inner js-file-line">            year    <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1795" class="blob-num js-line-number" data-line-number="1795"></td>
        <td id="LC1795" class="blob-code blob-code-inner js-file-line">            authors <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1796" class="blob-num js-line-number" data-line-number="1796"></td>
        <td id="LC1796" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-en">array_key_exists</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>title<span class="pl-pds">&#39;</span></span>, entry)) {</td>
      </tr>
      <tr>
        <td id="L1797" class="blob-num js-line-number" data-line-number="1797"></td>
        <td id="LC1797" class="blob-code blob-code-inner js-file-line">                title <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">_unwrap</span>(entry[<span class="pl-s"><span class="pl-pds">&#39;</span>title<span class="pl-pds">&#39;</span></span>]);</td>
      </tr>
      <tr>
        <td id="L1798" class="blob-num js-line-number" data-line-number="1798"></td>
        <td id="LC1798" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1799" class="blob-num js-line-number" data-line-number="1799"></td>
        <td id="LC1799" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-en">array_key_exists</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>journal<span class="pl-pds">&#39;</span></span>, entry)) {</td>
      </tr>
      <tr>
        <td id="L1800" class="blob-num js-line-number" data-line-number="1800"></td>
        <td id="LC1800" class="blob-code blob-code-inner js-file-line">                journal <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">_unwrap</span>(entry[<span class="pl-s"><span class="pl-pds">&#39;</span>journal<span class="pl-pds">&#39;</span></span>]);</td>
      </tr>
      <tr>
        <td id="L1801" class="blob-num js-line-number" data-line-number="1801"></td>
        <td id="LC1801" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1802" class="blob-num js-line-number" data-line-number="1802"></td>
        <td id="LC1802" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-en">array_key_exists</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>year<span class="pl-pds">&#39;</span></span>, entry)) {</td>
      </tr>
      <tr>
        <td id="L1803" class="blob-num js-line-number" data-line-number="1803"></td>
        <td id="LC1803" class="blob-code blob-code-inner js-file-line">                year <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">_unwrap</span>(entry[<span class="pl-s"><span class="pl-pds">&#39;</span>year<span class="pl-pds">&#39;</span></span>]);</td>
      </tr>
      <tr>
        <td id="L1804" class="blob-num js-line-number" data-line-number="1804"></td>
        <td id="LC1804" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1805" class="blob-num js-line-number" data-line-number="1805"></td>
        <td id="LC1805" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-en">array_key_exists</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>author<span class="pl-pds">&#39;</span></span>, entry)) {</td>
      </tr>
      <tr>
        <td id="L1806" class="blob-num js-line-number" data-line-number="1806"></td>
        <td id="LC1806" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>[<span class="pl-s"><span class="pl-pds">&#39;</span>extractAuthors<span class="pl-pds">&#39;</span></span>]) {</td>
      </tr>
      <tr>
        <td id="L1807" class="blob-num js-line-number" data-line-number="1807"></td>
        <td id="LC1807" class="blob-code blob-code-inner js-file-line">                    tmparray <span class="pl-k">=</span> []; <span class="pl-c"><span class="pl-c">//</span>In this array the authors are saved and the joind with an and</span></td>
      </tr>
      <tr>
        <td id="L1808" class="blob-num js-line-number" data-line-number="1808"></td>
        <td id="LC1808" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">for</span> (<span class="pl-k">var</span> j <span class="pl-k">in</span> entry[<span class="pl-s"><span class="pl-pds">&#39;</span>author<span class="pl-pds">&#39;</span></span>]) {</td>
      </tr>
      <tr>
        <td id="L1809" class="blob-num js-line-number" data-line-number="1809"></td>
        <td id="LC1809" class="blob-code blob-code-inner js-file-line">                    	<span class="pl-k">var</span> authorentry <span class="pl-k">=</span> entry[<span class="pl-s"><span class="pl-pds">&#39;</span>author<span class="pl-pds">&#39;</span></span>][j];</td>
      </tr>
      <tr>
        <td id="L1810" class="blob-num js-line-number" data-line-number="1810"></td>
        <td id="LC1810" class="blob-code blob-code-inner js-file-line">                        tmparray[<span class="pl-smi">tmparray</span>.<span class="pl-c1">length</span>] <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">_formatAuthor</span>(authorentry);</td>
      </tr>
      <tr>
        <td id="L1811" class="blob-num js-line-number" data-line-number="1811"></td>
        <td id="LC1811" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L1812" class="blob-num js-line-number" data-line-number="1812"></td>
        <td id="LC1812" class="blob-code blob-code-inner js-file-line">                    authors <span class="pl-k">=</span> <span class="pl-en">join</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>, <span class="pl-pds">&#39;</span></span>, tmparray);</td>
      </tr>
      <tr>
        <td id="L1813" class="blob-num js-line-number" data-line-number="1813"></td>
        <td id="LC1813" class="blob-code blob-code-inner js-file-line">                } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1814" class="blob-num js-line-number" data-line-number="1814"></td>
        <td id="LC1814" class="blob-code blob-code-inner js-file-line">                    authors <span class="pl-k">=</span> entry[<span class="pl-s"><span class="pl-pds">&#39;</span>author<span class="pl-pds">&#39;</span></span>];</td>
      </tr>
      <tr>
        <td id="L1815" class="blob-num js-line-number" data-line-number="1815"></td>
        <td id="LC1815" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1816" class="blob-num js-line-number" data-line-number="1816"></td>
        <td id="LC1816" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1817" class="blob-num js-line-number" data-line-number="1817"></td>
        <td id="LC1817" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ((<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span><span class="pl-k">!=</span>title) <span class="pl-k">||</span> (<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span><span class="pl-k">!=</span>journal) <span class="pl-k">||</span> (<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span><span class="pl-k">!=</span>year) <span class="pl-k">||</span> (<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span><span class="pl-k">!=</span>authors)) {</td>
      </tr>
      <tr>
        <td id="L1818" class="blob-num js-line-number" data-line-number="1818"></td>
        <td id="LC1818" class="blob-code blob-code-inner js-file-line">                line <span class="pl-k">=</span> <span class="pl-en">str_replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>TITLE<span class="pl-pds">&quot;</span></span>, title, line);</td>
      </tr>
      <tr>
        <td id="L1819" class="blob-num js-line-number" data-line-number="1819"></td>
        <td id="LC1819" class="blob-code blob-code-inner js-file-line">                line <span class="pl-k">=</span> <span class="pl-en">str_replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>JOURNAL<span class="pl-pds">&quot;</span></span>, journal, line);</td>
      </tr>
      <tr>
        <td id="L1820" class="blob-num js-line-number" data-line-number="1820"></td>
        <td id="LC1820" class="blob-code blob-code-inner js-file-line">                line <span class="pl-k">=</span> <span class="pl-en">str_replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>YEAR<span class="pl-pds">&quot;</span></span>, year, line);</td>
      </tr>
      <tr>
        <td id="L1821" class="blob-num js-line-number" data-line-number="1821"></td>
        <td id="LC1821" class="blob-code blob-code-inner js-file-line">                line <span class="pl-k">=</span> <span class="pl-en">str_replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>AUTHORS<span class="pl-pds">&quot;</span></span>, authors, line);</td>
      </tr>
      <tr>
        <td id="L1822" class="blob-num js-line-number" data-line-number="1822"></td>
        <td id="LC1822" class="blob-code blob-code-inner js-file-line">                line <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n\\</span>par<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1823" class="blob-num js-line-number" data-line-number="1823"></td>
        <td id="LC1823" class="blob-code blob-code-inner js-file-line">                ret  <span class="pl-k">+=</span> line;</td>
      </tr>
      <tr>
        <td id="L1824" class="blob-num js-line-number" data-line-number="1824"></td>
        <td id="LC1824" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1825" class="blob-num js-line-number" data-line-number="1825"></td>
        <td id="LC1825" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">this</span>.<span class="pl-en">_generateWarning</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>WARNING_LINE_WAS_NOT_CONVERTED<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>, <span class="pl-en">print_r</span>(entry,<span class="pl-c1">1</span>));</td>
      </tr>
      <tr>
        <td id="L1826" class="blob-num js-line-number" data-line-number="1826"></td>
        <td id="LC1826" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1827" class="blob-num js-line-number" data-line-number="1827"></td>
        <td id="LC1827" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1828" class="blob-num js-line-number" data-line-number="1828"></td>
        <td id="LC1828" class="blob-code blob-code-inner js-file-line">        ret <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>}<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1829" class="blob-num js-line-number" data-line-number="1829"></td>
        <td id="LC1829" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> ret;</td>
      </tr>
      <tr>
        <td id="L1830" class="blob-num js-line-number" data-line-number="1830"></td>
        <td id="LC1830" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L1831" class="blob-num js-line-number" data-line-number="1831"></td>
        <td id="LC1831" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1832" class="blob-num js-line-number" data-line-number="1832"></td>
        <td id="LC1832" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">/**</span></span></td>
      </tr>
      <tr>
        <td id="L1833" class="blob-num js-line-number" data-line-number="1833"></td>
        <td id="LC1833" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Returns the stored data in HTML format</span></td>
      </tr>
      <tr>
        <td id="L1834" class="blob-num js-line-number" data-line-number="1834"></td>
        <td id="LC1834" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1835" class="blob-num js-line-number" data-line-number="1835"></td>
        <td id="LC1835" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * This method simply returns a HTML formatted string+ This is done very</span></td>
      </tr>
      <tr>
        <td id="L1836" class="blob-num js-line-number" data-line-number="1836"></td>
        <td id="LC1836" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * simple and is not intended for heavy using and fine formatting+ This</span></td>
      </tr>
      <tr>
        <td id="L1837" class="blob-num js-line-number" data-line-number="1837"></td>
        <td id="LC1837" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * should be done by BibTex! It is intended to give some kind of quick</span></td>
      </tr>
      <tr>
        <td id="L1838" class="blob-num js-line-number" data-line-number="1838"></td>
        <td id="LC1838" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * preview+ If you want to change the default format you have to override</span></td>
      </tr>
      <tr>
        <td id="L1839" class="blob-num js-line-number" data-line-number="1839"></td>
        <td id="LC1839" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * the class variable &quot;htmlstring&quot;+ This variable is used and the placeholders</span></td>
      </tr>
      <tr>
        <td id="L1840" class="blob-num js-line-number" data-line-number="1840"></td>
        <td id="LC1840" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * simply replaced+</span></td>
      </tr>
      <tr>
        <td id="L1841" class="blob-num js-line-number" data-line-number="1841"></td>
        <td id="LC1841" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Lines with no data cause an warning!</span></td>
      </tr>
      <tr>
        <td id="L1842" class="blob-num js-line-number" data-line-number="1842"></td>
        <td id="LC1842" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1843" class="blob-num js-line-number" data-line-number="1843"></td>
        <td id="LC1843" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@return</span> string the HTML Strings</span></td>
      </tr>
      <tr>
        <td id="L1844" class="blob-num js-line-number" data-line-number="1844"></td>
        <td id="LC1844" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1845" class="blob-num js-line-number" data-line-number="1845"></td>
        <td id="LC1845" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">html</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">min</span>,<span class="pl-smi">max</span>)</td>
      </tr>
      <tr>
        <td id="L1846" class="blob-num js-line-number" data-line-number="1846"></td>
        <td id="LC1846" class="blob-code blob-code-inner js-file-line">    {</td>
      </tr>
      <tr>
        <td id="L1847" class="blob-num js-line-number" data-line-number="1847"></td>
        <td id="LC1847" class="blob-code blob-code-inner js-file-line">    	<span class="pl-k">if</span> ( <span class="pl-k">typeof</span> min <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span> ) min <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L1848" class="blob-num js-line-number" data-line-number="1848"></td>
        <td id="LC1848" class="blob-code blob-code-inner js-file-line">    	<span class="pl-k">if</span> ( <span class="pl-k">typeof</span> max <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span> ) max <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L1849" class="blob-num js-line-number" data-line-number="1849"></td>
        <td id="LC1849" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> ret <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&lt;p&gt;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1850" class="blob-num js-line-number" data-line-number="1850"></td>
        <td id="LC1850" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span>min; i<span class="pl-k">&lt;</span>max; i<span class="pl-k">++</span>){</td>
      </tr>
      <tr>
        <td id="L1851" class="blob-num js-line-number" data-line-number="1851"></td>
        <td id="LC1851" class="blob-code blob-code-inner js-file-line">        	<span class="pl-k">var</span> entry <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-c1">data</span>[i];</td>
      </tr>
      <tr>
        <td id="L1852" class="blob-num js-line-number" data-line-number="1852"></td>
        <td id="LC1852" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> line    <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-smi">htmlstring</span>;</td>
      </tr>
      <tr>
        <td id="L1853" class="blob-num js-line-number" data-line-number="1853"></td>
        <td id="LC1853" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> title   <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1854" class="blob-num js-line-number" data-line-number="1854"></td>
        <td id="LC1854" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> journal <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1855" class="blob-num js-line-number" data-line-number="1855"></td>
        <td id="LC1855" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> year    <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1856" class="blob-num js-line-number" data-line-number="1856"></td>
        <td id="LC1856" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> authors <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1857" class="blob-num js-line-number" data-line-number="1857"></td>
        <td id="LC1857" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-en">array_key_exists</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>title<span class="pl-pds">&#39;</span></span>, entry)) {</td>
      </tr>
      <tr>
        <td id="L1858" class="blob-num js-line-number" data-line-number="1858"></td>
        <td id="LC1858" class="blob-code blob-code-inner js-file-line">                title <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">_unwrap</span>(entry[<span class="pl-s"><span class="pl-pds">&#39;</span>title<span class="pl-pds">&#39;</span></span>]);</td>
      </tr>
      <tr>
        <td id="L1859" class="blob-num js-line-number" data-line-number="1859"></td>
        <td id="LC1859" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1860" class="blob-num js-line-number" data-line-number="1860"></td>
        <td id="LC1860" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-en">array_key_exists</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>journal<span class="pl-pds">&#39;</span></span>, entry)) {</td>
      </tr>
      <tr>
        <td id="L1861" class="blob-num js-line-number" data-line-number="1861"></td>
        <td id="LC1861" class="blob-code blob-code-inner js-file-line">                journal <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">_unwrap</span>(entry[<span class="pl-s"><span class="pl-pds">&#39;</span>journal<span class="pl-pds">&#39;</span></span>]);</td>
      </tr>
      <tr>
        <td id="L1862" class="blob-num js-line-number" data-line-number="1862"></td>
        <td id="LC1862" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1863" class="blob-num js-line-number" data-line-number="1863"></td>
        <td id="LC1863" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-en">array_key_exists</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>year<span class="pl-pds">&#39;</span></span>, entry)) {</td>
      </tr>
      <tr>
        <td id="L1864" class="blob-num js-line-number" data-line-number="1864"></td>
        <td id="LC1864" class="blob-code blob-code-inner js-file-line">                year <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">_unwrap</span>(entry[<span class="pl-s"><span class="pl-pds">&#39;</span>year<span class="pl-pds">&#39;</span></span>]);</td>
      </tr>
      <tr>
        <td id="L1865" class="blob-num js-line-number" data-line-number="1865"></td>
        <td id="LC1865" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1866" class="blob-num js-line-number" data-line-number="1866"></td>
        <td id="LC1866" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-en">array_key_exists</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>author<span class="pl-pds">&#39;</span></span>, entry)) {</td>
      </tr>
      <tr>
        <td id="L1867" class="blob-num js-line-number" data-line-number="1867"></td>
        <td id="LC1867" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>[<span class="pl-s"><span class="pl-pds">&#39;</span>extractAuthors<span class="pl-pds">&#39;</span></span>]) {</td>
      </tr>
      <tr>
        <td id="L1868" class="blob-num js-line-number" data-line-number="1868"></td>
        <td id="LC1868" class="blob-code blob-code-inner js-file-line">                    tmparray <span class="pl-k">=</span> []; <span class="pl-c"><span class="pl-c">//</span>In this array the authors are saved and the joind with an and</span></td>
      </tr>
      <tr>
        <td id="L1869" class="blob-num js-line-number" data-line-number="1869"></td>
        <td id="LC1869" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">for</span> (j <span class="pl-k">in</span> entry[<span class="pl-s"><span class="pl-pds">&#39;</span>author<span class="pl-pds">&#39;</span></span>] ) {</td>
      </tr>
      <tr>
        <td id="L1870" class="blob-num js-line-number" data-line-number="1870"></td>
        <td id="LC1870" class="blob-code blob-code-inner js-file-line">                    	<span class="pl-k">var</span> authorentry <span class="pl-k">=</span> entry[<span class="pl-s"><span class="pl-pds">&#39;</span>author<span class="pl-pds">&#39;</span></span>][j];</td>
      </tr>
      <tr>
        <td id="L1871" class="blob-num js-line-number" data-line-number="1871"></td>
        <td id="LC1871" class="blob-code blob-code-inner js-file-line">                        tmparray[<span class="pl-smi">tmparray</span>.<span class="pl-c1">length</span>] <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-en">_formatAuthor</span>(authorentry);</td>
      </tr>
      <tr>
        <td id="L1872" class="blob-num js-line-number" data-line-number="1872"></td>
        <td id="LC1872" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L1873" class="blob-num js-line-number" data-line-number="1873"></td>
        <td id="LC1873" class="blob-code blob-code-inner js-file-line">                    authors <span class="pl-k">=</span> <span class="pl-en">join</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>, <span class="pl-pds">&#39;</span></span>, tmparray);</td>
      </tr>
      <tr>
        <td id="L1874" class="blob-num js-line-number" data-line-number="1874"></td>
        <td id="LC1874" class="blob-code blob-code-inner js-file-line">                } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1875" class="blob-num js-line-number" data-line-number="1875"></td>
        <td id="LC1875" class="blob-code blob-code-inner js-file-line">                    authors <span class="pl-k">=</span> entry[<span class="pl-s"><span class="pl-pds">&#39;</span>author<span class="pl-pds">&#39;</span></span>];</td>
      </tr>
      <tr>
        <td id="L1876" class="blob-num js-line-number" data-line-number="1876"></td>
        <td id="LC1876" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L1877" class="blob-num js-line-number" data-line-number="1877"></td>
        <td id="LC1877" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1878" class="blob-num js-line-number" data-line-number="1878"></td>
        <td id="LC1878" class="blob-code blob-code-inner js-file-line">            </td>
      </tr>
      <tr>
        <td id="L1879" class="blob-num js-line-number" data-line-number="1879"></td>
        <td id="LC1879" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ((<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span><span class="pl-k">!=</span>title) <span class="pl-k">||</span> (<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span><span class="pl-k">!=</span>journal) <span class="pl-k">||</span> (<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span><span class="pl-k">!=</span>year) <span class="pl-k">||</span> (<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span><span class="pl-k">!=</span>authors)) {</td>
      </tr>
      <tr>
        <td id="L1880" class="blob-num js-line-number" data-line-number="1880"></td>
        <td id="LC1880" class="blob-code blob-code-inner js-file-line">                line <span class="pl-k">=</span> <span class="pl-en">str_replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>TITLE<span class="pl-pds">&quot;</span></span>, title, line);</td>
      </tr>
      <tr>
        <td id="L1881" class="blob-num js-line-number" data-line-number="1881"></td>
        <td id="LC1881" class="blob-code blob-code-inner js-file-line">                line <span class="pl-k">=</span> <span class="pl-en">str_replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>JOURNAL<span class="pl-pds">&quot;</span></span>, journal, line);</td>
      </tr>
      <tr>
        <td id="L1882" class="blob-num js-line-number" data-line-number="1882"></td>
        <td id="LC1882" class="blob-code blob-code-inner js-file-line">                line <span class="pl-k">=</span> <span class="pl-en">str_replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>YEAR<span class="pl-pds">&quot;</span></span>, year, line);</td>
      </tr>
      <tr>
        <td id="L1883" class="blob-num js-line-number" data-line-number="1883"></td>
        <td id="LC1883" class="blob-code blob-code-inner js-file-line">                line <span class="pl-k">=</span> <span class="pl-en">str_replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>AUTHORS<span class="pl-pds">&quot;</span></span>, authors, line);</td>
      </tr>
      <tr>
        <td id="L1884" class="blob-num js-line-number" data-line-number="1884"></td>
        <td id="LC1884" class="blob-code blob-code-inner js-file-line">                line <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1885" class="blob-num js-line-number" data-line-number="1885"></td>
        <td id="LC1885" class="blob-code blob-code-inner js-file-line">                ret  <span class="pl-k">+=</span> line;</td>
      </tr>
      <tr>
        <td id="L1886" class="blob-num js-line-number" data-line-number="1886"></td>
        <td id="LC1886" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1887" class="blob-num js-line-number" data-line-number="1887"></td>
        <td id="LC1887" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">this</span>.<span class="pl-en">_generateWarning</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>WARNING_LINE_WAS_NOT_CONVERTED<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>, <span class="pl-en">print_r</span>(entry,<span class="pl-c1">1</span>));</td>
      </tr>
      <tr>
        <td id="L1888" class="blob-num js-line-number" data-line-number="1888"></td>
        <td id="LC1888" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1889" class="blob-num js-line-number" data-line-number="1889"></td>
        <td id="LC1889" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1890" class="blob-num js-line-number" data-line-number="1890"></td>
        <td id="LC1890" class="blob-code blob-code-inner js-file-line">        ret <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/p&gt;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1891" class="blob-num js-line-number" data-line-number="1891"></td>
        <td id="LC1891" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> ret;</td>
      </tr>
      <tr>
        <td id="L1892" class="blob-num js-line-number" data-line-number="1892"></td>
        <td id="LC1892" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1893" class="blob-num js-line-number" data-line-number="1893"></td>
        <td id="LC1893" class="blob-code blob-code-inner js-file-line">};<span class="pl-c"><span class="pl-c">/*</span>!</span></td>
      </tr>
      <tr>
        <td id="L1894" class="blob-num js-line-number" data-line-number="1894"></td>
        <td id="LC1894" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * File:        jquery.dataTables.min.js</span></td>
      </tr>
      <tr>
        <td id="L1895" class="blob-num js-line-number" data-line-number="1895"></td>
        <td id="LC1895" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Version:     1.6.2</span></td>
      </tr>
      <tr>
        <td id="L1896" class="blob-num js-line-number" data-line-number="1896"></td>
        <td id="LC1896" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Author:      Allan Jardine (www.sprymedia.co.uk)</span></td>
      </tr>
      <tr>
        <td id="L1897" class="blob-num js-line-number" data-line-number="1897"></td>
        <td id="LC1897" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Info:        www.datatables.net</span></td>
      </tr>
      <tr>
        <td id="L1898" class="blob-num js-line-number" data-line-number="1898"></td>
        <td id="LC1898" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * </span></td>
      </tr>
      <tr>
        <td id="L1899" class="blob-num js-line-number" data-line-number="1899"></td>
        <td id="LC1899" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Copyright 2008-2010 Allan Jardine, all rights reserved.</span></td>
      </tr>
      <tr>
        <td id="L1900" class="blob-num js-line-number" data-line-number="1900"></td>
        <td id="LC1900" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L1901" class="blob-num js-line-number" data-line-number="1901"></td>
        <td id="LC1901" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * This source file is free software, under either the GPL v2 license or a</span></td>
      </tr>
      <tr>
        <td id="L1902" class="blob-num js-line-number" data-line-number="1902"></td>
        <td id="LC1902" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * BSD style license, as supplied with this software.</span></td>
      </tr>
      <tr>
        <td id="L1903" class="blob-num js-line-number" data-line-number="1903"></td>
        <td id="LC1903" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * </span></td>
      </tr>
      <tr>
        <td id="L1904" class="blob-num js-line-number" data-line-number="1904"></td>
        <td id="LC1904" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * This source file is distributed in the hope that it will be useful, but </span></td>
      </tr>
      <tr>
        <td id="L1905" class="blob-num js-line-number" data-line-number="1905"></td>
        <td id="LC1905" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY </span></td>
      </tr>
      <tr>
        <td id="L1906" class="blob-num js-line-number" data-line-number="1906"></td>
        <td id="LC1906" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.</span></td>
      </tr>
      <tr>
        <td id="L1907" class="blob-num js-line-number" data-line-number="1907"></td>
        <td id="LC1907" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/</span></span></td>
      </tr>
      <tr>
        <td id="L1908" class="blob-num js-line-number" data-line-number="1908"></td>
        <td id="LC1908" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">$</span>){<span class="pl-smi">$</span>.<span class="pl-smi">fn</span>.<span class="pl-smi">dataTableSettings</span><span class="pl-k">=</span>[];<span class="pl-k">var</span> _aoSettings<span class="pl-k">=</span><span class="pl-smi">$</span>.<span class="pl-smi">fn</span>.<span class="pl-smi">dataTableSettings</span>;<span class="pl-smi">$</span>.<span class="pl-smi">fn</span>.<span class="pl-smi">dataTableExt</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1909" class="blob-num js-line-number" data-line-number="1909"></td>
        <td id="LC1909" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> _oExt<span class="pl-k">=</span><span class="pl-smi">$</span>.<span class="pl-smi">fn</span>.<span class="pl-smi">dataTableExt</span>;<span class="pl-smi">_oExt</span>.<span class="pl-smi">sVersion</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>1.6.2<span class="pl-pds">&quot;</span></span>;<span class="pl-smi">_oExt</span>.<span class="pl-smi">iApiIndex</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">_oExt</span>.<span class="pl-smi">oApi</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1910" class="blob-num js-line-number" data-line-number="1910"></td>
        <td id="LC1910" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">_oExt</span>.<span class="pl-smi">afnFiltering</span><span class="pl-k">=</span>[];<span class="pl-smi">_oExt</span>.<span class="pl-smi">aoFeatures</span><span class="pl-k">=</span>[];<span class="pl-smi">_oExt</span>.<span class="pl-smi">ofnSearch</span><span class="pl-k">=</span>{};<span class="pl-smi">_oExt</span>.<span class="pl-smi">afnSortData</span><span class="pl-k">=</span>[];</td>
      </tr>
      <tr>
        <td id="L1911" class="blob-num js-line-number" data-line-number="1911"></td>
        <td id="LC1911" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">_oExt</span>.<span class="pl-smi">oStdClasses</span><span class="pl-k">=</span>{sPagePrevEnabled<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>paginate_enabled_previous<span class="pl-pds">&quot;</span></span>,sPagePrevDisabled<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>paginate_disabled_previous<span class="pl-pds">&quot;</span></span>,sPageNextEnabled<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>paginate_enabled_next<span class="pl-pds">&quot;</span></span>,sPageNextDisabled<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>paginate_disabled_next<span class="pl-pds">&quot;</span></span>,sPageJUINext<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,sPageJUIPrev<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,sPageButton<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>paginate_button<span class="pl-pds">&quot;</span></span>,sPageButtonActive<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>paginate_active<span class="pl-pds">&quot;</span></span>,sPageButtonStaticDisabled<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>paginate_button<span class="pl-pds">&quot;</span></span>,sPageFirst<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>first<span class="pl-pds">&quot;</span></span>,sPagePrevious<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>previous<span class="pl-pds">&quot;</span></span>,sPageNext<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>next<span class="pl-pds">&quot;</span></span>,sPageLast<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>last<span class="pl-pds">&quot;</span></span>,sStripOdd<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>odd<span class="pl-pds">&quot;</span></span>,sStripEven<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>even<span class="pl-pds">&quot;</span></span>,sRowEmpty<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>dataTables_empty<span class="pl-pds">&quot;</span></span>,sWrapper<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>dataTables_wrapper<span class="pl-pds">&quot;</span></span>,sFilter<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>dataTables_filter<span class="pl-pds">&quot;</span></span>,sInfo<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>dataTables_info<span class="pl-pds">&quot;</span></span>,sPaging<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>dataTables_paginate paging_<span class="pl-pds">&quot;</span></span>,sLength<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>dataTables_length<span class="pl-pds">&quot;</span></span>,sProcessing<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>dataTables_processing<span class="pl-pds">&quot;</span></span>,sSortAsc<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>sorting_asc<span class="pl-pds">&quot;</span></span>,sSortDesc<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>sorting_desc<span class="pl-pds">&quot;</span></span>,sSortable<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>sorting<span class="pl-pds">&quot;</span></span>,sSortableAsc<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>sorting_asc_disabled<span class="pl-pds">&quot;</span></span>,sSortableDesc<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>sorting_desc_disabled<span class="pl-pds">&quot;</span></span>,sSortableNone<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>sorting_disabled<span class="pl-pds">&quot;</span></span>,sSortColumn<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>sorting_<span class="pl-pds">&quot;</span></span>,sSortJUIAsc<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,sSortJUIDesc<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,sSortJUI<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,sSortJUIAscAllowed<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,sSortJUIDescAllowed<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>};</td>
      </tr>
      <tr>
        <td id="L1912" class="blob-num js-line-number" data-line-number="1912"></td>
        <td id="LC1912" class="blob-code blob-code-inner js-file-line">_oExt.oJUIClasses={sPagePrevEnabled:&quot;fg-button ui-state-default ui-corner-left&quot;,sPagePrevDisabled:&quot;fg-button ui-state-default ui-corner-left ui-state-disabled&quot;,sPageNextEnabled:&quot;fg-button ui-state-default ui-corner-right&quot;,sPageNextDisabled:&quot;fg-button ui-state-default ui-corner-right ui-state-disabled&quot;,sPageJUINext:&quot;ui-icon ui-icon-circle-arrow-e&quot;,sPageJUIPrev:&quot;ui-icon ui-icon-circle-arrow-w&quot;,sPageButton:&quot;fg-button ui-state-default&quot;,sPageButtonActive:&quot;fg-button ui-state-default ui-state-disabled&quot;,sPageButtonStaticDisabled:&quot;fg-button ui-state-default ui-state-disabled&quot;,sPageFirst:&quot;first ui-corner-tl ui-corner-bl&quot;,sPagePrevious:&quot;previous&quot;,sPageNext:&quot;next&quot;,sPageLast:&quot;last ui-corner-tr ui-corner-br&quot;,sStripOdd:&quot;odd&quot;,sStripEven:&quot;even&quot;,sRowEmpty:&quot;dataTables_empty&quot;,sWrapper:&quot;dataTables_wrapper&quot;,sFilter:&quot;dataTables_filter&quot;,sInfo:&quot;dataTables_info&quot;,sPaging:&quot;dataTables_paginate fg-buttonset fg-buttonset-multi paging_&quot;,sLength:&quot;dataTables_length&quot;,sProcessing:&quot;dataTables_processing&quot;,sSortAsc:&quot;ui-state-default&quot;,sSortDesc:&quot;ui-state-default&quot;,sSortable:&quot;ui-state-default&quot;,sSortableAsc:&quot;ui-state-default&quot;,sSortableDesc:&quot;ui-state-default&quot;,sSortableNone:&quot;ui-state-default&quot;,sSortColumn:&quot;sorting_&quot;,sSortJUIAsc:&quot;css_right ui-icon ui-icon-triangle-1-n&quot;,sSortJUIDesc:&quot;css_right ui-icon ui-icon-triangle-1-s&quot;,sSortJUI:&quot;css_right ui-icon ui-icon-carat-2-n-s&quot;,sSortJUIAscAllowed:&quot;css_right ui-icon ui-icon-carat-1-n&quot;,sSortJUIDescAllowed:&quot;css_right ui-icon ui-icon-carat-1-s&quot;};</td>
      </tr>
      <tr>
        <td id="L1913" class="blob-num js-line-number" data-line-number="1913"></td>
        <td id="LC1913" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">_oExt</span>.<span class="pl-smi">oPagination</span><span class="pl-k">=</span>{two_button<span class="pl-k">:</span>{<span class="pl-en">fnInit</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">oSettings</span>,<span class="pl-smi">nPaging</span>,<span class="pl-smi">fnCallbackDraw</span>){<span class="pl-k">var</span> nPrevious,nNext,nPreviousInner,nNextInner;</td>
      </tr>
      <tr>
        <td id="L1914" class="blob-num js-line-number" data-line-number="1914"></td>
        <td id="LC1914" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">bJUI</span>){nPrevious<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>div<span class="pl-pds">&quot;</span></span>);nNext<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>div<span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L1915" class="blob-num js-line-number" data-line-number="1915"></td>
        <td id="LC1915" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">else</span>{nPrevious<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span>);nNext<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span>);nNextInner<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>span<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1916" class="blob-num js-line-number" data-line-number="1916"></td>
        <td id="LC1916" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">nNextInner</span>.<span class="pl-c1">className</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oClasses</span>.<span class="pl-smi">sPageJUINext</span>;<span class="pl-smi">nNext</span>.<span class="pl-c1">appendChild</span>(nNextInner);</td>
      </tr>
      <tr>
        <td id="L1917" class="blob-num js-line-number" data-line-number="1917"></td>
        <td id="LC1917" class="blob-code blob-code-inner js-file-line">nPreviousInner<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>span<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">nPreviousInner</span>.<span class="pl-c1">className</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oClasses</span>.<span class="pl-smi">sPageJUIPrev</span>;</td>
      </tr>
      <tr>
        <td id="L1918" class="blob-num js-line-number" data-line-number="1918"></td>
        <td id="LC1918" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">nPrevious</span>.<span class="pl-c1">appendChild</span>(nPreviousInner)}<span class="pl-smi">nPrevious</span>.<span class="pl-c1">className</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oClasses</span>.<span class="pl-smi">sPagePrevDisabled</span>;</td>
      </tr>
      <tr>
        <td id="L1919" class="blob-num js-line-number" data-line-number="1919"></td>
        <td id="LC1919" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">nNext</span>.<span class="pl-c1">className</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oClasses</span>.<span class="pl-smi">sPageNextDisabled</span>;<span class="pl-smi">nPrevious</span>.<span class="pl-c1">title</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oLanguage</span>.<span class="pl-smi">oPaginate</span>.<span class="pl-smi">sPrevious</span>;</td>
      </tr>
      <tr>
        <td id="L1920" class="blob-num js-line-number" data-line-number="1920"></td>
        <td id="LC1920" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">nNext</span>.<span class="pl-c1">title</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oLanguage</span>.<span class="pl-smi">oPaginate</span>.<span class="pl-smi">sNext</span>;<span class="pl-smi">nPaging</span>.<span class="pl-c1">appendChild</span>(nPrevious);<span class="pl-smi">nPaging</span>.<span class="pl-c1">appendChild</span>(nNext);</td>
      </tr>
      <tr>
        <td id="L1921" class="blob-num js-line-number" data-line-number="1921"></td>
        <td id="LC1921" class="blob-code blob-code-inner js-file-line"><span class="pl-en">$</span>(nPrevious).<span class="pl-c1">click</span>(<span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oApi</span>.<span class="pl-en">_fnPageChange</span>(oSettings,<span class="pl-s"><span class="pl-pds">&quot;</span>previous<span class="pl-pds">&quot;</span></span>)){<span class="pl-en">fnCallbackDraw</span>(oSettings)</td>
      </tr>
      <tr>
        <td id="L1922" class="blob-num js-line-number" data-line-number="1922"></td>
        <td id="LC1922" class="blob-code blob-code-inner js-file-line">}});<span class="pl-en">$</span>(nNext).<span class="pl-c1">click</span>(<span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oApi</span>.<span class="pl-en">_fnPageChange</span>(oSettings,<span class="pl-s"><span class="pl-pds">&quot;</span>next<span class="pl-pds">&quot;</span></span>)){<span class="pl-en">fnCallbackDraw</span>(oSettings)</td>
      </tr>
      <tr>
        <td id="L1923" class="blob-num js-line-number" data-line-number="1923"></td>
        <td id="LC1923" class="blob-code blob-code-inner js-file-line">}});<span class="pl-en">$</span>(nPrevious).<span class="pl-en">bind</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>selectstart<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">false</span>});<span class="pl-en">$</span>(nNext).<span class="pl-en">bind</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>selectstart<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">false</span></td>
      </tr>
      <tr>
        <td id="L1924" class="blob-num js-line-number" data-line-number="1924"></td>
        <td id="LC1924" class="blob-code blob-code-inner js-file-line">});<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">sTableId</span><span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-k">typeof</span> <span class="pl-smi">oSettings</span>.<span class="pl-smi">aanFeatures</span>.<span class="pl-smi">p</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>){<span class="pl-smi">nPaging</span>.<span class="pl-c1">setAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>id<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">oSettings</span>.<span class="pl-smi">sTableId</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>_paginate<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1925" class="blob-num js-line-number" data-line-number="1925"></td>
        <td id="LC1925" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">nPrevious</span>.<span class="pl-c1">setAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>id<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">oSettings</span>.<span class="pl-smi">sTableId</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>_previous<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">nNext</span>.<span class="pl-c1">setAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>id<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">oSettings</span>.<span class="pl-smi">sTableId</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>_next<span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L1926" class="blob-num js-line-number" data-line-number="1926"></td>
        <td id="LC1926" class="blob-code blob-code-inner js-file-line">}},<span class="pl-en">fnUpdate</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">oSettings</span>,<span class="pl-smi">fnCallbackDraw</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aanFeatures</span>.<span class="pl-smi">p</span>){<span class="pl-k">return</span></td>
      </tr>
      <tr>
        <td id="L1927" class="blob-num js-line-number" data-line-number="1927"></td>
        <td id="LC1927" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">var</span> an<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aanFeatures</span>.<span class="pl-smi">p</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>,iLen<span class="pl-k">=</span><span class="pl-smi">an</span>.<span class="pl-c1">length</span>;i<span class="pl-k">&lt;</span>iLen;i<span class="pl-k">++</span>){<span class="pl-k">if</span>(an[i].<span class="pl-c1">childNodes</span>.<span class="pl-c1">length</span><span class="pl-k">!==</span><span class="pl-c1">0</span>){an[i].<span class="pl-c1">childNodes</span>[<span class="pl-c1">0</span>].<span class="pl-c1">className</span><span class="pl-k">=</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayStart</span><span class="pl-k">===</span><span class="pl-c1">0</span>)<span class="pl-k">?</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oClasses</span>.<span class="pl-smi">sPagePrevDisabled</span><span class="pl-k">:</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oClasses</span>.<span class="pl-smi">sPagePrevEnabled</span>;</td>
      </tr>
      <tr>
        <td id="L1928" class="blob-num js-line-number" data-line-number="1928"></td>
        <td id="LC1928" class="blob-code blob-code-inner js-file-line">an[i].<span class="pl-c1">childNodes</span>[<span class="pl-c1">1</span>].<span class="pl-c1">className</span><span class="pl-k">=</span>(<span class="pl-smi">oSettings</span>.<span class="pl-en">fnDisplayEnd</span>()<span class="pl-k">==</span><span class="pl-smi">oSettings</span>.<span class="pl-en">fnRecordsDisplay</span>())<span class="pl-k">?</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oClasses</span>.<span class="pl-smi">sPageNextDisabled</span><span class="pl-k">:</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oClasses</span>.<span class="pl-smi">sPageNextEnabled</span></td>
      </tr>
      <tr>
        <td id="L1929" class="blob-num js-line-number" data-line-number="1929"></td>
        <td id="LC1929" class="blob-code blob-code-inner js-file-line">}}}},iFullNumbersShowPages<span class="pl-k">:</span><span class="pl-c1">5</span>,full_numbers<span class="pl-k">:</span>{<span class="pl-en">fnInit</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">oSettings</span>,<span class="pl-smi">nPaging</span>,<span class="pl-smi">fnCallbackDraw</span>){<span class="pl-k">var</span> nFirst<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>span<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1930" class="blob-num js-line-number" data-line-number="1930"></td>
        <td id="LC1930" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> nPrevious<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>span<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> nList<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>span<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1931" class="blob-num js-line-number" data-line-number="1931"></td>
        <td id="LC1931" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> nNext<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>span<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> nLast<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>span<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1932" class="blob-num js-line-number" data-line-number="1932"></td>
        <td id="LC1932" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">nFirst</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oLanguage</span>.<span class="pl-smi">oPaginate</span>.<span class="pl-smi">sFirst</span>;<span class="pl-smi">nPrevious</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oLanguage</span>.<span class="pl-smi">oPaginate</span>.<span class="pl-smi">sPrevious</span>;</td>
      </tr>
      <tr>
        <td id="L1933" class="blob-num js-line-number" data-line-number="1933"></td>
        <td id="LC1933" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">nNext</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oLanguage</span>.<span class="pl-smi">oPaginate</span>.<span class="pl-smi">sNext</span>;<span class="pl-smi">nLast</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oLanguage</span>.<span class="pl-smi">oPaginate</span>.<span class="pl-smi">sLast</span>;</td>
      </tr>
      <tr>
        <td id="L1934" class="blob-num js-line-number" data-line-number="1934"></td>
        <td id="LC1934" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> oClasses<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oClasses</span>;<span class="pl-smi">nFirst</span>.<span class="pl-c1">className</span><span class="pl-k">=</span><span class="pl-smi">oClasses</span>.<span class="pl-smi">sPageButton</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">oClasses</span>.<span class="pl-smi">sPageFirst</span>;</td>
      </tr>
      <tr>
        <td id="L1935" class="blob-num js-line-number" data-line-number="1935"></td>
        <td id="LC1935" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">nPrevious</span>.<span class="pl-c1">className</span><span class="pl-k">=</span><span class="pl-smi">oClasses</span>.<span class="pl-smi">sPageButton</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">oClasses</span>.<span class="pl-smi">sPagePrevious</span>;<span class="pl-smi">nNext</span>.<span class="pl-c1">className</span><span class="pl-k">=</span><span class="pl-smi">oClasses</span>.<span class="pl-smi">sPageButton</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">oClasses</span>.<span class="pl-smi">sPageNext</span>;</td>
      </tr>
      <tr>
        <td id="L1936" class="blob-num js-line-number" data-line-number="1936"></td>
        <td id="LC1936" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">nLast</span>.<span class="pl-c1">className</span><span class="pl-k">=</span><span class="pl-smi">oClasses</span>.<span class="pl-smi">sPageButton</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">oClasses</span>.<span class="pl-smi">sPageLast</span>;<span class="pl-smi">nPaging</span>.<span class="pl-c1">appendChild</span>(nFirst);</td>
      </tr>
      <tr>
        <td id="L1937" class="blob-num js-line-number" data-line-number="1937"></td>
        <td id="LC1937" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">nPaging</span>.<span class="pl-c1">appendChild</span>(nPrevious);<span class="pl-smi">nPaging</span>.<span class="pl-c1">appendChild</span>(nList);<span class="pl-smi">nPaging</span>.<span class="pl-c1">appendChild</span>(nNext);</td>
      </tr>
      <tr>
        <td id="L1938" class="blob-num js-line-number" data-line-number="1938"></td>
        <td id="LC1938" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">nPaging</span>.<span class="pl-c1">appendChild</span>(nLast);<span class="pl-en">$</span>(nFirst).<span class="pl-c1">click</span>(<span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oApi</span>.<span class="pl-en">_fnPageChange</span>(oSettings,<span class="pl-s"><span class="pl-pds">&quot;</span>first<span class="pl-pds">&quot;</span></span>)){<span class="pl-en">fnCallbackDraw</span>(oSettings)</td>
      </tr>
      <tr>
        <td id="L1939" class="blob-num js-line-number" data-line-number="1939"></td>
        <td id="LC1939" class="blob-code blob-code-inner js-file-line">}});<span class="pl-en">$</span>(nPrevious).<span class="pl-c1">click</span>(<span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oApi</span>.<span class="pl-en">_fnPageChange</span>(oSettings,<span class="pl-s"><span class="pl-pds">&quot;</span>previous<span class="pl-pds">&quot;</span></span>)){<span class="pl-en">fnCallbackDraw</span>(oSettings)</td>
      </tr>
      <tr>
        <td id="L1940" class="blob-num js-line-number" data-line-number="1940"></td>
        <td id="LC1940" class="blob-code blob-code-inner js-file-line">}});<span class="pl-en">$</span>(nNext).<span class="pl-c1">click</span>(<span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oApi</span>.<span class="pl-en">_fnPageChange</span>(oSettings,<span class="pl-s"><span class="pl-pds">&quot;</span>next<span class="pl-pds">&quot;</span></span>)){<span class="pl-en">fnCallbackDraw</span>(oSettings)</td>
      </tr>
      <tr>
        <td id="L1941" class="blob-num js-line-number" data-line-number="1941"></td>
        <td id="LC1941" class="blob-code blob-code-inner js-file-line">}});<span class="pl-en">$</span>(nLast).<span class="pl-c1">click</span>(<span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oApi</span>.<span class="pl-en">_fnPageChange</span>(oSettings,<span class="pl-s"><span class="pl-pds">&quot;</span>last<span class="pl-pds">&quot;</span></span>)){<span class="pl-en">fnCallbackDraw</span>(oSettings)</td>
      </tr>
      <tr>
        <td id="L1942" class="blob-num js-line-number" data-line-number="1942"></td>
        <td id="LC1942" class="blob-code blob-code-inner js-file-line">}});<span class="pl-en">$</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>span<span class="pl-pds">&quot;</span></span>,nPaging).<span class="pl-en">bind</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mousedown<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">false</span>}).<span class="pl-en">bind</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>selectstart<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">false</span></td>
      </tr>
      <tr>
        <td id="L1943" class="blob-num js-line-number" data-line-number="1943"></td>
        <td id="LC1943" class="blob-code blob-code-inner js-file-line">});<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">sTableId</span><span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-k">typeof</span> <span class="pl-smi">oSettings</span>.<span class="pl-smi">aanFeatures</span>.<span class="pl-smi">p</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>){<span class="pl-smi">nPaging</span>.<span class="pl-c1">setAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>id<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">oSettings</span>.<span class="pl-smi">sTableId</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>_paginate<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1944" class="blob-num js-line-number" data-line-number="1944"></td>
        <td id="LC1944" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">nFirst</span>.<span class="pl-c1">setAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>id<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">oSettings</span>.<span class="pl-smi">sTableId</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>_first<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">nPrevious</span>.<span class="pl-c1">setAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>id<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">oSettings</span>.<span class="pl-smi">sTableId</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>_previous<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1945" class="blob-num js-line-number" data-line-number="1945"></td>
        <td id="LC1945" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">nNext</span>.<span class="pl-c1">setAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>id<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">oSettings</span>.<span class="pl-smi">sTableId</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>_next<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">nLast</span>.<span class="pl-c1">setAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>id<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">oSettings</span>.<span class="pl-smi">sTableId</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>_last<span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L1946" class="blob-num js-line-number" data-line-number="1946"></td>
        <td id="LC1946" class="blob-code blob-code-inner js-file-line">}},<span class="pl-en">fnUpdate</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">oSettings</span>,<span class="pl-smi">fnCallbackDraw</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aanFeatures</span>.<span class="pl-smi">p</span>){<span class="pl-k">return</span></td>
      </tr>
      <tr>
        <td id="L1947" class="blob-num js-line-number" data-line-number="1947"></td>
        <td id="LC1947" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">var</span> iPageCount<span class="pl-k">=</span><span class="pl-smi">_oExt</span>.<span class="pl-smi">oPagination</span>.<span class="pl-smi">iFullNumbersShowPages</span>;<span class="pl-k">var</span> iPageCountHalf<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(iPageCount<span class="pl-k">/</span><span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L1948" class="blob-num js-line-number" data-line-number="1948"></td>
        <td id="LC1948" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> iPages<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>((<span class="pl-smi">oSettings</span>.<span class="pl-en">fnRecordsDisplay</span>())<span class="pl-k">/</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayLength</span>);<span class="pl-k">var</span> iCurrentPage<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayStart</span><span class="pl-k">/</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayLength</span>)<span class="pl-k">+</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L1949" class="blob-num js-line-number" data-line-number="1949"></td>
        <td id="LC1949" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> sList<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">var</span> iStartButton,iEndButton,i,iLen;<span class="pl-k">var</span> oClasses<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oClasses</span>;<span class="pl-k">if</span>(iPages<span class="pl-k">&lt;</span>iPageCount){iStartButton<span class="pl-k">=</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L1950" class="blob-num js-line-number" data-line-number="1950"></td>
        <td id="LC1950" class="blob-code blob-code-inner js-file-line">iEndButton<span class="pl-k">=</span>iPages}<span class="pl-k">else</span>{<span class="pl-k">if</span>(iCurrentPage<span class="pl-k">&lt;=</span>iPageCountHalf){iStartButton<span class="pl-k">=</span><span class="pl-c1">1</span>;iEndButton<span class="pl-k">=</span>iPageCount</td>
      </tr>
      <tr>
        <td id="L1951" class="blob-num js-line-number" data-line-number="1951"></td>
        <td id="LC1951" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">else</span>{<span class="pl-k">if</span>(iCurrentPage<span class="pl-k">&gt;=</span>(iPages<span class="pl-k">-</span>iPageCountHalf)){iStartButton<span class="pl-k">=</span>iPages<span class="pl-k">-</span>iPageCount<span class="pl-k">+</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L1952" class="blob-num js-line-number" data-line-number="1952"></td>
        <td id="LC1952" class="blob-code blob-code-inner js-file-line">iEndButton<span class="pl-k">=</span>iPages}<span class="pl-k">else</span>{iStartButton<span class="pl-k">=</span>iCurrentPage<span class="pl-k">-</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(iPageCount<span class="pl-k">/</span><span class="pl-c1">2</span>)<span class="pl-k">+</span><span class="pl-c1">1</span>;iEndButton<span class="pl-k">=</span>iStartButton<span class="pl-k">+</span>iPageCount<span class="pl-k">-</span><span class="pl-c1">1</span></td>
      </tr>
      <tr>
        <td id="L1953" class="blob-num js-line-number" data-line-number="1953"></td>
        <td id="LC1953" class="blob-code blob-code-inner js-file-line">}}}<span class="pl-k">for</span>(i<span class="pl-k">=</span>iStartButton;i<span class="pl-k">&lt;=</span>iEndButton;i<span class="pl-k">++</span>){<span class="pl-k">if</span>(iCurrentPage<span class="pl-k">!=</span>i){sList<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;span class=&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span><span class="pl-smi">oClasses</span>.<span class="pl-smi">sPageButton</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;&gt;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>i<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/span&gt;<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L1954" class="blob-num js-line-number" data-line-number="1954"></td>
        <td id="LC1954" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">else</span>{sList<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;span class=&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span><span class="pl-smi">oClasses</span>.<span class="pl-smi">sPageButtonActive</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;&gt;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>i<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/span&gt;<span class="pl-pds">&quot;</span></span>}}<span class="pl-k">var</span> an<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aanFeatures</span>.<span class="pl-smi">p</span>;</td>
      </tr>
      <tr>
        <td id="L1955" class="blob-num js-line-number" data-line-number="1955"></td>
        <td id="LC1955" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> anButtons,anStatic,nPaginateList;<span class="pl-k">var</span> <span class="pl-en">fnClick</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> iTarget<span class="pl-k">=</span>(<span class="pl-c1">this</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">*</span><span class="pl-c1">1</span>)<span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L1956" class="blob-num js-line-number" data-line-number="1956"></td>
        <td id="LC1956" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayStart</span><span class="pl-k">=</span>iTarget<span class="pl-k">*</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayLength</span>;<span class="pl-en">fnCallbackDraw</span>(oSettings);</td>
      </tr>
      <tr>
        <td id="L1957" class="blob-num js-line-number" data-line-number="1957"></td>
        <td id="LC1957" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">false</span>};<span class="pl-k">var</span> <span class="pl-en">fnFalse</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">false</span>};<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>,iLen<span class="pl-k">=</span><span class="pl-smi">an</span>.<span class="pl-c1">length</span>;i<span class="pl-k">&lt;</span>iLen;</td>
      </tr>
      <tr>
        <td id="L1958" class="blob-num js-line-number" data-line-number="1958"></td>
        <td id="LC1958" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">++</span>){<span class="pl-k">if</span>(an[i].<span class="pl-c1">childNodes</span>.<span class="pl-c1">length</span><span class="pl-k">===</span><span class="pl-c1">0</span>){<span class="pl-k">continue</span>}nPaginateList<span class="pl-k">=</span>an[i].<span class="pl-c1">childNodes</span>[<span class="pl-c1">2</span>];<span class="pl-smi">nPaginateList</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span>sList;</td>
      </tr>
      <tr>
        <td id="L1959" class="blob-num js-line-number" data-line-number="1959"></td>
        <td id="LC1959" class="blob-code blob-code-inner js-file-line"><span class="pl-en">$</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>span<span class="pl-pds">&quot;</span></span>,nPaginateList).<span class="pl-c1">click</span>(fnClick).<span class="pl-en">bind</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mousedown<span class="pl-pds">&quot;</span></span>,fnFalse).<span class="pl-en">bind</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>selectstart<span class="pl-pds">&quot;</span></span>,fnFalse);</td>
      </tr>
      <tr>
        <td id="L1960" class="blob-num js-line-number" data-line-number="1960"></td>
        <td id="LC1960" class="blob-code blob-code-inner js-file-line">anButtons<span class="pl-k">=</span>an[i].<span class="pl-c1">getElementsByTagName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>span<span class="pl-pds">&quot;</span></span>);anStatic<span class="pl-k">=</span>[anButtons[<span class="pl-c1">0</span>],anButtons[<span class="pl-c1">1</span>],anButtons[<span class="pl-smi">anButtons</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">2</span>],anButtons[<span class="pl-smi">anButtons</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]];</td>
      </tr>
      <tr>
        <td id="L1961" class="blob-num js-line-number" data-line-number="1961"></td>
        <td id="LC1961" class="blob-code blob-code-inner js-file-line"><span class="pl-en">$</span>(anStatic).<span class="pl-en">removeClass</span>(<span class="pl-smi">oClasses</span>.<span class="pl-smi">sPageButton</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">oClasses</span>.<span class="pl-smi">sPageButtonActive</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">oClasses</span>.<span class="pl-smi">sPageButtonStaticDisabled</span>);</td>
      </tr>
      <tr>
        <td id="L1962" class="blob-num js-line-number" data-line-number="1962"></td>
        <td id="LC1962" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(iCurrentPage<span class="pl-k">==</span><span class="pl-c1">1</span>){anStatic[<span class="pl-c1">0</span>].<span class="pl-c1">className</span><span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">oClasses</span>.<span class="pl-smi">sPageButtonStaticDisabled</span>;</td>
      </tr>
      <tr>
        <td id="L1963" class="blob-num js-line-number" data-line-number="1963"></td>
        <td id="LC1963" class="blob-code blob-code-inner js-file-line">anStatic[<span class="pl-c1">1</span>].<span class="pl-c1">className</span><span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">oClasses</span>.<span class="pl-smi">sPageButtonStaticDisabled</span>}<span class="pl-k">else</span>{anStatic[<span class="pl-c1">0</span>].<span class="pl-c1">className</span><span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">oClasses</span>.<span class="pl-smi">sPageButton</span>;</td>
      </tr>
      <tr>
        <td id="L1964" class="blob-num js-line-number" data-line-number="1964"></td>
        <td id="LC1964" class="blob-code blob-code-inner js-file-line">anStatic[<span class="pl-c1">1</span>].<span class="pl-c1">className</span><span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">oClasses</span>.<span class="pl-smi">sPageButton</span>}<span class="pl-k">if</span>(iPages<span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">||</span>iCurrentPage<span class="pl-k">==</span>iPages<span class="pl-k">||</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayLength</span><span class="pl-k">==</span><span class="pl-k">-</span><span class="pl-c1">1</span>){anStatic[<span class="pl-c1">2</span>].<span class="pl-c1">className</span><span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">oClasses</span>.<span class="pl-smi">sPageButtonStaticDisabled</span>;</td>
      </tr>
      <tr>
        <td id="L1965" class="blob-num js-line-number" data-line-number="1965"></td>
        <td id="LC1965" class="blob-code blob-code-inner js-file-line">anStatic[<span class="pl-c1">3</span>].<span class="pl-c1">className</span><span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">oClasses</span>.<span class="pl-smi">sPageButtonStaticDisabled</span>}<span class="pl-k">else</span>{anStatic[<span class="pl-c1">2</span>].<span class="pl-c1">className</span><span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">oClasses</span>.<span class="pl-smi">sPageButton</span>;</td>
      </tr>
      <tr>
        <td id="L1966" class="blob-num js-line-number" data-line-number="1966"></td>
        <td id="LC1966" class="blob-code blob-code-inner js-file-line">anStatic[<span class="pl-c1">3</span>].<span class="pl-c1">className</span><span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">oClasses</span>.<span class="pl-smi">sPageButton</span>}}}}};<span class="pl-smi">_oExt</span>.<span class="pl-smi">oSort</span><span class="pl-k">=</span>{<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-en">string-asc</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> x<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">toLowerCase</span>();</td>
      </tr>
      <tr>
        <td id="L1967" class="blob-num js-line-number" data-line-number="1967"></td>
        <td id="LC1967" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> y<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">toLowerCase</span>();<span class="pl-k">return</span>((x<span class="pl-k">&lt;</span>y)<span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span>((x<span class="pl-k">&gt;</span>y)<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>))},<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-en">string-desc</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> x<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">toLowerCase</span>();</td>
      </tr>
      <tr>
        <td id="L1968" class="blob-num js-line-number" data-line-number="1968"></td>
        <td id="LC1968" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> y<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">toLowerCase</span>();<span class="pl-k">return</span>((x<span class="pl-k">&lt;</span>y)<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span>((x<span class="pl-k">&gt;</span>y)<span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>))},<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-en">html-asc</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> x<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;<span class="pl-c1">.</span><span class="pl-k">*?</span>&gt;<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">toLowerCase</span>();</td>
      </tr>
      <tr>
        <td id="L1969" class="blob-num js-line-number" data-line-number="1969"></td>
        <td id="LC1969" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> y<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;<span class="pl-c1">.</span><span class="pl-k">*?</span>&gt;<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">toLowerCase</span>();<span class="pl-k">return</span>((x<span class="pl-k">&lt;</span>y)<span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span>((x<span class="pl-k">&gt;</span>y)<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>))},<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-en">html-desc</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> x<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;<span class="pl-c1">.</span><span class="pl-k">*?</span>&gt;<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">toLowerCase</span>();</td>
      </tr>
      <tr>
        <td id="L1970" class="blob-num js-line-number" data-line-number="1970"></td>
        <td id="LC1970" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> y<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;<span class="pl-c1">.</span><span class="pl-k">*?</span>&gt;<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">toLowerCase</span>();<span class="pl-k">return</span>((x<span class="pl-k">&lt;</span>y)<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span>((x<span class="pl-k">&gt;</span>y)<span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>))},<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-en">date-asc</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> x<span class="pl-k">=</span><span class="pl-c1">Date</span>.<span class="pl-c1">parse</span>(a);</td>
      </tr>
      <tr>
        <td id="L1971" class="blob-num js-line-number" data-line-number="1971"></td>
        <td id="LC1971" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> y<span class="pl-k">=</span><span class="pl-c1">Date</span>.<span class="pl-c1">parse</span>(b);<span class="pl-k">if</span>(<span class="pl-c1">isNaN</span>(x)){x<span class="pl-k">=</span><span class="pl-c1">Date</span>.<span class="pl-c1">parse</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>01/01/1970 00:00:00<span class="pl-pds">&quot;</span></span>)}<span class="pl-k">if</span>(<span class="pl-c1">isNaN</span>(y)){y<span class="pl-k">=</span><span class="pl-c1">Date</span>.<span class="pl-c1">parse</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>01/01/1970 00:00:00<span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L1972" class="blob-num js-line-number" data-line-number="1972"></td>
        <td id="LC1972" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">return</span> x<span class="pl-k">-</span>y},<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-en">date-desc</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> x<span class="pl-k">=</span><span class="pl-c1">Date</span>.<span class="pl-c1">parse</span>(a);<span class="pl-k">var</span> y<span class="pl-k">=</span><span class="pl-c1">Date</span>.<span class="pl-c1">parse</span>(b);<span class="pl-k">if</span>(<span class="pl-c1">isNaN</span>(x)){x<span class="pl-k">=</span><span class="pl-c1">Date</span>.<span class="pl-c1">parse</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>01/01/1970 00:00:00<span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L1973" class="blob-num js-line-number" data-line-number="1973"></td>
        <td id="LC1973" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">if</span>(<span class="pl-c1">isNaN</span>(y)){y<span class="pl-k">=</span><span class="pl-c1">Date</span>.<span class="pl-c1">parse</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>01/01/1970 00:00:00<span class="pl-pds">&quot;</span></span>)}<span class="pl-k">return</span> y<span class="pl-k">-</span>x},<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-en">numeric-asc</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> x<span class="pl-k">=</span>a<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>a;</td>
      </tr>
      <tr>
        <td id="L1974" class="blob-num js-line-number" data-line-number="1974"></td>
        <td id="LC1974" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> y<span class="pl-k">=</span>b<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>b;<span class="pl-k">return</span> x<span class="pl-k">-</span>y},<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-en">numeric-desc</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> x<span class="pl-k">=</span>a<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>a;<span class="pl-k">var</span> y<span class="pl-k">=</span>b<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>b;</td>
      </tr>
      <tr>
        <td id="L1975" class="blob-num js-line-number" data-line-number="1975"></td>
        <td id="LC1975" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> y<span class="pl-k">-</span>x}};<span class="pl-smi">_oExt</span>.<span class="pl-smi">aTypes</span><span class="pl-k">=</span>[<span class="pl-k">function</span>(<span class="pl-smi">sData</span>){<span class="pl-k">if</span>(<span class="pl-k">typeof</span> sData<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>numeric<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L1976" class="blob-num js-line-number" data-line-number="1976"></td>
        <td id="LC1976" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-smi">sData</span>.<span class="pl-smi">charAt</span><span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>){<span class="pl-k">return</span> <span class="pl-c1">null</span>}}<span class="pl-k">var</span> sValidFirstChars<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>0123456789-<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1977" class="blob-num js-line-number" data-line-number="1977"></td>
        <td id="LC1977" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> sValidChars<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>0123456789.<span class="pl-pds">&quot;</span></span>;<span class="pl-k">var</span> Char;<span class="pl-k">var</span> bDecimal<span class="pl-k">=</span><span class="pl-c1">false</span>;Char<span class="pl-k">=</span><span class="pl-smi">sData</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>);<span class="pl-k">if</span>(<span class="pl-smi">sValidFirstChars</span>.<span class="pl-c1">indexOf</span>(Char)<span class="pl-k">==</span><span class="pl-k">-</span><span class="pl-c1">1</span>){<span class="pl-k">return</span> <span class="pl-c1">null</span></td>
      </tr>
      <tr>
        <td id="L1978" class="blob-num js-line-number" data-line-number="1978"></td>
        <td id="LC1978" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">1</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">sData</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>){Char<span class="pl-k">=</span><span class="pl-smi">sData</span>.<span class="pl-c1">charAt</span>(i);<span class="pl-k">if</span>(<span class="pl-smi">sValidChars</span>.<span class="pl-c1">indexOf</span>(Char)<span class="pl-k">==</span><span class="pl-k">-</span><span class="pl-c1">1</span>){<span class="pl-k">return</span> <span class="pl-c1">null</span></td>
      </tr>
      <tr>
        <td id="L1979" class="blob-num js-line-number" data-line-number="1979"></td>
        <td id="LC1979" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">if</span>(Char<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>){<span class="pl-k">if</span>(bDecimal){<span class="pl-k">return</span> <span class="pl-c1">null</span>}bDecimal<span class="pl-k">=</span><span class="pl-c1">true</span>}}<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>numeric<span class="pl-pds">&quot;</span></span>},<span class="pl-k">function</span>(<span class="pl-smi">sData</span>){<span class="pl-k">var</span> iParse<span class="pl-k">=</span><span class="pl-c1">Date</span>.<span class="pl-c1">parse</span>(sData);</td>
      </tr>
      <tr>
        <td id="L1980" class="blob-num js-line-number" data-line-number="1980"></td>
        <td id="LC1980" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(iParse<span class="pl-k">!==</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;!</span><span class="pl-c1">isNaN</span>(iParse)){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>date<span class="pl-pds">&quot;</span></span>}<span class="pl-k">return</span> <span class="pl-c1">null</span>}];<span class="pl-smi">_oExt</span>.<span class="pl-smi">_oExternConfig</span><span class="pl-k">=</span>{iNextUnique<span class="pl-k">:</span><span class="pl-c1">0</span>};</td>
      </tr>
      <tr>
        <td id="L1981" class="blob-num js-line-number" data-line-number="1981"></td>
        <td id="LC1981" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">$</span>.<span class="pl-smi">fn</span>.<span class="pl-en">dataTable</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">oInit</span>){<span class="pl-k">function</span> <span class="pl-en">classSettings</span>(){<span class="pl-c1">this</span>.<span class="pl-en">fnRecordsTotal</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">oFeatures</span>.<span class="pl-smi">bServerSide</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_iRecordsTotal</span></td>
      </tr>
      <tr>
        <td id="L1982" class="blob-num js-line-number" data-line-number="1982"></td>
        <td id="LC1982" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">else</span>{<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">aiDisplayMaster</span>.<span class="pl-c1">length</span>}};<span class="pl-c1">this</span>.<span class="pl-en">fnRecordsDisplay</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">oFeatures</span>.<span class="pl-smi">bServerSide</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_iRecordsDisplay</span></td>
      </tr>
      <tr>
        <td id="L1983" class="blob-num js-line-number" data-line-number="1983"></td>
        <td id="LC1983" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">else</span>{<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">aiDisplay</span>.<span class="pl-c1">length</span>}};<span class="pl-c1">this</span>.<span class="pl-en">fnDisplayEnd</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">oFeatures</span>.<span class="pl-smi">bServerSide</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_iDisplayStart</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">aiDisplay</span>.<span class="pl-c1">length</span></td>
      </tr>
      <tr>
        <td id="L1984" class="blob-num js-line-number" data-line-number="1984"></td>
        <td id="LC1984" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">else</span>{<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_iDisplayEnd</span>}};<span class="pl-c1">this</span>.<span class="pl-smi">sInstance</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-smi">oFeatures</span><span class="pl-k">=</span>{bPaginate<span class="pl-k">:</span><span class="pl-c1">true</span>,bLengthChange<span class="pl-k">:</span><span class="pl-c1">true</span>,bFilter<span class="pl-k">:</span><span class="pl-c1">true</span>,bSort<span class="pl-k">:</span><span class="pl-c1">true</span>,bInfo<span class="pl-k">:</span><span class="pl-c1">true</span>,bAutoWidth<span class="pl-k">:</span><span class="pl-c1">true</span>,bProcessing<span class="pl-k">:</span><span class="pl-c1">false</span>,bSortClasses<span class="pl-k">:</span><span class="pl-c1">true</span>,bStateSave<span class="pl-k">:</span><span class="pl-c1">false</span>,bServerSide<span class="pl-k">:</span><span class="pl-c1">false</span>};</td>
      </tr>
      <tr>
        <td id="L1985" class="blob-num js-line-number" data-line-number="1985"></td>
        <td id="LC1985" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">aanFeatures</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">oLanguage</span><span class="pl-k">=</span>{sProcessing<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Processing...<span class="pl-pds">&quot;</span></span>,sLengthMenu<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Show _MENU_ entries<span class="pl-pds">&quot;</span></span>,sZeroRecords<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>No matching records found<span class="pl-pds">&quot;</span></span>,sInfo<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Showing _START_ to _END_ of _TOTAL_ entries<span class="pl-pds">&quot;</span></span>,sInfoEmpty<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Showing 0 to 0 of 0 entries<span class="pl-pds">&quot;</span></span>,sInfoFiltered<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>(filtered from _MAX_ total entries)<span class="pl-pds">&quot;</span></span>,sInfoPostFix<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,sSearch<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Search:<span class="pl-pds">&quot;</span></span>,sUrl<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,oPaginate<span class="pl-k">:</span>{sFirst<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>First<span class="pl-pds">&quot;</span></span>,sPrevious<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Previous<span class="pl-pds">&quot;</span></span>,sNext<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Next<span class="pl-pds">&quot;</span></span>,sLast<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Last<span class="pl-pds">&quot;</span></span>}};</td>
      </tr>
      <tr>
        <td id="L1986" class="blob-num js-line-number" data-line-number="1986"></td>
        <td id="LC1986" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">aoData</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">aiDisplay</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">aiDisplayMaster</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">aoColumns</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">iNextId</span><span class="pl-k">=</span><span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L1987" class="blob-num js-line-number" data-line-number="1987"></td>
        <td id="LC1987" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">asDataSearch</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">oPreviousSearch</span><span class="pl-k">=</span>{sSearch<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,bEscapeRegex<span class="pl-k">:</span><span class="pl-c1">true</span>};<span class="pl-c1">this</span>.<span class="pl-smi">aoPreSearchCols</span><span class="pl-k">=</span>[];</td>
      </tr>
      <tr>
        <td id="L1988" class="blob-num js-line-number" data-line-number="1988"></td>
        <td id="LC1988" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">aaSorting</span><span class="pl-k">=</span>[[<span class="pl-c1">0</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>asc<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">0</span>]];<span class="pl-c1">this</span>.<span class="pl-smi">aaSortingFixed</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-smi">asStripClasses</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">fnRowCallback</span><span class="pl-k">=</span><span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L1989" class="blob-num js-line-number" data-line-number="1989"></td>
        <td id="LC1989" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">fnHeaderCallback</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-smi">fnFooterCallback</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-smi">aoDrawCallback</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">fnInitComplete</span><span class="pl-k">=</span><span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L1990" class="blob-num js-line-number" data-line-number="1990"></td>
        <td id="LC1990" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">sTableId</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-smi">nTable</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-smi">iDefaultSortIndex</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">bInitialised</span><span class="pl-k">=</span><span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L1991" class="blob-num js-line-number" data-line-number="1991"></td>
        <td id="LC1991" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">aoOpenRows</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">sDom</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>lfrtip<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-smi">sPaginationType</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>two_button<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-smi">iCookieDuration</span><span class="pl-k">=</span><span class="pl-c1">60</span><span class="pl-k">*</span><span class="pl-c1">60</span><span class="pl-k">*</span><span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L1992" class="blob-num js-line-number" data-line-number="1992"></td>
        <td id="LC1992" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">sAjaxSource</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-smi">bAjaxDataGet</span><span class="pl-k">=</span><span class="pl-c1">true</span>;<span class="pl-c1">this</span>.<span class="pl-smi">fnServerData</span><span class="pl-k">=</span><span class="pl-smi">$</span>.<span class="pl-smi">getJSON</span>;<span class="pl-c1">this</span>.<span class="pl-smi">iServerDraw</span><span class="pl-k">=</span><span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L1993" class="blob-num js-line-number" data-line-number="1993"></td>
        <td id="LC1993" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">_iDisplayLength</span><span class="pl-k">=</span><span class="pl-c1">10</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_iDisplayStart</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_iDisplayEnd</span><span class="pl-k">=</span><span class="pl-c1">10</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_iRecordsTotal</span><span class="pl-k">=</span><span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L1994" class="blob-num js-line-number" data-line-number="1994"></td>
        <td id="LC1994" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">_iRecordsDisplay</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">bJUI</span><span class="pl-k">=</span><span class="pl-c1">false</span>;<span class="pl-c1">this</span>.<span class="pl-smi">oClasses</span><span class="pl-k">=</span><span class="pl-smi">_oExt</span>.<span class="pl-smi">oStdClasses</span>;<span class="pl-c1">this</span>.<span class="pl-smi">bFiltered</span><span class="pl-k">=</span><span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L1995" class="blob-num js-line-number" data-line-number="1995"></td>
        <td id="LC1995" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">bSorted</span><span class="pl-k">=</span><span class="pl-c1">false</span>}<span class="pl-c1">this</span>.<span class="pl-smi">oApi</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-en">fnDraw</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">bComplete</span>){<span class="pl-k">var</span> oSettings<span class="pl-k">=</span><span class="pl-en">_fnSettingsFromNode</span>(<span class="pl-c1">this</span>[<span class="pl-smi">_oExt</span>.<span class="pl-smi">iApiIndex</span>]);</td>
      </tr>
      <tr>
        <td id="L1996" class="blob-num js-line-number" data-line-number="1996"></td>
        <td id="LC1996" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">typeof</span> bComplete<span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>bComplete<span class="pl-k">===</span><span class="pl-c1">false</span>){<span class="pl-en">_fnCalculateEnd</span>(oSettings);<span class="pl-en">_fnDraw</span>(oSettings)</td>
      </tr>
      <tr>
        <td id="L1997" class="blob-num js-line-number" data-line-number="1997"></td>
        <td id="LC1997" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">else</span>{<span class="pl-en">_fnReDraw</span>(oSettings)}};<span class="pl-c1">this</span>.<span class="pl-en">fnFilter</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">sInput</span>,<span class="pl-smi">iColumn</span>,<span class="pl-smi">bEscapeRegex</span>){<span class="pl-k">var</span> oSettings<span class="pl-k">=</span><span class="pl-en">_fnSettingsFromNode</span>(<span class="pl-c1">this</span>[<span class="pl-smi">_oExt</span>.<span class="pl-smi">iApiIndex</span>]);</td>
      </tr>
      <tr>
        <td id="L1998" class="blob-num js-line-number" data-line-number="1998"></td>
        <td id="LC1998" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">typeof</span> bEscapeRegex<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>){bEscapeRegex<span class="pl-k">=</span><span class="pl-c1">true</span>}<span class="pl-k">if</span>(<span class="pl-k">typeof</span> iColumn<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>iColumn<span class="pl-k">===</span><span class="pl-c1">null</span>){<span class="pl-en">_fnFilterComplete</span>(oSettings,{sSearch<span class="pl-k">:</span>sInput,bEscapeRegex<span class="pl-k">:</span>bEscapeRegex},<span class="pl-c1">1</span>)</td>
      </tr>
      <tr>
        <td id="L1999" class="blob-num js-line-number" data-line-number="1999"></td>
        <td id="LC1999" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">else</span>{<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoPreSearchCols</span>[iColumn].<span class="pl-smi">sSearch</span><span class="pl-k">=</span>sInput;<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoPreSearchCols</span>[iColumn].<span class="pl-smi">bEscapeRegex</span><span class="pl-k">=</span>bEscapeRegex;</td>
      </tr>
      <tr>
        <td id="L2000" class="blob-num js-line-number" data-line-number="2000"></td>
        <td id="LC2000" class="blob-code blob-code-inner js-file-line"><span class="pl-en">_fnFilterComplete</span>(oSettings,<span class="pl-smi">oSettings</span>.<span class="pl-smi">oPreviousSearch</span>,<span class="pl-c1">1</span>)}};<span class="pl-c1">this</span>.<span class="pl-en">fnSettings</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">nNode</span>){<span class="pl-k">return</span> <span class="pl-en">_fnSettingsFromNode</span>(<span class="pl-c1">this</span>[<span class="pl-smi">_oExt</span>.<span class="pl-smi">iApiIndex</span>])</td>
      </tr>
      <tr>
        <td id="L2001" class="blob-num js-line-number" data-line-number="2001"></td>
        <td id="LC2001" class="blob-code blob-code-inner js-file-line">};<span class="pl-c1">this</span>.<span class="pl-en">fnVersionCheck</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">sVersion</span>){<span class="pl-k">var</span> <span class="pl-en">fnZPad</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">Zpad</span>,<span class="pl-smi">count</span>){<span class="pl-k">while</span>(<span class="pl-smi">Zpad</span>.<span class="pl-c1">length</span><span class="pl-k">&lt;</span>count){Zpad<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L2002" class="blob-num js-line-number" data-line-number="2002"></td>
        <td id="LC2002" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">return</span> Zpad};<span class="pl-k">var</span> aThis<span class="pl-k">=</span><span class="pl-smi">_oExt</span>.<span class="pl-smi">sVersion</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> aThat<span class="pl-k">=</span><span class="pl-smi">sVersion</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> sThis<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,sThat<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2003" class="blob-num js-line-number" data-line-number="2003"></td>
        <td id="LC2003" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>,iLen<span class="pl-k">=</span><span class="pl-smi">aThat</span>.<span class="pl-c1">length</span>;i<span class="pl-k">&lt;</span>iLen;i<span class="pl-k">++</span>){sThis<span class="pl-k">+=</span><span class="pl-en">fnZPad</span>(aThis[i],<span class="pl-c1">3</span>);sThat<span class="pl-k">+=</span><span class="pl-en">fnZPad</span>(aThat[i],<span class="pl-c1">3</span>)</td>
      </tr>
      <tr>
        <td id="L2004" class="blob-num js-line-number" data-line-number="2004"></td>
        <td id="LC2004" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">return</span> <span class="pl-c1">parseInt</span>(sThis,<span class="pl-c1">10</span>)<span class="pl-k">&gt;=</span><span class="pl-c1">parseInt</span>(sThat,<span class="pl-c1">10</span>)};<span class="pl-c1">this</span>.<span class="pl-en">fnSort</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">aaSort</span>){<span class="pl-k">var</span> oSettings<span class="pl-k">=</span><span class="pl-en">_fnSettingsFromNode</span>(<span class="pl-c1">this</span>[<span class="pl-smi">_oExt</span>.<span class="pl-smi">iApiIndex</span>]);</td>
      </tr>
      <tr>
        <td id="L2005" class="blob-num js-line-number" data-line-number="2005"></td>
        <td id="LC2005" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSorting</span><span class="pl-k">=</span>aaSort;<span class="pl-en">_fnSort</span>(oSettings)};<span class="pl-c1">this</span>.<span class="pl-en">fnSortListener</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">nNode</span>,<span class="pl-smi">iColumn</span>,<span class="pl-smi">fnCallback</span>){<span class="pl-en">_fnSortAttachListener</span>(<span class="pl-en">_fnSettingsFromNode</span>(<span class="pl-c1">this</span>[<span class="pl-smi">_oExt</span>.<span class="pl-smi">iApiIndex</span>]),nNode,iColumn,fnCallback)</td>
      </tr>
      <tr>
        <td id="L2006" class="blob-num js-line-number" data-line-number="2006"></td>
        <td id="LC2006" class="blob-code blob-code-inner js-file-line">};<span class="pl-c1">this</span>.<span class="pl-en">fnAddData</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">mData</span>,<span class="pl-smi">bRedraw</span>){<span class="pl-k">if</span>(<span class="pl-smi">mData</span>.<span class="pl-c1">length</span><span class="pl-k">===</span><span class="pl-c1">0</span>){<span class="pl-k">return</span>[]}<span class="pl-k">var</span> aiReturn<span class="pl-k">=</span>[];</td>
      </tr>
      <tr>
        <td id="L2007" class="blob-num js-line-number" data-line-number="2007"></td>
        <td id="LC2007" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> iTest;<span class="pl-k">var</span> oSettings<span class="pl-k">=</span><span class="pl-en">_fnSettingsFromNode</span>(<span class="pl-c1">this</span>[<span class="pl-smi">_oExt</span>.<span class="pl-smi">iApiIndex</span>]);<span class="pl-k">if</span>(<span class="pl-k">typeof</span> mData[<span class="pl-c1">0</span>]<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2008" class="blob-num js-line-number" data-line-number="2008"></td>
        <td id="LC2008" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">&lt;</span><span class="pl-smi">mData</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>){iTest<span class="pl-k">=</span><span class="pl-en">_fnAddData</span>(oSettings,mData[i]);<span class="pl-k">if</span>(iTest<span class="pl-k">==</span><span class="pl-k">-</span><span class="pl-c1">1</span>){<span class="pl-k">return</span> aiReturn</td>
      </tr>
      <tr>
        <td id="L2009" class="blob-num js-line-number" data-line-number="2009"></td>
        <td id="LC2009" class="blob-code blob-code-inner js-file-line">}<span class="pl-smi">aiReturn</span>.<span class="pl-c1">push</span>(iTest)}}<span class="pl-k">else</span>{iTest<span class="pl-k">=</span><span class="pl-en">_fnAddData</span>(oSettings,mData);<span class="pl-k">if</span>(iTest<span class="pl-k">==</span><span class="pl-k">-</span><span class="pl-c1">1</span>){<span class="pl-k">return</span> aiReturn</td>
      </tr>
      <tr>
        <td id="L2010" class="blob-num js-line-number" data-line-number="2010"></td>
        <td id="LC2010" class="blob-code blob-code-inner js-file-line">}<span class="pl-smi">aiReturn</span>.<span class="pl-c1">push</span>(iTest)}<span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplay</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplayMaster</span>.<span class="pl-c1">slice</span>();<span class="pl-en">_fnBuildSearchArray</span>(oSettings,<span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L2011" class="blob-num js-line-number" data-line-number="2011"></td>
        <td id="LC2011" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">typeof</span> bRedraw<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>bRedraw){<span class="pl-en">_fnReDraw</span>(oSettings)}<span class="pl-k">return</span> aiReturn};<span class="pl-c1">this</span>.<span class="pl-en">fnDeleteRow</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">mTarget</span>,<span class="pl-smi">fnCallBack</span>,<span class="pl-smi">bNullRow</span>){<span class="pl-k">var</span> oSettings<span class="pl-k">=</span><span class="pl-en">_fnSettingsFromNode</span>(<span class="pl-c1">this</span>[<span class="pl-smi">_oExt</span>.<span class="pl-smi">iApiIndex</span>]);</td>
      </tr>
      <tr>
        <td id="L2012" class="blob-num js-line-number" data-line-number="2012"></td>
        <td id="LC2012" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> i,iAODataIndex;iAODataIndex<span class="pl-k">=</span>(<span class="pl-k">typeof</span> mTarget<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span><span class="pl-en">_fnNodeToDataIndex</span>(oSettings,mTarget)<span class="pl-k">:</span>mTarget;</td>
      </tr>
      <tr>
        <td id="L2013" class="blob-num js-line-number" data-line-number="2013"></td>
        <td id="LC2013" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplayMaster</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>){<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplayMaster</span>[i]<span class="pl-k">==</span>iAODataIndex){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplayMaster</span>.<span class="pl-c1">splice</span>(i,<span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L2014" class="blob-num js-line-number" data-line-number="2014"></td>
        <td id="LC2014" class="blob-code blob-code-inner js-file-line"><span class="pl-k">break</span>}}<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplay</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>){<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplay</span>[i]<span class="pl-k">==</span>iAODataIndex){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplay</span>.<span class="pl-c1">splice</span>(i,<span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L2015" class="blob-num js-line-number" data-line-number="2015"></td>
        <td id="LC2015" class="blob-code blob-code-inner js-file-line"><span class="pl-k">break</span>}}<span class="pl-en">_fnBuildSearchArray</span>(oSettings,<span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-k">typeof</span> fnCallBack<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>){<span class="pl-smi">fnCallBack</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>)</td>
      </tr>
      <tr>
        <td id="L2016" class="blob-num js-line-number" data-line-number="2016"></td>
        <td id="LC2016" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayStart</span><span class="pl-k">&gt;=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplay</span>.<span class="pl-c1">length</span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayStart</span><span class="pl-k">-=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayLength</span>;</td>
      </tr>
      <tr>
        <td id="L2017" class="blob-num js-line-number" data-line-number="2017"></td>
        <td id="LC2017" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayStart</span><span class="pl-k">&lt;</span><span class="pl-c1">0</span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayStart</span><span class="pl-k">=</span><span class="pl-c1">0</span>}}<span class="pl-en">_fnCalculateEnd</span>(oSettings);</td>
      </tr>
      <tr>
        <td id="L2018" class="blob-num js-line-number" data-line-number="2018"></td>
        <td id="LC2018" class="blob-code blob-code-inner js-file-line"><span class="pl-en">_fnDraw</span>(oSettings);<span class="pl-k">var</span> aData<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[iAODataIndex].<span class="pl-smi">_aData</span>.<span class="pl-c1">slice</span>();<span class="pl-k">if</span>(<span class="pl-k">typeof</span> bNullRow<span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>bNullRow<span class="pl-k">===</span><span class="pl-c1">true</span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[iAODataIndex]<span class="pl-k">=</span><span class="pl-c1">null</span></td>
      </tr>
      <tr>
        <td id="L2019" class="blob-num js-line-number" data-line-number="2019"></td>
        <td id="LC2019" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">return</span> aData};<span class="pl-c1">this</span>.<span class="pl-en">fnClearTable</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">bRedraw</span>){<span class="pl-k">var</span> oSettings<span class="pl-k">=</span><span class="pl-en">_fnSettingsFromNode</span>(<span class="pl-c1">this</span>[<span class="pl-smi">_oExt</span>.<span class="pl-smi">iApiIndex</span>]);</td>
      </tr>
      <tr>
        <td id="L2020" class="blob-num js-line-number" data-line-number="2020"></td>
        <td id="LC2020" class="blob-code blob-code-inner js-file-line"><span class="pl-en">_fnClearTable</span>(oSettings);<span class="pl-k">if</span>(<span class="pl-k">typeof</span> bRedraw<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>bRedraw){<span class="pl-en">_fnDraw</span>(oSettings)</td>
      </tr>
      <tr>
        <td id="L2021" class="blob-num js-line-number" data-line-number="2021"></td>
        <td id="LC2021" class="blob-code blob-code-inner js-file-line">}};<span class="pl-c1">this</span>.<span class="pl-en">fnOpen</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">nTr</span>,<span class="pl-smi">sHtml</span>,<span class="pl-smi">sClass</span>){<span class="pl-k">var</span> oSettings<span class="pl-k">=</span><span class="pl-en">_fnSettingsFromNode</span>(<span class="pl-c1">this</span>[<span class="pl-smi">_oExt</span>.<span class="pl-smi">iApiIndex</span>]);</td>
      </tr>
      <tr>
        <td id="L2022" class="blob-num js-line-number" data-line-number="2022"></td>
        <td id="LC2022" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">fnClose</span>(nTr);<span class="pl-k">var</span> nNewRow<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tr<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> nNewCell<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>td<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2023" class="blob-num js-line-number" data-line-number="2023"></td>
        <td id="LC2023" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">nNewRow</span>.<span class="pl-c1">appendChild</span>(nNewCell);<span class="pl-smi">nNewCell</span>.<span class="pl-c1">className</span><span class="pl-k">=</span>sClass;<span class="pl-smi">nNewCell</span>.<span class="pl-c1">colSpan</span><span class="pl-k">=</span><span class="pl-en">_fnVisbleColumns</span>(oSettings);</td>
      </tr>
      <tr>
        <td id="L2024" class="blob-num js-line-number" data-line-number="2024"></td>
        <td id="LC2024" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">nNewCell</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span>sHtml;<span class="pl-k">var</span> nTrs<span class="pl-k">=</span><span class="pl-en">$</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tbody tr<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">oSettings</span>.<span class="pl-smi">nTable</span>);<span class="pl-k">if</span>(<span class="pl-smi">$</span>.<span class="pl-en">inArray</span>(nTr,nTrs)<span class="pl-k">!=</span><span class="pl-k">-</span><span class="pl-c1">1</span>){<span class="pl-en">$</span>(nNewRow).<span class="pl-en">insertAfter</span>(nTr)</td>
      </tr>
      <tr>
        <td id="L2025" class="blob-num js-line-number" data-line-number="2025"></td>
        <td id="LC2025" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>.<span class="pl-smi">bServerSide</span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoOpenRows</span>.<span class="pl-c1">push</span>({nTr<span class="pl-k">:</span>nNewRow,nParent<span class="pl-k">:</span>nTr})</td>
      </tr>
      <tr>
        <td id="L2026" class="blob-num js-line-number" data-line-number="2026"></td>
        <td id="LC2026" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">return</span> nNewRow};<span class="pl-c1">this</span>.<span class="pl-en">fnClose</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">nTr</span>){<span class="pl-k">var</span> oSettings<span class="pl-k">=</span><span class="pl-en">_fnSettingsFromNode</span>(<span class="pl-c1">this</span>[<span class="pl-smi">_oExt</span>.<span class="pl-smi">iApiIndex</span>]);</td>
      </tr>
      <tr>
        <td id="L2027" class="blob-num js-line-number" data-line-number="2027"></td>
        <td id="LC2027" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoOpenRows</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>){<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoOpenRows</span>[i].<span class="pl-smi">nParent</span><span class="pl-k">==</span>nTr){<span class="pl-k">var</span> nTrParent<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoOpenRows</span>[i].<span class="pl-smi">nTr</span>.<span class="pl-c1">parentNode</span>;</td>
      </tr>
      <tr>
        <td id="L2028" class="blob-num js-line-number" data-line-number="2028"></td>
        <td id="LC2028" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(nTrParent){<span class="pl-smi">nTrParent</span>.<span class="pl-c1">removeChild</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoOpenRows</span>[i].<span class="pl-smi">nTr</span>)}<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoOpenRows</span>.<span class="pl-c1">splice</span>(i,<span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L2029" class="blob-num js-line-number" data-line-number="2029"></td>
        <td id="LC2029" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">0</span>}}<span class="pl-k">return</span> <span class="pl-c1">1</span>};<span class="pl-c1">this</span>.<span class="pl-en">fnGetData</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">mRow</span>){<span class="pl-k">var</span> oSettings<span class="pl-k">=</span><span class="pl-en">_fnSettingsFromNode</span>(<span class="pl-c1">this</span>[<span class="pl-smi">_oExt</span>.<span class="pl-smi">iApiIndex</span>]);</td>
      </tr>
      <tr>
        <td id="L2030" class="blob-num js-line-number" data-line-number="2030"></td>
        <td id="LC2030" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">typeof</span> mRow<span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>){<span class="pl-k">var</span> iRow<span class="pl-k">=</span>(<span class="pl-k">typeof</span> mRow<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span><span class="pl-en">_fnNodeToDataIndex</span>(oSettings,mRow)<span class="pl-k">:</span>mRow;</td>
      </tr>
      <tr>
        <td id="L2031" class="blob-num js-line-number" data-line-number="2031"></td>
        <td id="LC2031" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[iRow].<span class="pl-smi">_aData</span>}<span class="pl-k">return</span> <span class="pl-en">_fnGetDataMaster</span>(oSettings)};<span class="pl-c1">this</span>.<span class="pl-en">fnGetNodes</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">iRow</span>){<span class="pl-k">var</span> oSettings<span class="pl-k">=</span><span class="pl-en">_fnSettingsFromNode</span>(<span class="pl-c1">this</span>[<span class="pl-smi">_oExt</span>.<span class="pl-smi">iApiIndex</span>]);</td>
      </tr>
      <tr>
        <td id="L2032" class="blob-num js-line-number" data-line-number="2032"></td>
        <td id="LC2032" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">typeof</span> iRow<span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>){<span class="pl-k">return</span> <span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[iRow].<span class="pl-smi">nTr</span>}<span class="pl-k">return</span> <span class="pl-en">_fnGetTrNodes</span>(oSettings)</td>
      </tr>
      <tr>
        <td id="L2033" class="blob-num js-line-number" data-line-number="2033"></td>
        <td id="LC2033" class="blob-code blob-code-inner js-file-line">};<span class="pl-c1">this</span>.<span class="pl-en">fnGetPosition</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">nNode</span>){<span class="pl-k">var</span> oSettings<span class="pl-k">=</span><span class="pl-en">_fnSettingsFromNode</span>(<span class="pl-c1">this</span>[<span class="pl-smi">_oExt</span>.<span class="pl-smi">iApiIndex</span>]);</td>
      </tr>
      <tr>
        <td id="L2034" class="blob-num js-line-number" data-line-number="2034"></td>
        <td id="LC2034" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> i;<span class="pl-k">if</span>(<span class="pl-smi">nNode</span>.<span class="pl-c1">nodeName</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>TR<span class="pl-pds">&quot;</span></span>){<span class="pl-k">return</span> <span class="pl-en">_fnNodeToDataIndex</span>(oSettings,nNode)}<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-smi">nNode</span>.<span class="pl-c1">nodeName</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>TD<span class="pl-pds">&quot;</span></span>){<span class="pl-k">var</span> iDataIndex<span class="pl-k">=</span><span class="pl-en">_fnNodeToDataIndex</span>(oSettings,<span class="pl-smi">nNode</span>.<span class="pl-c1">parentNode</span>);</td>
      </tr>
      <tr>
        <td id="L2035" class="blob-num js-line-number" data-line-number="2035"></td>
        <td id="LC2035" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> iCorrector<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-c1">0</span>;j<span class="pl-k">&lt;</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>.<span class="pl-c1">length</span>;j<span class="pl-k">++</span>){<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[j].<span class="pl-smi">bVisible</span>){<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[iDataIndex].<span class="pl-smi">nTr</span>.<span class="pl-c1">getElementsByTagName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>td<span class="pl-pds">&quot;</span></span>)[j<span class="pl-k">-</span>iCorrector]<span class="pl-k">==</span>nNode){<span class="pl-k">return</span>[iDataIndex,j<span class="pl-k">-</span>iCorrector,j]</td>
      </tr>
      <tr>
        <td id="L2036" class="blob-num js-line-number" data-line-number="2036"></td>
        <td id="LC2036" class="blob-code blob-code-inner js-file-line">}}<span class="pl-k">else</span>{iCorrector<span class="pl-k">++</span>}}}}<span class="pl-k">return</span> <span class="pl-c1">null</span>};<span class="pl-c1">this</span>.<span class="pl-en">fnUpdate</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">mData</span>,<span class="pl-smi">mRow</span>,<span class="pl-smi">iColumn</span>,<span class="pl-smi">bRedraw</span>){<span class="pl-k">var</span> oSettings<span class="pl-k">=</span><span class="pl-en">_fnSettingsFromNode</span>(<span class="pl-c1">this</span>[<span class="pl-smi">_oExt</span>.<span class="pl-smi">iApiIndex</span>]);</td>
      </tr>
      <tr>
        <td id="L2037" class="blob-num js-line-number" data-line-number="2037"></td>
        <td id="LC2037" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> iVisibleColumn;<span class="pl-k">var</span> sDisplay;<span class="pl-k">var</span> iRow<span class="pl-k">=</span>(<span class="pl-k">typeof</span> mRow<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span><span class="pl-en">_fnNodeToDataIndex</span>(oSettings,mRow)<span class="pl-k">:</span>mRow;</td>
      </tr>
      <tr>
        <td id="L2038" class="blob-num js-line-number" data-line-number="2038"></td>
        <td id="LC2038" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">typeof</span> mData<span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span>){sDisplay<span class="pl-k">=</span>mData;<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[iRow].<span class="pl-smi">_aData</span>[iColumn]<span class="pl-k">=</span>sDisplay;</td>
      </tr>
      <tr>
        <td id="L2039" class="blob-num js-line-number" data-line-number="2039"></td>
        <td id="LC2039" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[iColumn].<span class="pl-smi">fnRender</span><span class="pl-k">!==</span><span class="pl-c1">null</span>){sDisplay<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[iColumn].<span class="pl-en">fnRender</span>({iDataRow<span class="pl-k">:</span>iRow,iDataColumn<span class="pl-k">:</span>iColumn,aData<span class="pl-k">:</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[iRow].<span class="pl-smi">_aData</span>,oSettings<span class="pl-k">:</span>oSettings});</td>
      </tr>
      <tr>
        <td id="L2040" class="blob-num js-line-number" data-line-number="2040"></td>
        <td id="LC2040" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[iColumn].<span class="pl-smi">bUseRendered</span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[iRow].<span class="pl-smi">_aData</span>[iColumn]<span class="pl-k">=</span>sDisplay</td>
      </tr>
      <tr>
        <td id="L2041" class="blob-num js-line-number" data-line-number="2041"></td>
        <td id="LC2041" class="blob-code blob-code-inner js-file-line">}}iVisibleColumn<span class="pl-k">=</span><span class="pl-en">_fnColumnIndexToVisible</span>(oSettings,iColumn);<span class="pl-k">if</span>(iVisibleColumn<span class="pl-k">!==</span><span class="pl-c1">null</span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[iRow].<span class="pl-smi">nTr</span>.<span class="pl-c1">getElementsByTagName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>td<span class="pl-pds">&quot;</span></span>)[iVisibleColumn].<span class="pl-smi">innerHTML</span><span class="pl-k">=</span>sDisplay</td>
      </tr>
      <tr>
        <td id="L2042" class="blob-num js-line-number" data-line-number="2042"></td>
        <td id="LC2042" class="blob-code blob-code-inner js-file-line">}}<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-smi">mData</span>.<span class="pl-c1">length</span><span class="pl-k">!=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>.<span class="pl-c1">length</span>){<span class="pl-en">alert</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>DataTables warning: An array passed to fnUpdate must have the same number of columns as the table in question - in this case <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>.<span class="pl-c1">length</span>);</td>
      </tr>
      <tr>
        <td id="L2043" class="blob-num js-line-number" data-line-number="2043"></td>
        <td id="LC2043" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">1</span>}<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">mData</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>){sDisplay<span class="pl-k">=</span>mData[i];<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[iRow].<span class="pl-smi">_aData</span>[i]<span class="pl-k">=</span>sDisplay;</td>
      </tr>
      <tr>
        <td id="L2044" class="blob-num js-line-number" data-line-number="2044"></td>
        <td id="LC2044" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">fnRender</span><span class="pl-k">!==</span><span class="pl-c1">null</span>){sDisplay<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-en">fnRender</span>({iDataRow<span class="pl-k">:</span>iRow,iDataColumn<span class="pl-k">:</span>i,aData<span class="pl-k">:</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[iRow].<span class="pl-smi">_aData</span>,oSettings<span class="pl-k">:</span>oSettings});</td>
      </tr>
      <tr>
        <td id="L2045" class="blob-num js-line-number" data-line-number="2045"></td>
        <td id="LC2045" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">bUseRendered</span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[iRow].<span class="pl-smi">_aData</span>[i]<span class="pl-k">=</span>sDisplay</td>
      </tr>
      <tr>
        <td id="L2046" class="blob-num js-line-number" data-line-number="2046"></td>
        <td id="LC2046" class="blob-code blob-code-inner js-file-line">}}iVisibleColumn<span class="pl-k">=</span><span class="pl-en">_fnColumnIndexToVisible</span>(oSettings,i);<span class="pl-k">if</span>(iVisibleColumn<span class="pl-k">!==</span><span class="pl-c1">null</span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[iRow].<span class="pl-smi">nTr</span>.<span class="pl-c1">getElementsByTagName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>td<span class="pl-pds">&quot;</span></span>)[iVisibleColumn].<span class="pl-smi">innerHTML</span><span class="pl-k">=</span>sDisplay</td>
      </tr>
      <tr>
        <td id="L2047" class="blob-num js-line-number" data-line-number="2047"></td>
        <td id="LC2047" class="blob-code blob-code-inner js-file-line">}}}<span class="pl-en">_fnBuildSearchArray</span>(oSettings,<span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-k">typeof</span> bRedraw<span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>bRedraw){<span class="pl-en">_fnReDraw</span>(oSettings)</td>
      </tr>
      <tr>
        <td id="L2048" class="blob-num js-line-number" data-line-number="2048"></td>
        <td id="LC2048" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">return</span> <span class="pl-c1">0</span>};<span class="pl-c1">this</span>.<span class="pl-en">fnSetColumnVis</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">iCol</span>,<span class="pl-smi">bShow</span>){<span class="pl-k">var</span> oSettings<span class="pl-k">=</span><span class="pl-en">_fnSettingsFromNode</span>(<span class="pl-c1">this</span>[<span class="pl-smi">_oExt</span>.<span class="pl-smi">iApiIndex</span>]);</td>
      </tr>
      <tr>
        <td id="L2049" class="blob-num js-line-number" data-line-number="2049"></td>
        <td id="LC2049" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> i,iLen;<span class="pl-k">var</span> iColumns<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>.<span class="pl-c1">length</span>;<span class="pl-k">var</span> nTd,anTds;<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[iCol].<span class="pl-smi">bVisible</span><span class="pl-k">==</span>bShow){<span class="pl-k">return</span></td>
      </tr>
      <tr>
        <td id="L2050" class="blob-num js-line-number" data-line-number="2050"></td>
        <td id="LC2050" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">var</span> nTrHead<span class="pl-k">=</span><span class="pl-en">$</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>thead:eq(0)&gt;tr<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">oSettings</span>.<span class="pl-smi">nTable</span>)[<span class="pl-c1">0</span>];<span class="pl-k">var</span> nTrFoot<span class="pl-k">=</span><span class="pl-en">$</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tfoot:eq(0)&gt;tr<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">oSettings</span>.<span class="pl-smi">nTable</span>)[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L2051" class="blob-num js-line-number" data-line-number="2051"></td>
        <td id="LC2051" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> anTheadTh<span class="pl-k">=</span>[];<span class="pl-k">var</span> anTfootTh<span class="pl-k">=</span>[];<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>iColumns;i<span class="pl-k">++</span>){<span class="pl-smi">anTheadTh</span>.<span class="pl-c1">push</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">nTh</span>);</td>
      </tr>
      <tr>
        <td id="L2052" class="blob-num js-line-number" data-line-number="2052"></td>
        <td id="LC2052" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">anTfootTh</span>.<span class="pl-c1">push</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">nTf</span>)}<span class="pl-k">if</span>(bShow){<span class="pl-k">var</span> iInsert<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>iCol;</td>
      </tr>
      <tr>
        <td id="L2053" class="blob-num js-line-number" data-line-number="2053"></td>
        <td id="LC2053" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">++</span>){<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">bVisible</span>){iInsert<span class="pl-k">++</span>}}<span class="pl-k">if</span>(iInsert<span class="pl-k">&gt;=</span><span class="pl-en">_fnVisbleColumns</span>(oSettings)){<span class="pl-smi">nTrHead</span>.<span class="pl-c1">appendChild</span>(anTheadTh[iCol]);</td>
      </tr>
      <tr>
        <td id="L2054" class="blob-num js-line-number" data-line-number="2054"></td>
        <td id="LC2054" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(nTrFoot){<span class="pl-smi">nTrFoot</span>.<span class="pl-c1">appendChild</span>(anTfootTh[iCol])}<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>,iLen<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2055" class="blob-num js-line-number" data-line-number="2055"></td>
        <td id="LC2055" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">&lt;</span>iLen;i<span class="pl-k">++</span>){nTd<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[i].<span class="pl-smi">_anHidden</span>[iCol];<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[i].<span class="pl-smi">nTr</span>.<span class="pl-c1">appendChild</span>(nTd)</td>
      </tr>
      <tr>
        <td id="L2056" class="blob-num js-line-number" data-line-number="2056"></td>
        <td id="LC2056" class="blob-code blob-code-inner js-file-line">}}<span class="pl-k">else</span>{<span class="pl-k">var</span> iBefore;<span class="pl-k">for</span>(i<span class="pl-k">=</span>iCol;i<span class="pl-k">&lt;</span>iColumns;i<span class="pl-k">++</span>){iBefore<span class="pl-k">=</span><span class="pl-en">_fnColumnIndexToVisible</span>(oSettings,i);</td>
      </tr>
      <tr>
        <td id="L2057" class="blob-num js-line-number" data-line-number="2057"></td>
        <td id="LC2057" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(iBefore<span class="pl-k">!==</span><span class="pl-c1">null</span>){<span class="pl-k">break</span>}}<span class="pl-smi">nTrHead</span>.<span class="pl-c1">insertBefore</span>(anTheadTh[iCol],<span class="pl-smi">nTrHead</span>.<span class="pl-c1">getElementsByTagName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>th<span class="pl-pds">&quot;</span></span>)[iBefore]);</td>
      </tr>
      <tr>
        <td id="L2058" class="blob-num js-line-number" data-line-number="2058"></td>
        <td id="LC2058" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(nTrFoot){<span class="pl-smi">nTrFoot</span>.<span class="pl-c1">insertBefore</span>(anTfootTh[iCol],<span class="pl-smi">nTrFoot</span>.<span class="pl-c1">getElementsByTagName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>th<span class="pl-pds">&quot;</span></span>)[iBefore])</td>
      </tr>
      <tr>
        <td id="L2059" class="blob-num js-line-number" data-line-number="2059"></td>
        <td id="LC2059" class="blob-code blob-code-inner js-file-line">}anTds<span class="pl-k">=</span><span class="pl-en">_fnGetTdNodes</span>(oSettings);<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>,iLen<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>.<span class="pl-c1">length</span>;i<span class="pl-k">&lt;</span>iLen;i<span class="pl-k">++</span>){nTd<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[i].<span class="pl-smi">_anHidden</span>[iCol];</td>
      </tr>
      <tr>
        <td id="L2060" class="blob-num js-line-number" data-line-number="2060"></td>
        <td id="LC2060" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[i].<span class="pl-smi">nTr</span>.<span class="pl-c1">insertBefore</span>(nTd,<span class="pl-en">$</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&gt;td:eq(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>iBefore<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[i].<span class="pl-smi">nTr</span>)[<span class="pl-c1">0</span>])</td>
      </tr>
      <tr>
        <td id="L2061" class="blob-num js-line-number" data-line-number="2061"></td>
        <td id="LC2061" class="blob-code blob-code-inner js-file-line">}}<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[iCol].<span class="pl-smi">bVisible</span><span class="pl-k">=</span><span class="pl-c1">true</span>}<span class="pl-k">else</span>{<span class="pl-smi">nTrHead</span>.<span class="pl-c1">removeChild</span>(anTheadTh[iCol]);</td>
      </tr>
      <tr>
        <td id="L2062" class="blob-num js-line-number" data-line-number="2062"></td>
        <td id="LC2062" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(nTrFoot){<span class="pl-smi">nTrFoot</span>.<span class="pl-c1">removeChild</span>(anTfootTh[iCol])}anTds<span class="pl-k">=</span><span class="pl-en">_fnGetTdNodes</span>(oSettings);<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>,iLen<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2063" class="blob-num js-line-number" data-line-number="2063"></td>
        <td id="LC2063" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">&lt;</span>iLen;i<span class="pl-k">++</span>){nTd<span class="pl-k">=</span>anTds[(i<span class="pl-k">*</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>.<span class="pl-c1">length</span>)<span class="pl-k">+</span>iCol];<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[i].<span class="pl-smi">_anHidden</span>[iCol]<span class="pl-k">=</span>nTd;</td>
      </tr>
      <tr>
        <td id="L2064" class="blob-num js-line-number" data-line-number="2064"></td>
        <td id="LC2064" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">nTd</span>.<span class="pl-c1">parentNode</span>.<span class="pl-c1">removeChild</span>(nTd)}<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[iCol].<span class="pl-smi">bVisible</span><span class="pl-k">=</span><span class="pl-c1">false</span>}<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>,iLen<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoOpenRows</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2065" class="blob-num js-line-number" data-line-number="2065"></td>
        <td id="LC2065" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">&lt;</span>iLen;i<span class="pl-k">++</span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoOpenRows</span>[i].<span class="pl-smi">nTr</span>.<span class="pl-c1">colSpan</span><span class="pl-k">=</span><span class="pl-en">_fnVisbleColumns</span>(oSettings)}<span class="pl-en">_fnSaveState</span>(oSettings)</td>
      </tr>
      <tr>
        <td id="L2066" class="blob-num js-line-number" data-line-number="2066"></td>
        <td id="LC2066" class="blob-code blob-code-inner js-file-line">};<span class="pl-c1">this</span>.<span class="pl-en">fnPageChange</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">sAction</span>,<span class="pl-smi">bRedraw</span>){<span class="pl-k">var</span> oSettings<span class="pl-k">=</span><span class="pl-en">_fnSettingsFromNode</span>(<span class="pl-c1">this</span>[<span class="pl-smi">_oExt</span>.<span class="pl-smi">iApiIndex</span>]);</td>
      </tr>
      <tr>
        <td id="L2067" class="blob-num js-line-number" data-line-number="2067"></td>
        <td id="LC2067" class="blob-code blob-code-inner js-file-line"><span class="pl-en">_fnPageChange</span>(oSettings,sAction);<span class="pl-en">_fnCalculateEnd</span>(oSettings);<span class="pl-k">if</span>(<span class="pl-k">typeof</span> bRedraw<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>bRedraw){<span class="pl-en">_fnDraw</span>(oSettings)</td>
      </tr>
      <tr>
        <td id="L2068" class="blob-num js-line-number" data-line-number="2068"></td>
        <td id="LC2068" class="blob-code blob-code-inner js-file-line">}};<span class="pl-k">function</span> <span class="pl-en">_fnExternApiFunc</span>(<span class="pl-smi">sFunc</span>){<span class="pl-k">return</span> <span class="pl-k">function</span>(){<span class="pl-k">var</span> aArgs<span class="pl-k">=</span>[<span class="pl-en">_fnSettingsFromNode</span>(<span class="pl-c1">this</span>[<span class="pl-smi">_oExt</span>.<span class="pl-smi">iApiIndex</span>])].<span class="pl-c1">concat</span>(<span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">slice</span>.<span class="pl-c1">call</span>(<span class="pl-c1">arguments</span>));</td>
      </tr>
      <tr>
        <td id="L2069" class="blob-num js-line-number" data-line-number="2069"></td>
        <td id="LC2069" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">_oExt</span>.<span class="pl-smi">oApi</span>[sFunc].<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>,aArgs)}}<span class="pl-k">for</span>(<span class="pl-k">var</span> sFunc <span class="pl-k">in</span> <span class="pl-smi">_oExt</span>.<span class="pl-smi">oApi</span>){<span class="pl-k">if</span>(sFunc){<span class="pl-c1">this</span>[sFunc]<span class="pl-k">=</span><span class="pl-en">_fnExternApiFunc</span>(sFunc)</td>
      </tr>
      <tr>
        <td id="L2070" class="blob-num js-line-number" data-line-number="2070"></td>
        <td id="LC2070" class="blob-code blob-code-inner js-file-line">}}function _fnInitalise(oSettings){if(oSettings.bInitialised===false){setTimeout(function(){_fnInitalise(oSettings)</td>
      </tr>
      <tr>
        <td id="L2071" class="blob-num js-line-number" data-line-number="2071"></td>
        <td id="LC2071" class="blob-code blob-code-inner js-file-line">},<span class="pl-c1">200</span>);<span class="pl-k">return</span>}<span class="pl-en">_fnAddOptionsHtml</span>(oSettings);<span class="pl-en">_fnDrawHead</span>(oSettings);<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>.<span class="pl-smi">bSort</span>){<span class="pl-en">_fnSort</span>(oSettings,<span class="pl-c1">false</span>);</td>
      </tr>
      <tr>
        <td id="L2072" class="blob-num js-line-number" data-line-number="2072"></td>
        <td id="LC2072" class="blob-code blob-code-inner js-file-line"><span class="pl-en">_fnSortingClasses</span>(oSettings)}<span class="pl-k">else</span>{<span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplay</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplayMaster</span>.<span class="pl-c1">slice</span>();</td>
      </tr>
      <tr>
        <td id="L2073" class="blob-num js-line-number" data-line-number="2073"></td>
        <td id="LC2073" class="blob-code blob-code-inner js-file-line"><span class="pl-en">_fnCalculateEnd</span>(oSettings);<span class="pl-en">_fnDraw</span>(oSettings)}<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">sAjaxSource</span><span class="pl-k">!==</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>.<span class="pl-smi">bServerSide</span>){<span class="pl-en">_fnProcessingDisplay</span>(oSettings,<span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L2074" class="blob-num js-line-number" data-line-number="2074"></td>
        <td id="LC2074" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">oSettings</span>.<span class="pl-en">fnServerData</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">sAjaxSource</span>,<span class="pl-c1">null</span>,<span class="pl-k">function</span>(<span class="pl-smi">json</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">json</span>.<span class="pl-smi">aaData</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2075" class="blob-num js-line-number" data-line-number="2075"></td>
        <td id="LC2075" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">++</span>){<span class="pl-en">_fnAddData</span>(oSettings,<span class="pl-smi">json</span>.<span class="pl-smi">aaData</span>[i])}<span class="pl-smi">oSettings</span>.<span class="pl-smi">iInitDisplayStart</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayStart</span>;</td>
      </tr>
      <tr>
        <td id="L2076" class="blob-num js-line-number" data-line-number="2076"></td>
        <td id="LC2076" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>.<span class="pl-smi">bSort</span>){<span class="pl-en">_fnSort</span>(oSettings)}<span class="pl-k">else</span>{<span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplay</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplayMaster</span>.<span class="pl-c1">slice</span>();</td>
      </tr>
      <tr>
        <td id="L2077" class="blob-num js-line-number" data-line-number="2077"></td>
        <td id="LC2077" class="blob-code blob-code-inner js-file-line"><span class="pl-en">_fnCalculateEnd</span>(oSettings);<span class="pl-en">_fnDraw</span>(oSettings)}<span class="pl-en">_fnProcessingDisplay</span>(oSettings,<span class="pl-c1">false</span>);</td>
      </tr>
      <tr>
        <td id="L2078" class="blob-num js-line-number" data-line-number="2078"></td>
        <td id="LC2078" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-smi">oSettings</span>.<span class="pl-smi">fnInitComplete</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>){<span class="pl-smi">oSettings</span>.<span class="pl-en">fnInitComplete</span>(oSettings,json)</td>
      </tr>
      <tr>
        <td id="L2079" class="blob-num js-line-number" data-line-number="2079"></td>
        <td id="LC2079" class="blob-code blob-code-inner js-file-line">}});<span class="pl-k">return</span>}<span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-smi">oSettings</span>.<span class="pl-smi">fnInitComplete</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>){<span class="pl-smi">oSettings</span>.<span class="pl-en">fnInitComplete</span>(oSettings)</td>
      </tr>
      <tr>
        <td id="L2080" class="blob-num js-line-number" data-line-number="2080"></td>
        <td id="LC2080" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>.<span class="pl-smi">bServerSide</span>){<span class="pl-en">_fnProcessingDisplay</span>(oSettings,<span class="pl-c1">false</span>)}}function _fnLanguageProcess(oSettings,oLanguage,bInit){_fnMap(oSettings.oLanguage,oLanguage,&quot;sProcessing&quot;);</td>
      </tr>
      <tr>
        <td id="L2081" class="blob-num js-line-number" data-line-number="2081"></td>
        <td id="LC2081" class="blob-code blob-code-inner js-file-line"><span class="pl-en">_fnMap</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oLanguage</span>,oLanguage,<span class="pl-s"><span class="pl-pds">&quot;</span>sLengthMenu<span class="pl-pds">&quot;</span></span>);<span class="pl-en">_fnMap</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oLanguage</span>,oLanguage,<span class="pl-s"><span class="pl-pds">&quot;</span>sZeroRecords<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2082" class="blob-num js-line-number" data-line-number="2082"></td>
        <td id="LC2082" class="blob-code blob-code-inner js-file-line"><span class="pl-en">_fnMap</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oLanguage</span>,oLanguage,<span class="pl-s"><span class="pl-pds">&quot;</span>sInfo<span class="pl-pds">&quot;</span></span>);<span class="pl-en">_fnMap</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oLanguage</span>,oLanguage,<span class="pl-s"><span class="pl-pds">&quot;</span>sInfoEmpty<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2083" class="blob-num js-line-number" data-line-number="2083"></td>
        <td id="LC2083" class="blob-code blob-code-inner js-file-line"><span class="pl-en">_fnMap</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oLanguage</span>,oLanguage,<span class="pl-s"><span class="pl-pds">&quot;</span>sInfoFiltered<span class="pl-pds">&quot;</span></span>);<span class="pl-en">_fnMap</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oLanguage</span>,oLanguage,<span class="pl-s"><span class="pl-pds">&quot;</span>sInfoPostFix<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2084" class="blob-num js-line-number" data-line-number="2084"></td>
        <td id="LC2084" class="blob-code blob-code-inner js-file-line"><span class="pl-en">_fnMap</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oLanguage</span>,oLanguage,<span class="pl-s"><span class="pl-pds">&quot;</span>sSearch<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-smi">oLanguage</span>.<span class="pl-smi">oPaginate</span><span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>){<span class="pl-en">_fnMap</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oLanguage</span>.<span class="pl-smi">oPaginate</span>,<span class="pl-smi">oLanguage</span>.<span class="pl-smi">oPaginate</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>sFirst<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2085" class="blob-num js-line-number" data-line-number="2085"></td>
        <td id="LC2085" class="blob-code blob-code-inner js-file-line"><span class="pl-en">_fnMap</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oLanguage</span>.<span class="pl-smi">oPaginate</span>,<span class="pl-smi">oLanguage</span>.<span class="pl-smi">oPaginate</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>sPrevious<span class="pl-pds">&quot;</span></span>);<span class="pl-en">_fnMap</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oLanguage</span>.<span class="pl-smi">oPaginate</span>,<span class="pl-smi">oLanguage</span>.<span class="pl-smi">oPaginate</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>sNext<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2086" class="blob-num js-line-number" data-line-number="2086"></td>
        <td id="LC2086" class="blob-code blob-code-inner js-file-line"><span class="pl-en">_fnMap</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oLanguage</span>.<span class="pl-smi">oPaginate</span>,<span class="pl-smi">oLanguage</span>.<span class="pl-smi">oPaginate</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>sLast<span class="pl-pds">&quot;</span></span>)}<span class="pl-k">if</span>(bInit){<span class="pl-en">_fnInitalise</span>(oSettings)</td>
      </tr>
      <tr>
        <td id="L2087" class="blob-num js-line-number" data-line-number="2087"></td>
        <td id="LC2087" class="blob-code blob-code-inner js-file-line">}}function _fnAddColumn(oSettings,oOptions,nTh){oSettings.aoColumns[oSettings.aoColumns.length++]={sType:null,_bAutoType:true,bVisible:true,bSearchable:true,bSortable:true,asSorting:[&quot;asc&quot;,&quot;desc&quot;],sSortingClass:oSettings.oClasses.sSortable,sSortingClassJUI:oSettings.oClasses.sSortJUI,sTitle:nTh?nTh.innerHTML:&quot;&quot;,sName:&quot;&quot;,sWidth:null,sClass:null,fnRender:null,bUseRendered:true,iDataSort:oSettings.aoColumns.length-1,sSortDataType:&quot;std&quot;,nTh:nTh?nTh:document.createElement(&quot;th&quot;),nTf:null};</td>
      </tr>
      <tr>
        <td id="L2088" class="blob-num js-line-number" data-line-number="2088"></td>
        <td id="LC2088" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> iLength<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-k">var</span> oCol<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[iLength];<span class="pl-k">if</span>(<span class="pl-k">typeof</span> oOptions<span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>oOptions<span class="pl-k">!==</span><span class="pl-c1">null</span>){<span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-smi">oOptions</span>.<span class="pl-smi">sType</span><span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>){<span class="pl-smi">oCol</span>.<span class="pl-smi">sType</span><span class="pl-k">=</span><span class="pl-smi">oOptions</span>.<span class="pl-smi">sType</span>;</td>
      </tr>
      <tr>
        <td id="L2089" class="blob-num js-line-number" data-line-number="2089"></td>
        <td id="LC2089" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">oCol</span>.<span class="pl-smi">_bAutoType</span><span class="pl-k">=</span><span class="pl-c1">false</span>}<span class="pl-en">_fnMap</span>(oCol,oOptions,<span class="pl-s"><span class="pl-pds">&quot;</span>bVisible<span class="pl-pds">&quot;</span></span>);<span class="pl-en">_fnMap</span>(oCol,oOptions,<span class="pl-s"><span class="pl-pds">&quot;</span>bSearchable<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2090" class="blob-num js-line-number" data-line-number="2090"></td>
        <td id="LC2090" class="blob-code blob-code-inner js-file-line"><span class="pl-en">_fnMap</span>(oCol,oOptions,<span class="pl-s"><span class="pl-pds">&quot;</span>bSortable<span class="pl-pds">&quot;</span></span>);<span class="pl-en">_fnMap</span>(oCol,oOptions,<span class="pl-s"><span class="pl-pds">&quot;</span>sTitle<span class="pl-pds">&quot;</span></span>);<span class="pl-en">_fnMap</span>(oCol,oOptions,<span class="pl-s"><span class="pl-pds">&quot;</span>sName<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2091" class="blob-num js-line-number" data-line-number="2091"></td>
        <td id="LC2091" class="blob-code blob-code-inner js-file-line"><span class="pl-en">_fnMap</span>(oCol,oOptions,<span class="pl-s"><span class="pl-pds">&quot;</span>sWidth<span class="pl-pds">&quot;</span></span>);<span class="pl-en">_fnMap</span>(oCol,oOptions,<span class="pl-s"><span class="pl-pds">&quot;</span>sClass<span class="pl-pds">&quot;</span></span>);<span class="pl-en">_fnMap</span>(oCol,oOptions,<span class="pl-s"><span class="pl-pds">&quot;</span>fnRender<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2092" class="blob-num js-line-number" data-line-number="2092"></td>
        <td id="LC2092" class="blob-code blob-code-inner js-file-line"><span class="pl-en">_fnMap</span>(oCol,oOptions,<span class="pl-s"><span class="pl-pds">&quot;</span>bUseRendered<span class="pl-pds">&quot;</span></span>);<span class="pl-en">_fnMap</span>(oCol,oOptions,<span class="pl-s"><span class="pl-pds">&quot;</span>iDataSort<span class="pl-pds">&quot;</span></span>);<span class="pl-en">_fnMap</span>(oCol,oOptions,<span class="pl-s"><span class="pl-pds">&quot;</span>asSorting<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2093" class="blob-num js-line-number" data-line-number="2093"></td>
        <td id="LC2093" class="blob-code blob-code-inner js-file-line"><span class="pl-en">_fnMap</span>(oCol,oOptions,<span class="pl-s"><span class="pl-pds">&quot;</span>sSortDataType<span class="pl-pds">&quot;</span></span>)}<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>.<span class="pl-smi">bSort</span>){<span class="pl-smi">oCol</span>.<span class="pl-smi">bSortable</span><span class="pl-k">=</span><span class="pl-c1">false</span></td>
      </tr>
      <tr>
        <td id="L2094" class="blob-num js-line-number" data-line-number="2094"></td>
        <td id="LC2094" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">oCol</span>.<span class="pl-smi">bSortable</span><span class="pl-k">||</span>(<span class="pl-smi">$</span>.<span class="pl-en">inArray</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>asc<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">oCol</span>.<span class="pl-smi">asSorting</span>)<span class="pl-k">==</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">$</span>.<span class="pl-en">inArray</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>desc<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">oCol</span>.<span class="pl-smi">asSorting</span>)<span class="pl-k">==</span><span class="pl-k">-</span><span class="pl-c1">1</span>)){<span class="pl-smi">oCol</span>.<span class="pl-smi">sSortingClass</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oClasses</span>.<span class="pl-smi">sSortableNone</span>;</td>
      </tr>
      <tr>
        <td id="L2095" class="blob-num js-line-number" data-line-number="2095"></td>
        <td id="LC2095" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">oCol</span>.<span class="pl-smi">sSortingClassJUI</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>}<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-smi">$</span>.<span class="pl-en">inArray</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>asc<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">oCol</span>.<span class="pl-smi">asSorting</span>)<span class="pl-k">!=</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">$</span>.<span class="pl-en">inArray</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>desc<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">oCol</span>.<span class="pl-smi">asSorting</span>)<span class="pl-k">==</span><span class="pl-k">-</span><span class="pl-c1">1</span>){<span class="pl-smi">oCol</span>.<span class="pl-smi">sSortingClass</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oClasses</span>.<span class="pl-smi">sSortableAsc</span>;</td>
      </tr>
      <tr>
        <td id="L2096" class="blob-num js-line-number" data-line-number="2096"></td>
        <td id="LC2096" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">oCol</span>.<span class="pl-smi">sSortingClassJUI</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oClasses</span>.<span class="pl-smi">sSortJUIAscAllowed</span>}<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-smi">$</span>.<span class="pl-en">inArray</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>asc<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">oCol</span>.<span class="pl-smi">asSorting</span>)<span class="pl-k">==</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">$</span>.<span class="pl-en">inArray</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>desc<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">oCol</span>.<span class="pl-smi">asSorting</span>)<span class="pl-k">!=</span><span class="pl-k">-</span><span class="pl-c1">1</span>){<span class="pl-smi">oCol</span>.<span class="pl-smi">sSortingClass</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oClasses</span>.<span class="pl-smi">sSortableDesc</span>;</td>
      </tr>
      <tr>
        <td id="L2097" class="blob-num js-line-number" data-line-number="2097"></td>
        <td id="LC2097" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">oCol</span>.<span class="pl-smi">sSortingClassJUI</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oClasses</span>.<span class="pl-smi">sSortJUIDescAllowed</span>}}}<span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-smi">oSettings</span>.<span class="pl-smi">aoPreSearchCols</span>[iLength]<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoPreSearchCols</span>[iLength]<span class="pl-k">===</span><span class="pl-c1">null</span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoPreSearchCols</span>[iLength]<span class="pl-k">=</span>{sSearch<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,bEscapeRegex<span class="pl-k">:</span><span class="pl-c1">true</span>}</td>
      </tr>
      <tr>
        <td id="L2098" class="blob-num js-line-number" data-line-number="2098"></td>
        <td id="LC2098" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-smi">oSettings</span>.<span class="pl-smi">aoPreSearchCols</span>[iLength].<span class="pl-smi">bEscapeRegex</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoPreSearchCols</span>[iLength].<span class="pl-smi">bEscapeRegex</span><span class="pl-k">=</span><span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L2099" class="blob-num js-line-number" data-line-number="2099"></td>
        <td id="LC2099" class="blob-code blob-code-inner js-file-line">}}}function _fnAddData(oSettings,aData){if(aData.length!=oSettings.aoColumns.length){alert(&quot;DataTables warning: Added data does not match known number of columns&quot;);</td>
      </tr>
      <tr>
        <td id="L2100" class="blob-num js-line-number" data-line-number="2100"></td>
        <td id="LC2100" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-k">-</span><span class="pl-c1">1</span>}<span class="pl-k">var</span> iThisIndex<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>.<span class="pl-c1">length</span>;<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>.<span class="pl-c1">push</span>({nTr<span class="pl-k">:</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tr<span class="pl-pds">&quot;</span></span>),_iId<span class="pl-k">:</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">iNextId</span><span class="pl-k">++</span>,_aData<span class="pl-k">:</span><span class="pl-smi">aData</span>.<span class="pl-c1">slice</span>(),_anHidden<span class="pl-k">:</span>[],_sRowStripe<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>});</td>
      </tr>
      <tr>
        <td id="L2101" class="blob-num js-line-number" data-line-number="2101"></td>
        <td id="LC2101" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> nTd,sThisType;<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">aData</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>){nTd<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>td<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2102" class="blob-num js-line-number" data-line-number="2102"></td>
        <td id="LC2102" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">fnRender</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>){<span class="pl-k">var</span> sRendered<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-en">fnRender</span>({iDataRow<span class="pl-k">:</span>iThisIndex,iDataColumn<span class="pl-k">:</span>i,aData<span class="pl-k">:</span>aData,oSettings<span class="pl-k">:</span>oSettings});</td>
      </tr>
      <tr>
        <td id="L2103" class="blob-num js-line-number" data-line-number="2103"></td>
        <td id="LC2103" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">nTd</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span>sRendered;<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">bUseRendered</span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[iThisIndex].<span class="pl-smi">_aData</span>[i]<span class="pl-k">=</span>sRendered</td>
      </tr>
      <tr>
        <td id="L2104" class="blob-num js-line-number" data-line-number="2104"></td>
        <td id="LC2104" class="blob-code blob-code-inner js-file-line">}}<span class="pl-k">else</span>{<span class="pl-smi">nTd</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span>aData[i]}<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">sClass</span><span class="pl-k">!==</span><span class="pl-c1">null</span>){<span class="pl-smi">nTd</span>.<span class="pl-c1">className</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">sClass</span></td>
      </tr>
      <tr>
        <td id="L2105" class="blob-num js-line-number" data-line-number="2105"></td>
        <td id="LC2105" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">_bAutoType</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">sType</span><span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>){sThisType<span class="pl-k">=</span><span class="pl-en">_fnDetectType</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[iThisIndex].<span class="pl-smi">_aData</span>[i]);</td>
      </tr>
      <tr>
        <td id="L2106" class="blob-num js-line-number" data-line-number="2106"></td>
        <td id="LC2106" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">sType</span><span class="pl-k">===</span><span class="pl-c1">null</span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">sType</span><span class="pl-k">=</span>sThisType}<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">sType</span><span class="pl-k">!=</span>sThisType){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">sType</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L2107" class="blob-num js-line-number" data-line-number="2107"></td>
        <td id="LC2107" class="blob-code blob-code-inner js-file-line">}}}<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">bVisible</span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[iThisIndex].<span class="pl-smi">nTr</span>.<span class="pl-c1">appendChild</span>(nTd)</td>
      </tr>
      <tr>
        <td id="L2108" class="blob-num js-line-number" data-line-number="2108"></td>
        <td id="LC2108" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">else</span>{<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[iThisIndex].<span class="pl-smi">_anHidden</span>[i]<span class="pl-k">=</span>nTd}}<span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplayMaster</span>.<span class="pl-c1">push</span>(iThisIndex);</td>
      </tr>
      <tr>
        <td id="L2109" class="blob-num js-line-number" data-line-number="2109"></td>
        <td id="LC2109" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> iThisIndex}function _fnGatherData(oSettings){var iLoop,i,iLen,j,jLen,jInner,nTds,nTrs,nTd,aLocalData,iThisIndex,iRow,iRows,iColumn,iColumns;</td>
      </tr>
      <tr>
        <td id="L2110" class="blob-num js-line-number" data-line-number="2110"></td>
        <td id="LC2110" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">sAjaxSource</span><span class="pl-k">===</span><span class="pl-c1">null</span>){nTrs<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">nTable</span>.<span class="pl-c1">getElementsByTagName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tbody<span class="pl-pds">&quot;</span></span>)[<span class="pl-c1">0</span>].<span class="pl-c1">childNodes</span>;</td>
      </tr>
      <tr>
        <td id="L2111" class="blob-num js-line-number" data-line-number="2111"></td>
        <td id="LC2111" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>,iLen<span class="pl-k">=</span><span class="pl-smi">nTrs</span>.<span class="pl-c1">length</span>;i<span class="pl-k">&lt;</span>iLen;i<span class="pl-k">++</span>){<span class="pl-k">if</span>(nTrs[i].<span class="pl-c1">nodeName</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>TR<span class="pl-pds">&quot;</span></span>){iThisIndex<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2112" class="blob-num js-line-number" data-line-number="2112"></td>
        <td id="LC2112" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>.<span class="pl-c1">push</span>({nTr<span class="pl-k">:</span>nTrs[i],_iId<span class="pl-k">:</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">iNextId</span><span class="pl-k">++</span>,_aData<span class="pl-k">:</span>[],_anHidden<span class="pl-k">:</span>[],_sRowStripe<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>});</td>
      </tr>
      <tr>
        <td id="L2113" class="blob-num js-line-number" data-line-number="2113"></td>
        <td id="LC2113" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplayMaster</span>.<span class="pl-c1">push</span>(iThisIndex);aLocalData<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[iThisIndex].<span class="pl-smi">_aData</span>;</td>
      </tr>
      <tr>
        <td id="L2114" class="blob-num js-line-number" data-line-number="2114"></td>
        <td id="LC2114" class="blob-code blob-code-inner js-file-line">nTds<span class="pl-k">=</span>nTrs[i].<span class="pl-c1">childNodes</span>;jInner<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(j<span class="pl-k">=</span><span class="pl-c1">0</span>,jLen<span class="pl-k">=</span><span class="pl-smi">nTds</span>.<span class="pl-c1">length</span>;j<span class="pl-k">&lt;</span>jLen;j<span class="pl-k">++</span>){<span class="pl-k">if</span>(nTds[j].<span class="pl-c1">nodeName</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>TD<span class="pl-pds">&quot;</span></span>){aLocalData[jInner]<span class="pl-k">=</span>nTds[j].<span class="pl-smi">innerHTML</span>;</td>
      </tr>
      <tr>
        <td id="L2115" class="blob-num js-line-number" data-line-number="2115"></td>
        <td id="LC2115" class="blob-code blob-code-inner js-file-line">jInner<span class="pl-k">++</span>}}}}}nTrs<span class="pl-k">=</span><span class="pl-en">_fnGetTrNodes</span>(oSettings);nTds<span class="pl-k">=</span>[];<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>,iLen<span class="pl-k">=</span><span class="pl-smi">nTrs</span>.<span class="pl-c1">length</span>;i<span class="pl-k">&lt;</span>iLen;</td>
      </tr>
      <tr>
        <td id="L2116" class="blob-num js-line-number" data-line-number="2116"></td>
        <td id="LC2116" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">++</span>){<span class="pl-k">for</span>(j<span class="pl-k">=</span><span class="pl-c1">0</span>,jLen<span class="pl-k">=</span>nTrs[i].<span class="pl-c1">childNodes</span>.<span class="pl-c1">length</span>;j<span class="pl-k">&lt;</span>jLen;j<span class="pl-k">++</span>){nTd<span class="pl-k">=</span>nTrs[i].<span class="pl-c1">childNodes</span>[j];</td>
      </tr>
      <tr>
        <td id="L2117" class="blob-num js-line-number" data-line-number="2117"></td>
        <td id="LC2117" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">nTd</span>.<span class="pl-c1">nodeName</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>TD<span class="pl-pds">&quot;</span></span>){<span class="pl-smi">nTds</span>.<span class="pl-c1">push</span>(nTd)}}}<span class="pl-k">if</span>(<span class="pl-smi">nTds</span>.<span class="pl-c1">length</span><span class="pl-k">!=</span><span class="pl-smi">nTrs</span>.<span class="pl-c1">length</span><span class="pl-k">*</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>.<span class="pl-c1">length</span>){<span class="pl-en">alert</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>DataTables warning: Unexpected number of TD elements. Expected <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-smi">nTrs</span>.<span class="pl-c1">length</span><span class="pl-k">*</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>.<span class="pl-c1">length</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> and got <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">nTds</span>.<span class="pl-c1">length</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>. DataTables does not support rowspan / colspan in the table body, and there must be one cell for each row/column combination.<span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2118" class="blob-num js-line-number" data-line-number="2118"></td>
        <td id="LC2118" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">for</span>(iColumn<span class="pl-k">=</span><span class="pl-c1">0</span>,iColumns<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>.<span class="pl-c1">length</span>;iColumn<span class="pl-k">&lt;</span>iColumns;iColumn<span class="pl-k">++</span>){<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[iColumn].<span class="pl-smi">sTitle</span><span class="pl-k">===</span><span class="pl-c1">null</span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[iColumn].<span class="pl-smi">sTitle</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[iColumn].<span class="pl-smi">nTh</span>.<span class="pl-smi">innerHTML</span></td>
      </tr>
      <tr>
        <td id="L2119" class="blob-num js-line-number" data-line-number="2119"></td>
        <td id="LC2119" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">var</span> bAutoType<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[iColumn].<span class="pl-smi">_bAutoType</span>,bRender<span class="pl-k">=</span><span class="pl-k">typeof</span> <span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[iColumn].<span class="pl-smi">fnRender</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>,bClass<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[iColumn].<span class="pl-smi">sClass</span><span class="pl-k">!==</span><span class="pl-c1">null</span>,bVisible<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[iColumn].<span class="pl-smi">bVisible</span>,nCell,sThisType,sRendered;</td>
      </tr>
      <tr>
        <td id="L2120" class="blob-num js-line-number" data-line-number="2120"></td>
        <td id="LC2120" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(bAutoType<span class="pl-k">||</span>bRender<span class="pl-k">||</span>bClass<span class="pl-k">||!</span>bVisible){<span class="pl-k">for</span>(iRow<span class="pl-k">=</span><span class="pl-c1">0</span>,iRows<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2121" class="blob-num js-line-number" data-line-number="2121"></td>
        <td id="LC2121" class="blob-code blob-code-inner js-file-line">iRow<span class="pl-k">&lt;</span>iRows;iRow<span class="pl-k">++</span>){nCell<span class="pl-k">=</span>nTds[(iRow<span class="pl-k">*</span>iColumns)<span class="pl-k">+</span>iColumn];<span class="pl-k">if</span>(bAutoType){<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[iColumn].<span class="pl-smi">sType</span><span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>){sThisType<span class="pl-k">=</span><span class="pl-en">_fnDetectType</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[iRow].<span class="pl-smi">_aData</span>[iColumn]);</td>
      </tr>
      <tr>
        <td id="L2122" class="blob-num js-line-number" data-line-number="2122"></td>
        <td id="LC2122" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[iColumn].<span class="pl-smi">sType</span><span class="pl-k">===</span><span class="pl-c1">null</span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[iColumn].<span class="pl-smi">sType</span><span class="pl-k">=</span>sThisType</td>
      </tr>
      <tr>
        <td id="L2123" class="blob-num js-line-number" data-line-number="2123"></td>
        <td id="LC2123" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[iColumn].<span class="pl-smi">sType</span><span class="pl-k">!=</span>sThisType){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[iColumn].<span class="pl-smi">sType</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L2124" class="blob-num js-line-number" data-line-number="2124"></td>
        <td id="LC2124" class="blob-code blob-code-inner js-file-line">}}}}<span class="pl-k">if</span>(bRender){sRendered<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[iColumn].<span class="pl-en">fnRender</span>({iDataRow<span class="pl-k">:</span>iRow,iDataColumn<span class="pl-k">:</span>iColumn,aData<span class="pl-k">:</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[iRow].<span class="pl-smi">_aData</span>,oSettings<span class="pl-k">:</span>oSettings});</td>
      </tr>
      <tr>
        <td id="L2125" class="blob-num js-line-number" data-line-number="2125"></td>
        <td id="LC2125" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">nCell</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span>sRendered;<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[iColumn].<span class="pl-smi">bUseRendered</span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[iRow].<span class="pl-smi">_aData</span>[iColumn]<span class="pl-k">=</span>sRendered</td>
      </tr>
      <tr>
        <td id="L2126" class="blob-num js-line-number" data-line-number="2126"></td>
        <td id="LC2126" class="blob-code blob-code-inner js-file-line">}}<span class="pl-k">if</span>(bClass){<span class="pl-smi">nCell</span>.<span class="pl-c1">className</span><span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[iColumn].<span class="pl-smi">sClass</span>}<span class="pl-k">if</span>(<span class="pl-k">!</span>bVisible){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[iRow].<span class="pl-smi">_anHidden</span>[iColumn]<span class="pl-k">=</span>nCell;</td>
      </tr>
      <tr>
        <td id="L2127" class="blob-num js-line-number" data-line-number="2127"></td>
        <td id="LC2127" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">nCell</span>.<span class="pl-c1">parentNode</span>.<span class="pl-c1">removeChild</span>(nCell)}}}}}function _fnDrawHead(oSettings){var i,nTh,iLen;</td>
      </tr>
      <tr>
        <td id="L2128" class="blob-num js-line-number" data-line-number="2128"></td>
        <td id="LC2128" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> iThs<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">nTable</span>.<span class="pl-c1">getElementsByTagName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>thead<span class="pl-pds">&quot;</span></span>)[<span class="pl-c1">0</span>].<span class="pl-c1">getElementsByTagName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>th<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2129" class="blob-num js-line-number" data-line-number="2129"></td>
        <td id="LC2129" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> iCorrector<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(iThs<span class="pl-k">!==</span><span class="pl-c1">0</span>){<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>,iLen<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>.<span class="pl-c1">length</span>;i<span class="pl-k">&lt;</span>iLen;i<span class="pl-k">++</span>){nTh<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">nTh</span>;</td>
      </tr>
      <tr>
        <td id="L2130" class="blob-num js-line-number" data-line-number="2130"></td>
        <td id="LC2130" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">bVisible</span>){<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">sWidth</span><span class="pl-k">!==</span><span class="pl-c1">null</span>){<span class="pl-smi">nTh</span>.<span class="pl-c1">style</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">sWidth</span></td>
      </tr>
      <tr>
        <td id="L2131" class="blob-num js-line-number" data-line-number="2131"></td>
        <td id="LC2131" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">sTitle</span><span class="pl-k">!=</span><span class="pl-smi">nTh</span>.<span class="pl-smi">innerHTML</span>){<span class="pl-smi">nTh</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">sTitle</span></td>
      </tr>
      <tr>
        <td id="L2132" class="blob-num js-line-number" data-line-number="2132"></td>
        <td id="LC2132" class="blob-code blob-code-inner js-file-line">}}<span class="pl-k">else</span>{<span class="pl-smi">nTh</span>.<span class="pl-c1">parentNode</span>.<span class="pl-c1">removeChild</span>(nTh);iCorrector<span class="pl-k">++</span>}}}<span class="pl-k">else</span>{<span class="pl-k">var</span> nTr<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tr<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2133" class="blob-num js-line-number" data-line-number="2133"></td>
        <td id="LC2133" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>,iLen<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>.<span class="pl-c1">length</span>;i<span class="pl-k">&lt;</span>iLen;i<span class="pl-k">++</span>){nTh<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">nTh</span>;</td>
      </tr>
      <tr>
        <td id="L2134" class="blob-num js-line-number" data-line-number="2134"></td>
        <td id="LC2134" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">nTh</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">sTitle</span>;<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">bVisible</span>){<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">sClass</span><span class="pl-k">!==</span><span class="pl-c1">null</span>){<span class="pl-smi">nTh</span>.<span class="pl-c1">className</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">sClass</span></td>
      </tr>
      <tr>
        <td id="L2135" class="blob-num js-line-number" data-line-number="2135"></td>
        <td id="LC2135" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">sWidth</span><span class="pl-k">!==</span><span class="pl-c1">null</span>){<span class="pl-smi">nTh</span>.<span class="pl-c1">style</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">sWidth</span></td>
      </tr>
      <tr>
        <td id="L2136" class="blob-num js-line-number" data-line-number="2136"></td>
        <td id="LC2136" class="blob-code blob-code-inner js-file-line">}<span class="pl-smi">nTr</span>.<span class="pl-c1">appendChild</span>(nTh)}}<span class="pl-en">$</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>thead:eq(0)<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">oSettings</span>.<span class="pl-smi">nTable</span>).<span class="pl-en">html</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)[<span class="pl-c1">0</span>].<span class="pl-c1">appendChild</span>(nTr)</td>
      </tr>
      <tr>
        <td id="L2137" class="blob-num js-line-number" data-line-number="2137"></td>
        <td id="LC2137" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">bJUI</span>){<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>,iLen<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>.<span class="pl-c1">length</span>;i<span class="pl-k">&lt;</span>iLen;i<span class="pl-k">++</span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">nTh</span>.<span class="pl-c1">insertBefore</span>(<span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>span<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">nTh</span>.<span class="pl-c1">firstChild</span>)</td>
      </tr>
      <tr>
        <td id="L2138" class="blob-num js-line-number" data-line-number="2138"></td>
        <td id="LC2138" class="blob-code blob-code-inner js-file-line">}}<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>.<span class="pl-smi">bSort</span>){<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>){<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">bSortable</span><span class="pl-k">!==</span><span class="pl-c1">false</span>){<span class="pl-en">_fnSortAttachListener</span>(oSettings,<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">nTh</span>,i)</td>
      </tr>
      <tr>
        <td id="L2139" class="blob-num js-line-number" data-line-number="2139"></td>
        <td id="LC2139" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">else</span>{<span class="pl-en">$</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">nTh</span>).<span class="pl-en">addClass</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oClasses</span>.<span class="pl-smi">sSortableNone</span>)}}<span class="pl-en">$</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>thead:eq(0) th<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">oSettings</span>.<span class="pl-smi">nTable</span>).<span class="pl-en">mousedown</span>(<span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">if</span>(<span class="pl-smi">e</span>.<span class="pl-smi">shiftKey</span>){<span class="pl-c1">this</span>.<span class="pl-en">onselectstart</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">false</span></td>
      </tr>
      <tr>
        <td id="L2140" class="blob-num js-line-number" data-line-number="2140"></td>
        <td id="LC2140" class="blob-code blob-code-inner js-file-line">};<span class="pl-k">return</span> <span class="pl-c1">false</span>}})}<span class="pl-k">var</span> nTfoot<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">nTable</span>.<span class="pl-c1">getElementsByTagName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tfoot<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-smi">nTfoot</span>.<span class="pl-c1">length</span><span class="pl-k">!==</span><span class="pl-c1">0</span>){iCorrector<span class="pl-k">=</span><span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2141" class="blob-num js-line-number" data-line-number="2141"></td>
        <td id="LC2141" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> nTfs<span class="pl-k">=</span>nTfoot[<span class="pl-c1">0</span>].<span class="pl-c1">getElementsByTagName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>th<span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>,iLen<span class="pl-k">=</span><span class="pl-smi">nTfs</span>.<span class="pl-c1">length</span>;i<span class="pl-k">&lt;</span>iLen;i<span class="pl-k">++</span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">nTf</span><span class="pl-k">=</span>nTfs[i<span class="pl-k">-</span>iCorrector];</td>
      </tr>
      <tr>
        <td id="L2142" class="blob-num js-line-number" data-line-number="2142"></td>
        <td id="LC2142" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">bVisible</span>){nTfs[i<span class="pl-k">-</span>iCorrector].<span class="pl-c1">parentNode</span>.<span class="pl-c1">removeChild</span>(nTfs[i<span class="pl-k">-</span>iCorrector]);</td>
      </tr>
      <tr>
        <td id="L2143" class="blob-num js-line-number" data-line-number="2143"></td>
        <td id="LC2143" class="blob-code blob-code-inner js-file-line">iCorrector<span class="pl-k">++</span>}}}}function _fnDraw(oSettings){var i,iLen;var anRows=[];var iRowCount=0;</td>
      </tr>
      <tr>
        <td id="L2144" class="blob-num js-line-number" data-line-number="2144"></td>
        <td id="LC2144" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> bRowError<span class="pl-k">=</span><span class="pl-c1">false</span>;<span class="pl-k">var</span> iStrips<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">asStripClasses</span>.<span class="pl-c1">length</span>;<span class="pl-k">var</span> iOpenRows<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoOpenRows</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2145" class="blob-num js-line-number" data-line-number="2145"></td>
        <td id="LC2145" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>.<span class="pl-smi">bServerSide</span><span class="pl-k">&amp;&amp;!</span><span class="pl-en">_fnAjaxUpdate</span>(oSettings)){<span class="pl-k">return</span>}<span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-smi">oSettings</span>.<span class="pl-smi">iInitDisplayStart</span><span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">iInitDisplayStart</span><span class="pl-k">!=</span><span class="pl-k">-</span><span class="pl-c1">1</span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayStart</span><span class="pl-k">=</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">iInitDisplayStart</span><span class="pl-k">&gt;=</span><span class="pl-smi">oSettings</span>.<span class="pl-en">fnRecordsDisplay</span>())<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">iInitDisplayStart</span>;</td>
      </tr>
      <tr>
        <td id="L2146" class="blob-num js-line-number" data-line-number="2146"></td>
        <td id="LC2146" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">oSettings</span>.<span class="pl-smi">iInitDisplayStart</span><span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-en">_fnCalculateEnd</span>(oSettings)}<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplay</span>.<span class="pl-c1">length</span><span class="pl-k">!==</span><span class="pl-c1">0</span>){<span class="pl-k">var</span> iStart<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayStart</span>;</td>
      </tr>
      <tr>
        <td id="L2147" class="blob-num js-line-number" data-line-number="2147"></td>
        <td id="LC2147" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> iEnd<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayEnd</span>;<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>.<span class="pl-smi">bServerSide</span>){iStart<span class="pl-k">=</span><span class="pl-c1">0</span>;iEnd<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>.<span class="pl-c1">length</span></td>
      </tr>
      <tr>
        <td id="L2148" class="blob-num js-line-number" data-line-number="2148"></td>
        <td id="LC2148" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">for</span>(<span class="pl-k">var</span> j<span class="pl-k">=</span>iStart;j<span class="pl-k">&lt;</span>iEnd;j<span class="pl-k">++</span>){<span class="pl-k">var</span> aoData<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[<span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplay</span>[j]];</td>
      </tr>
      <tr>
        <td id="L2149" class="blob-num js-line-number" data-line-number="2149"></td>
        <td id="LC2149" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> nRow<span class="pl-k">=</span><span class="pl-smi">aoData</span>.<span class="pl-smi">nTr</span>;<span class="pl-k">if</span>(iStrips<span class="pl-k">!==</span><span class="pl-c1">0</span>){<span class="pl-k">var</span> sStrip<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">asStripClasses</span>[iRowCount<span class="pl-k">%</span>iStrips];</td>
      </tr>
      <tr>
        <td id="L2150" class="blob-num js-line-number" data-line-number="2150"></td>
        <td id="LC2150" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">aoData</span>.<span class="pl-smi">_sRowStripe</span><span class="pl-k">!=</span>sStrip){<span class="pl-en">$</span>(nRow).<span class="pl-en">removeClass</span>(<span class="pl-smi">aoData</span>.<span class="pl-smi">_sRowStripe</span>).<span class="pl-en">addClass</span>(sStrip);</td>
      </tr>
      <tr>
        <td id="L2151" class="blob-num js-line-number" data-line-number="2151"></td>
        <td id="LC2151" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">aoData</span>.<span class="pl-smi">_sRowStripe</span><span class="pl-k">=</span>sStrip}}<span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-smi">oSettings</span>.<span class="pl-smi">fnRowCallback</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>){nRow<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-en">fnRowCallback</span>(nRow,<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[<span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplay</span>[j]].<span class="pl-smi">_aData</span>,iRowCount,j);</td>
      </tr>
      <tr>
        <td id="L2152" class="blob-num js-line-number" data-line-number="2152"></td>
        <td id="LC2152" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">!</span>nRow<span class="pl-k">&amp;&amp;!</span>bRowError){<span class="pl-en">alert</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>DataTables warning: A node was not returned by fnRowCallback<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2153" class="blob-num js-line-number" data-line-number="2153"></td>
        <td id="LC2153" class="blob-code blob-code-inner js-file-line">bRowError<span class="pl-k">=</span><span class="pl-c1">true</span>}}<span class="pl-smi">anRows</span>.<span class="pl-c1">push</span>(nRow);iRowCount<span class="pl-k">++</span>;<span class="pl-k">if</span>(iOpenRows<span class="pl-k">!==</span><span class="pl-c1">0</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-c1">0</span>;k<span class="pl-k">&lt;</span>iOpenRows;</td>
      </tr>
      <tr>
        <td id="L2154" class="blob-num js-line-number" data-line-number="2154"></td>
        <td id="LC2154" class="blob-code blob-code-inner js-file-line">k<span class="pl-k">++</span>){<span class="pl-k">if</span>(nRow<span class="pl-k">==</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoOpenRows</span>[k].<span class="pl-smi">nParent</span>){<span class="pl-smi">anRows</span>.<span class="pl-c1">push</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoOpenRows</span>[k].<span class="pl-smi">nTr</span>)</td>
      </tr>
      <tr>
        <td id="L2155" class="blob-num js-line-number" data-line-number="2155"></td>
        <td id="LC2155" class="blob-code blob-code-inner js-file-line">}}}}}<span class="pl-k">else</span>{anRows[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tr<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-smi">oSettings</span>.<span class="pl-smi">asStripClasses</span>[<span class="pl-c1">0</span>]<span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>){anRows[<span class="pl-c1">0</span>].<span class="pl-c1">className</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">asStripClasses</span>[<span class="pl-c1">0</span>]</td>
      </tr>
      <tr>
        <td id="L2156" class="blob-num js-line-number" data-line-number="2156"></td>
        <td id="LC2156" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">var</span> nTd<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>td<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">nTd</span>.<span class="pl-c1">setAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>valign<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">nTd</span>.<span class="pl-c1">colSpan</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2157" class="blob-num js-line-number" data-line-number="2157"></td>
        <td id="LC2157" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">nTd</span>.<span class="pl-c1">className</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oClasses</span>.<span class="pl-smi">sRowEmpty</span>;<span class="pl-smi">nTd</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oLanguage</span>.<span class="pl-smi">sZeroRecords</span>;</td>
      </tr>
      <tr>
        <td id="L2158" class="blob-num js-line-number" data-line-number="2158"></td>
        <td id="LC2158" class="blob-code blob-code-inner js-file-line">anRows[iRowCount].<span class="pl-c1">appendChild</span>(nTd)}<span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-smi">oSettings</span>.<span class="pl-smi">fnHeaderCallback</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>){<span class="pl-smi">oSettings</span>.<span class="pl-en">fnHeaderCallback</span>(<span class="pl-en">$</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>thead:eq(0)&gt;tr<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">oSettings</span>.<span class="pl-smi">nTable</span>)[<span class="pl-c1">0</span>],<span class="pl-en">_fnGetDataMaster</span>(oSettings),<span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayStart</span>,<span class="pl-smi">oSettings</span>.<span class="pl-en">fnDisplayEnd</span>(),<span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplay</span>)</td>
      </tr>
      <tr>
        <td id="L2159" class="blob-num js-line-number" data-line-number="2159"></td>
        <td id="LC2159" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-smi">oSettings</span>.<span class="pl-smi">fnFooterCallback</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>){<span class="pl-smi">oSettings</span>.<span class="pl-en">fnFooterCallback</span>(<span class="pl-en">$</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tfoot:eq(0)&gt;tr<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">oSettings</span>.<span class="pl-smi">nTable</span>)[<span class="pl-c1">0</span>],<span class="pl-en">_fnGetDataMaster</span>(oSettings),<span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayStart</span>,<span class="pl-smi">oSettings</span>.<span class="pl-en">fnDisplayEnd</span>(),<span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplay</span>)</td>
      </tr>
      <tr>
        <td id="L2160" class="blob-num js-line-number" data-line-number="2160"></td>
        <td id="LC2160" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">var</span> nBody<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">nTable</span>.<span class="pl-c1">getElementsByTagName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tbody<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(nBody[<span class="pl-c1">0</span>]){<span class="pl-k">var</span> nTrs<span class="pl-k">=</span>nBody[<span class="pl-c1">0</span>].<span class="pl-c1">childNodes</span>;</td>
      </tr>
      <tr>
        <td id="L2161" class="blob-num js-line-number" data-line-number="2161"></td>
        <td id="LC2161" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-smi">nTrs</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;i<span class="pl-k">&gt;=</span><span class="pl-c1">0</span>;i<span class="pl-k">--</span>){nTrs[i].<span class="pl-c1">parentNode</span>.<span class="pl-c1">removeChild</span>(nTrs[i])}<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>,iLen<span class="pl-k">=</span><span class="pl-smi">anRows</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2162" class="blob-num js-line-number" data-line-number="2162"></td>
        <td id="LC2162" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">&lt;</span>iLen;i<span class="pl-k">++</span>){nBody[<span class="pl-c1">0</span>].<span class="pl-c1">appendChild</span>(anRows[i])}}<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>,iLen<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoDrawCallback</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2163" class="blob-num js-line-number" data-line-number="2163"></td>
        <td id="LC2163" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">&lt;</span>iLen;i<span class="pl-k">++</span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoDrawCallback</span>[i].<span class="pl-en">fn</span>(oSettings)}<span class="pl-smi">oSettings</span>.<span class="pl-smi">bSorted</span><span class="pl-k">=</span><span class="pl-c1">false</span>;<span class="pl-smi">oSettings</span>.<span class="pl-smi">bFiltered</span><span class="pl-k">=</span><span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L2164" class="blob-num js-line-number" data-line-number="2164"></td>
        <td id="LC2164" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-smi">oSettings</span>.<span class="pl-smi">_bInitComplete</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">_bInitComplete</span><span class="pl-k">=</span><span class="pl-c1">true</span>;<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>.<span class="pl-smi">bAutoWidth</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">nTable</span>.<span class="pl-smi">offsetWidth</span><span class="pl-k">!==</span><span class="pl-c1">0</span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">nTable</span>.<span class="pl-c1">style</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">nTable</span>.<span class="pl-smi">offsetWidth</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L2165" class="blob-num js-line-number" data-line-number="2165"></td>
        <td id="LC2165" class="blob-code blob-code-inner js-file-line">}}}function _fnReDraw(oSettings){if(oSettings.oFeatures.bSort){_fnSort(oSettings,oSettings.oPreviousSearch)</td>
      </tr>
      <tr>
        <td id="L2166" class="blob-num js-line-number" data-line-number="2166"></td>
        <td id="LC2166" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>.<span class="pl-smi">bFilter</span>){<span class="pl-en">_fnFilterComplete</span>(oSettings,<span class="pl-smi">oSettings</span>.<span class="pl-smi">oPreviousSearch</span>)</td>
      </tr>
      <tr>
        <td id="L2167" class="blob-num js-line-number" data-line-number="2167"></td>
        <td id="LC2167" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">else</span>{<span class="pl-en">_fnCalculateEnd</span>(oSettings);<span class="pl-en">_fnDraw</span>(oSettings)}}}function _fnAjaxUpdate(oSettings){if(oSettings.bAjaxDataGet){_fnProcessingDisplay(oSettings,true);</td>
      </tr>
      <tr>
        <td id="L2168" class="blob-num js-line-number" data-line-number="2168"></td>
        <td id="LC2168" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> iColumns<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>.<span class="pl-c1">length</span>;<span class="pl-k">var</span> aoData<span class="pl-k">=</span>[];<span class="pl-k">var</span> i;<span class="pl-smi">oSettings</span>.<span class="pl-smi">iServerDraw</span><span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L2169" class="blob-num js-line-number" data-line-number="2169"></td>
        <td id="LC2169" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">aoData</span>.<span class="pl-c1">push</span>({name<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>sEcho<span class="pl-pds">&quot;</span></span>,value<span class="pl-k">:</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">iServerDraw</span>});<span class="pl-smi">aoData</span>.<span class="pl-c1">push</span>({name<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>iColumns<span class="pl-pds">&quot;</span></span>,value<span class="pl-k">:</span>iColumns});</td>
      </tr>
      <tr>
        <td id="L2170" class="blob-num js-line-number" data-line-number="2170"></td>
        <td id="LC2170" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">aoData</span>.<span class="pl-c1">push</span>({name<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>sColumns<span class="pl-pds">&quot;</span></span>,value<span class="pl-k">:</span><span class="pl-en">_fnColumnOrdering</span>(oSettings)});<span class="pl-smi">aoData</span>.<span class="pl-c1">push</span>({name<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>iDisplayStart<span class="pl-pds">&quot;</span></span>,value<span class="pl-k">:</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayStart</span>});</td>
      </tr>
      <tr>
        <td id="L2171" class="blob-num js-line-number" data-line-number="2171"></td>
        <td id="LC2171" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">aoData</span>.<span class="pl-c1">push</span>({name<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>iDisplayLength<span class="pl-pds">&quot;</span></span>,value<span class="pl-k">:</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>.<span class="pl-smi">bPaginate</span><span class="pl-k">!==</span><span class="pl-c1">false</span><span class="pl-k">?</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayLength</span><span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>});</td>
      </tr>
      <tr>
        <td id="L2172" class="blob-num js-line-number" data-line-number="2172"></td>
        <td id="LC2172" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>.<span class="pl-smi">bFilter</span><span class="pl-k">!==</span><span class="pl-c1">false</span>){<span class="pl-smi">aoData</span>.<span class="pl-c1">push</span>({name<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>sSearch<span class="pl-pds">&quot;</span></span>,value<span class="pl-k">:</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oPreviousSearch</span>.<span class="pl-smi">sSearch</span>});</td>
      </tr>
      <tr>
        <td id="L2173" class="blob-num js-line-number" data-line-number="2173"></td>
        <td id="LC2173" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">aoData</span>.<span class="pl-c1">push</span>({name<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>bEscapeRegex<span class="pl-pds">&quot;</span></span>,value<span class="pl-k">:</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oPreviousSearch</span>.<span class="pl-smi">bEscapeRegex</span>});<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2174" class="blob-num js-line-number" data-line-number="2174"></td>
        <td id="LC2174" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">&lt;</span>iColumns;i<span class="pl-k">++</span>){<span class="pl-smi">aoData</span>.<span class="pl-c1">push</span>({name<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>sSearch_<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>i,value<span class="pl-k">:</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoPreSearchCols</span>[i].<span class="pl-smi">sSearch</span>});</td>
      </tr>
      <tr>
        <td id="L2175" class="blob-num js-line-number" data-line-number="2175"></td>
        <td id="LC2175" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">aoData</span>.<span class="pl-c1">push</span>({name<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>bEscapeRegex_<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>i,value<span class="pl-k">:</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoPreSearchCols</span>[i].<span class="pl-smi">bEscapeRegex</span>});</td>
      </tr>
      <tr>
        <td id="L2176" class="blob-num js-line-number" data-line-number="2176"></td>
        <td id="LC2176" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">aoData</span>.<span class="pl-c1">push</span>({name<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>bSearchable_<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>i,value<span class="pl-k">:</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">bSearchable</span>})}}<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>.<span class="pl-smi">bSort</span><span class="pl-k">!==</span><span class="pl-c1">false</span>){<span class="pl-k">var</span> iFixed<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSortingFixed</span><span class="pl-k">!==</span><span class="pl-c1">null</span><span class="pl-k">?</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSortingFixed</span>.<span class="pl-c1">length</span><span class="pl-k">:</span><span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2177" class="blob-num js-line-number" data-line-number="2177"></td>
        <td id="LC2177" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> iUser<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSorting</span>.<span class="pl-c1">length</span>;<span class="pl-smi">aoData</span>.<span class="pl-c1">push</span>({name<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>iSortingCols<span class="pl-pds">&quot;</span></span>,value<span class="pl-k">:</span>iFixed<span class="pl-k">+</span>iUser});</td>
      </tr>
      <tr>
        <td id="L2178" class="blob-num js-line-number" data-line-number="2178"></td>
        <td id="LC2178" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>iFixed;i<span class="pl-k">++</span>){<span class="pl-smi">aoData</span>.<span class="pl-c1">push</span>({name<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>iSortCol_<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>i,value<span class="pl-k">:</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSortingFixed</span>[i][<span class="pl-c1">0</span>]});</td>
      </tr>
      <tr>
        <td id="L2179" class="blob-num js-line-number" data-line-number="2179"></td>
        <td id="LC2179" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">aoData</span>.<span class="pl-c1">push</span>({name<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>sSortDir_<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>i,value<span class="pl-k">:</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSortingFixed</span>[i][<span class="pl-c1">1</span>]})}<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>iUser;</td>
      </tr>
      <tr>
        <td id="L2180" class="blob-num js-line-number" data-line-number="2180"></td>
        <td id="LC2180" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">++</span>){<span class="pl-smi">aoData</span>.<span class="pl-c1">push</span>({name<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>iSortCol_<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(i<span class="pl-k">+</span>iFixed),value<span class="pl-k">:</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSorting</span>[i][<span class="pl-c1">0</span>]});<span class="pl-smi">aoData</span>.<span class="pl-c1">push</span>({name<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>sSortDir_<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(i<span class="pl-k">+</span>iFixed),value<span class="pl-k">:</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSorting</span>[i][<span class="pl-c1">1</span>]})</td>
      </tr>
      <tr>
        <td id="L2181" class="blob-num js-line-number" data-line-number="2181"></td>
        <td id="LC2181" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>iColumns;i<span class="pl-k">++</span>){<span class="pl-smi">aoData</span>.<span class="pl-c1">push</span>({name<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>bSortable_<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>i,value<span class="pl-k">:</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">bSortable</span>})</td>
      </tr>
      <tr>
        <td id="L2182" class="blob-num js-line-number" data-line-number="2182"></td>
        <td id="LC2182" class="blob-code blob-code-inner js-file-line">}}<span class="pl-smi">oSettings</span>.<span class="pl-en">fnServerData</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">sAjaxSource</span>,aoData,<span class="pl-k">function</span>(<span class="pl-smi">json</span>){<span class="pl-en">_fnAjaxUpdateDraw</span>(oSettings,json)</td>
      </tr>
      <tr>
        <td id="L2183" class="blob-num js-line-number" data-line-number="2183"></td>
        <td id="LC2183" class="blob-code blob-code-inner js-file-line">});<span class="pl-k">return</span> <span class="pl-c1">false</span>}<span class="pl-k">else</span>{<span class="pl-k">return</span> <span class="pl-c1">true</span>}}function _fnAjaxUpdateDraw(oSettings,json){if(typeof json.sEcho!=&quot;undefined&quot;){if(json.sEcho*1&lt;oSettings.iServerDraw){return</td>
      </tr>
      <tr>
        <td id="L2184" class="blob-num js-line-number" data-line-number="2184"></td>
        <td id="LC2184" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">else</span>{<span class="pl-smi">oSettings</span>.<span class="pl-smi">iServerDraw</span><span class="pl-k">=</span><span class="pl-smi">json</span>.<span class="pl-smi">sEcho</span><span class="pl-k">*</span><span class="pl-c1">1</span>}}<span class="pl-en">_fnClearTable</span>(oSettings);<span class="pl-smi">oSettings</span>.<span class="pl-smi">_iRecordsTotal</span><span class="pl-k">=</span><span class="pl-smi">json</span>.<span class="pl-smi">iTotalRecords</span>;</td>
      </tr>
      <tr>
        <td id="L2185" class="blob-num js-line-number" data-line-number="2185"></td>
        <td id="LC2185" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">oSettings</span>.<span class="pl-smi">_iRecordsDisplay</span><span class="pl-k">=</span><span class="pl-smi">json</span>.<span class="pl-smi">iTotalDisplayRecords</span>;<span class="pl-k">var</span> sOrdering<span class="pl-k">=</span><span class="pl-en">_fnColumnOrdering</span>(oSettings);</td>
      </tr>
      <tr>
        <td id="L2186" class="blob-num js-line-number" data-line-number="2186"></td>
        <td id="LC2186" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> bReOrder<span class="pl-k">=</span>(<span class="pl-k">typeof</span> <span class="pl-smi">json</span>.<span class="pl-smi">sColumns</span><span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>sOrdering<span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">json</span>.<span class="pl-smi">sColumns</span><span class="pl-k">!=</span>sOrdering);</td>
      </tr>
      <tr>
        <td id="L2187" class="blob-num js-line-number" data-line-number="2187"></td>
        <td id="LC2187" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(bReOrder){<span class="pl-k">var</span> aiIndex<span class="pl-k">=</span><span class="pl-en">_fnReOrderIndex</span>(oSettings,<span class="pl-smi">json</span>.<span class="pl-smi">sColumns</span>)}<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>,iLen<span class="pl-k">=</span><span class="pl-smi">json</span>.<span class="pl-smi">aaData</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2188" class="blob-num js-line-number" data-line-number="2188"></td>
        <td id="LC2188" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">&lt;</span>iLen;i<span class="pl-k">++</span>){<span class="pl-k">if</span>(bReOrder){<span class="pl-k">var</span> aData<span class="pl-k">=</span>[];<span class="pl-k">for</span>(<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-c1">0</span>,jLen<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2189" class="blob-num js-line-number" data-line-number="2189"></td>
        <td id="LC2189" class="blob-code blob-code-inner js-file-line">j<span class="pl-k">&lt;</span>jLen;j<span class="pl-k">++</span>){<span class="pl-smi">aData</span>.<span class="pl-c1">push</span>(<span class="pl-smi">json</span>.<span class="pl-smi">aaData</span>[i][aiIndex[j]])}<span class="pl-en">_fnAddData</span>(oSettings,aData)}<span class="pl-k">else</span>{<span class="pl-en">_fnAddData</span>(oSettings,<span class="pl-smi">json</span>.<span class="pl-smi">aaData</span>[i])</td>
      </tr>
      <tr>
        <td id="L2190" class="blob-num js-line-number" data-line-number="2190"></td>
        <td id="LC2190" class="blob-code blob-code-inner js-file-line">}}<span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplay</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplayMaster</span>.<span class="pl-c1">slice</span>();<span class="pl-smi">oSettings</span>.<span class="pl-smi">bAjaxDataGet</span><span class="pl-k">=</span><span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L2191" class="blob-num js-line-number" data-line-number="2191"></td>
        <td id="LC2191" class="blob-code blob-code-inner js-file-line"><span class="pl-en">_fnDraw</span>(oSettings);<span class="pl-smi">oSettings</span>.<span class="pl-smi">bAjaxDataGet</span><span class="pl-k">=</span><span class="pl-c1">true</span>;<span class="pl-en">_fnProcessingDisplay</span>(oSettings,<span class="pl-c1">false</span>)</td>
      </tr>
      <tr>
        <td id="L2192" class="blob-num js-line-number" data-line-number="2192"></td>
        <td id="LC2192" class="blob-code blob-code-inner js-file-line">}function _fnAddOptionsHtml(oSettings){var nHolding=document.createElement(&quot;div&quot;);</td>
      </tr>
      <tr>
        <td id="L2193" class="blob-num js-line-number" data-line-number="2193"></td>
        <td id="LC2193" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">oSettings</span>.<span class="pl-smi">nTable</span>.<span class="pl-c1">parentNode</span>.<span class="pl-c1">insertBefore</span>(nHolding,<span class="pl-smi">oSettings</span>.<span class="pl-smi">nTable</span>);<span class="pl-k">var</span> nWrapper<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>div<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2194" class="blob-num js-line-number" data-line-number="2194"></td>
        <td id="LC2194" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">nWrapper</span>.<span class="pl-c1">className</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oClasses</span>.<span class="pl-smi">sWrapper</span>;<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">sTableId</span><span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>){<span class="pl-smi">nWrapper</span>.<span class="pl-c1">setAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>id<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">oSettings</span>.<span class="pl-smi">sTableId</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>_wrapper<span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2195" class="blob-num js-line-number" data-line-number="2195"></td>
        <td id="LC2195" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">var</span> nInsertNode<span class="pl-k">=</span>nWrapper;<span class="pl-k">var</span> sDom<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">sDom</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>H<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2196" class="blob-num js-line-number" data-line-number="2196"></td>
        <td id="LC2196" class="blob-code blob-code-inner js-file-line">sDom<span class="pl-k">=</span><span class="pl-smi">sDom</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>F<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2197" class="blob-num js-line-number" data-line-number="2197"></td>
        <td id="LC2197" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> aDom<span class="pl-k">=</span><span class="pl-smi">sDom</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> nTmp,iPushFeature,cOption,nNewNode,cNext,sClass,j;<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2198" class="blob-num js-line-number" data-line-number="2198"></td>
        <td id="LC2198" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">&lt;</span><span class="pl-smi">aDom</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>){iPushFeature<span class="pl-k">=</span><span class="pl-c1">0</span>;cOption<span class="pl-k">=</span>aDom[i];<span class="pl-k">if</span>(cOption<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span>){nNewNode<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>div<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2199" class="blob-num js-line-number" data-line-number="2199"></td>
        <td id="LC2199" class="blob-code blob-code-inner js-file-line">cNext<span class="pl-k">=</span>aDom[i<span class="pl-k">+</span><span class="pl-c1">1</span>];<span class="pl-k">if</span>(cNext<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>cNext<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span>){sClass<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;j<span class="pl-k">=</span><span class="pl-c1">2</span>;<span class="pl-k">while</span>(aDom[i<span class="pl-k">+</span>j]<span class="pl-k">!=</span>cNext){sClass<span class="pl-k">+=</span>aDom[i<span class="pl-k">+</span>j];</td>
      </tr>
      <tr>
        <td id="L2200" class="blob-num js-line-number" data-line-number="2200"></td>
        <td id="LC2200" class="blob-code blob-code-inner js-file-line">j<span class="pl-k">++</span>}<span class="pl-smi">nNewNode</span>.<span class="pl-c1">className</span><span class="pl-k">=</span>sClass;i<span class="pl-k">+=</span>j}<span class="pl-smi">nInsertNode</span>.<span class="pl-c1">appendChild</span>(nNewNode);nInsertNode<span class="pl-k">=</span>nNewNode</td>
      </tr>
      <tr>
        <td id="L2201" class="blob-num js-line-number" data-line-number="2201"></td>
        <td id="LC2201" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">else</span>{<span class="pl-k">if</span>(cOption<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>){nInsertNode<span class="pl-k">=</span><span class="pl-smi">nInsertNode</span>.<span class="pl-c1">parentNode</span>}<span class="pl-k">else</span>{<span class="pl-k">if</span>(cOption<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>l<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>.<span class="pl-smi">bPaginate</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>.<span class="pl-smi">bLengthChange</span>){nTmp<span class="pl-k">=</span><span class="pl-en">_fnFeatureHtmlLength</span>(oSettings);</td>
      </tr>
      <tr>
        <td id="L2202" class="blob-num js-line-number" data-line-number="2202"></td>
        <td id="LC2202" class="blob-code blob-code-inner js-file-line">iPushFeature<span class="pl-k">=</span><span class="pl-c1">1</span>}<span class="pl-k">else</span>{<span class="pl-k">if</span>(cOption<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>f<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>.<span class="pl-smi">bFilter</span>){nTmp<span class="pl-k">=</span><span class="pl-en">_fnFeatureHtmlFilter</span>(oSettings);</td>
      </tr>
      <tr>
        <td id="L2203" class="blob-num js-line-number" data-line-number="2203"></td>
        <td id="LC2203" class="blob-code blob-code-inner js-file-line">iPushFeature<span class="pl-k">=</span><span class="pl-c1">1</span>}<span class="pl-k">else</span>{<span class="pl-k">if</span>(cOption<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>r<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>.<span class="pl-smi">bProcessing</span>){nTmp<span class="pl-k">=</span><span class="pl-en">_fnFeatureHtmlProcessing</span>(oSettings);</td>
      </tr>
      <tr>
        <td id="L2204" class="blob-num js-line-number" data-line-number="2204"></td>
        <td id="LC2204" class="blob-code blob-code-inner js-file-line">iPushFeature<span class="pl-k">=</span><span class="pl-c1">1</span>}<span class="pl-k">else</span>{<span class="pl-k">if</span>(cOption<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>t<span class="pl-pds">&quot;</span></span>){nTmp<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">nTable</span>;iPushFeature<span class="pl-k">=</span><span class="pl-c1">1</span>}<span class="pl-k">else</span>{<span class="pl-k">if</span>(cOption<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>i<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>.<span class="pl-smi">bInfo</span>){nTmp<span class="pl-k">=</span><span class="pl-en">_fnFeatureHtmlInfo</span>(oSettings);</td>
      </tr>
      <tr>
        <td id="L2205" class="blob-num js-line-number" data-line-number="2205"></td>
        <td id="LC2205" class="blob-code blob-code-inner js-file-line">iPushFeature<span class="pl-k">=</span><span class="pl-c1">1</span>}<span class="pl-k">else</span>{<span class="pl-k">if</span>(cOption<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>p<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>.<span class="pl-smi">bPaginate</span>){nTmp<span class="pl-k">=</span><span class="pl-en">_fnFeatureHtmlPaginate</span>(oSettings);</td>
      </tr>
      <tr>
        <td id="L2206" class="blob-num js-line-number" data-line-number="2206"></td>
        <td id="LC2206" class="blob-code blob-code-inner js-file-line">iPushFeature<span class="pl-k">=</span><span class="pl-c1">1</span>}<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-smi">_oExt</span>.<span class="pl-smi">aoFeatures</span>.<span class="pl-c1">length</span><span class="pl-k">!==</span><span class="pl-c1">0</span>){<span class="pl-k">var</span> aoFeatures<span class="pl-k">=</span><span class="pl-smi">_oExt</span>.<span class="pl-smi">aoFeatures</span>;</td>
      </tr>
      <tr>
        <td id="L2207" class="blob-num js-line-number" data-line-number="2207"></td>
        <td id="LC2207" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-c1">0</span>,kLen<span class="pl-k">=</span><span class="pl-smi">aoFeatures</span>.<span class="pl-c1">length</span>;k<span class="pl-k">&lt;</span>kLen;k<span class="pl-k">++</span>){<span class="pl-k">if</span>(cOption<span class="pl-k">==</span>aoFeatures[k].<span class="pl-smi">cFeature</span>){nTmp<span class="pl-k">=</span>aoFeatures[k].<span class="pl-en">fnInit</span>(oSettings);</td>
      </tr>
      <tr>
        <td id="L2208" class="blob-num js-line-number" data-line-number="2208"></td>
        <td id="LC2208" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(nTmp){iPushFeature<span class="pl-k">=</span><span class="pl-c1">1</span>}<span class="pl-k">break</span>}}}}}}}}}}}<span class="pl-k">if</span>(iPushFeature<span class="pl-k">==</span><span class="pl-c1">1</span>){<span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-smi">oSettings</span>.<span class="pl-smi">aanFeatures</span>[cOption]<span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aanFeatures</span>[cOption]<span class="pl-k">=</span>[]</td>
      </tr>
      <tr>
        <td id="L2209" class="blob-num js-line-number" data-line-number="2209"></td>
        <td id="LC2209" class="blob-code blob-code-inner js-file-line">}<span class="pl-smi">oSettings</span>.<span class="pl-smi">aanFeatures</span>[cOption].<span class="pl-c1">push</span>(nTmp);<span class="pl-smi">nInsertNode</span>.<span class="pl-c1">appendChild</span>(nTmp)}}<span class="pl-smi">nHolding</span>.<span class="pl-c1">parentNode</span>.<span class="pl-c1">replaceChild</span>(nWrapper,nHolding)</td>
      </tr>
      <tr>
        <td id="L2210" class="blob-num js-line-number" data-line-number="2210"></td>
        <td id="LC2210" class="blob-code blob-code-inner js-file-line">}function _fnFeatureHtmlFilter(oSettings){var nFilter=document.createElement(&quot;div&quot;);</td>
      </tr>
      <tr>
        <td id="L2211" class="blob-num js-line-number" data-line-number="2211"></td>
        <td id="LC2211" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">sTableId</span><span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-k">typeof</span> <span class="pl-smi">oSettings</span>.<span class="pl-smi">aanFeatures</span>.<span class="pl-smi">f</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>){<span class="pl-smi">nFilter</span>.<span class="pl-c1">setAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>id<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">oSettings</span>.<span class="pl-smi">sTableId</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>_filter<span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2212" class="blob-num js-line-number" data-line-number="2212"></td>
        <td id="LC2212" class="blob-code blob-code-inner js-file-line">}<span class="pl-smi">nFilter</span>.<span class="pl-c1">className</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oClasses</span>.<span class="pl-smi">sFilter</span>;<span class="pl-k">var</span> sSpace<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oLanguage</span>.<span class="pl-smi">sSearch</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2213" class="blob-num js-line-number" data-line-number="2213"></td>
        <td id="LC2213" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">nFilter</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oLanguage</span>.<span class="pl-smi">sSearch</span><span class="pl-k">+</span>sSpace<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;input type=&quot;text&quot; /&gt;<span class="pl-pds">&#39;</span></span>;<span class="pl-k">var</span> jqFilter<span class="pl-k">=</span><span class="pl-en">$</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>input<span class="pl-pds">&quot;</span></span>,nFilter);</td>
      </tr>
      <tr>
        <td id="L2214" class="blob-num js-line-number" data-line-number="2214"></td>
        <td id="LC2214" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">jqFilter</span>.<span class="pl-en">val</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oPreviousSearch</span>.<span class="pl-smi">sSearch</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&amp;quot;<span class="pl-pds">&quot;</span></span>));<span class="pl-smi">jqFilter</span>.<span class="pl-en">keyup</span>(<span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aanFeatures</span>.<span class="pl-smi">f</span>;</td>
      </tr>
      <tr>
        <td id="L2215" class="blob-num js-line-number" data-line-number="2215"></td>
        <td id="LC2215" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>,iLen<span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-c1">length</span>;i<span class="pl-k">&lt;</span>iLen;i<span class="pl-k">++</span>){<span class="pl-k">if</span>(n[i]<span class="pl-k">!=</span><span class="pl-c1">this</span>.<span class="pl-c1">parentNode</span>){<span class="pl-en">$</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>input<span class="pl-pds">&quot;</span></span>,n[i]).<span class="pl-en">val</span>(<span class="pl-c1">this</span>.<span class="pl-c1">value</span>)</td>
      </tr>
      <tr>
        <td id="L2216" class="blob-num js-line-number" data-line-number="2216"></td>
        <td id="LC2216" class="blob-code blob-code-inner js-file-line">}}<span class="pl-en">_fnFilterComplete</span>(oSettings,{sSearch<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-c1">value</span>,bEscapeRegex<span class="pl-k">:</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oPreviousSearch</span>.<span class="pl-smi">bEscapeRegex</span>})</td>
      </tr>
      <tr>
        <td id="L2217" class="blob-num js-line-number" data-line-number="2217"></td>
        <td id="LC2217" class="blob-code blob-code-inner js-file-line">});<span class="pl-smi">jqFilter</span>.<span class="pl-en">keypress</span>(<span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">if</span>(<span class="pl-smi">e</span>.<span class="pl-smi">keyCode</span><span class="pl-k">==</span><span class="pl-c1">13</span>){<span class="pl-k">return</span> <span class="pl-c1">false</span>}});<span class="pl-k">return</span> nFilter</td>
      </tr>
      <tr>
        <td id="L2218" class="blob-num js-line-number" data-line-number="2218"></td>
        <td id="LC2218" class="blob-code blob-code-inner js-file-line">}function _fnFilterComplete(oSettings,oInput,iForce){_fnFilter(oSettings,oInput.sSearch,iForce,oInput.bEscapeRegex);</td>
      </tr>
      <tr>
        <td id="L2219" class="blob-num js-line-number" data-line-number="2219"></td>
        <td id="LC2219" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoPreSearchCols</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>){<span class="pl-en">_fnFilterColumn</span>(oSettings,<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoPreSearchCols</span>[i].<span class="pl-smi">sSearch</span>,i,<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoPreSearchCols</span>[i].<span class="pl-smi">bEscapeRegex</span>)</td>
      </tr>
      <tr>
        <td id="L2220" class="blob-num js-line-number" data-line-number="2220"></td>
        <td id="LC2220" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">if</span>(<span class="pl-smi">_oExt</span>.<span class="pl-smi">afnFiltering</span>.<span class="pl-c1">length</span><span class="pl-k">!==</span><span class="pl-c1">0</span>){<span class="pl-en">_fnFilterCustom</span>(oSettings)}<span class="pl-smi">oSettings</span>.<span class="pl-smi">bFiltered</span><span class="pl-k">=</span><span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L2221" class="blob-num js-line-number" data-line-number="2221"></td>
        <td id="LC2221" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayStart</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-en">_fnCalculateEnd</span>(oSettings);<span class="pl-en">_fnDraw</span>(oSettings);<span class="pl-en">_fnBuildSearchArray</span>(oSettings,<span class="pl-c1">0</span>)</td>
      </tr>
      <tr>
        <td id="L2222" class="blob-num js-line-number" data-line-number="2222"></td>
        <td id="LC2222" class="blob-code blob-code-inner js-file-line">}function _fnFilterCustom(oSettings){var afnFilters=_oExt.afnFiltering;for(var i=0,iLen=afnFilters.length;</td>
      </tr>
      <tr>
        <td id="L2223" class="blob-num js-line-number" data-line-number="2223"></td>
        <td id="LC2223" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">&lt;</span>iLen;i<span class="pl-k">++</span>){<span class="pl-k">var</span> iCorrector<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-c1">0</span>,jLen<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplay</span>.<span class="pl-c1">length</span>;j<span class="pl-k">&lt;</span>jLen;j<span class="pl-k">++</span>){<span class="pl-k">var</span> iDisIndex<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplay</span>[j<span class="pl-k">-</span>iCorrector];</td>
      </tr>
      <tr>
        <td id="L2224" class="blob-num js-line-number" data-line-number="2224"></td>
        <td id="LC2224" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">!</span>afnFilters[i](oSettings,<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[iDisIndex].<span class="pl-smi">_aData</span>,iDisIndex)){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplay</span>.<span class="pl-c1">splice</span>(j<span class="pl-k">-</span>iCorrector,<span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L2225" class="blob-num js-line-number" data-line-number="2225"></td>
        <td id="LC2225" class="blob-code blob-code-inner js-file-line">iCorrector<span class="pl-k">++</span>}}}}function _fnFilterColumn(oSettings,sInput,iColumn,bEscapeRegex){if(sInput===&quot;&quot;){return</td>
      </tr>
      <tr>
        <td id="L2226" class="blob-num js-line-number" data-line-number="2226"></td>
        <td id="LC2226" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">var</span> iIndexCorrector<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> sRegexMatch<span class="pl-k">=</span>bEscapeRegex<span class="pl-k">?</span><span class="pl-en">_fnEscapeRegex</span>(sInput)<span class="pl-k">:</span>sInput;</td>
      </tr>
      <tr>
        <td id="L2227" class="blob-num js-line-number" data-line-number="2227"></td>
        <td id="LC2227" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> rpSearch<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">RegExp</span>(sRegexMatch,<span class="pl-s"><span class="pl-pds">&quot;</span>i<span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplay</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;i<span class="pl-k">&gt;=</span><span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2228" class="blob-num js-line-number" data-line-number="2228"></td>
        <td id="LC2228" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">--</span>){<span class="pl-k">var</span> sData<span class="pl-k">=</span><span class="pl-en">_fnDataToSearch</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[<span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplay</span>[i]].<span class="pl-smi">_aData</span>[iColumn],<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[iColumn].<span class="pl-smi">sType</span>);</td>
      </tr>
      <tr>
        <td id="L2229" class="blob-num js-line-number" data-line-number="2229"></td>
        <td id="LC2229" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">rpSearch</span>.<span class="pl-c1">test</span>(sData)){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplay</span>.<span class="pl-c1">splice</span>(i,<span class="pl-c1">1</span>);iIndexCorrector<span class="pl-k">++</span>}}}function _fnFilter(oSettings,sInput,iForce,bEscapeRegex){var i;</td>
      </tr>
      <tr>
        <td id="L2230" class="blob-num js-line-number" data-line-number="2230"></td>
        <td id="LC2230" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">typeof</span> iForce<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>iForce<span class="pl-k">===</span><span class="pl-c1">null</span>){iForce<span class="pl-k">=</span><span class="pl-c1">0</span>}<span class="pl-k">if</span>(<span class="pl-smi">_oExt</span>.<span class="pl-smi">afnFiltering</span>.<span class="pl-c1">length</span><span class="pl-k">!==</span><span class="pl-c1">0</span>){iForce<span class="pl-k">=</span><span class="pl-c1">1</span></td>
      </tr>
      <tr>
        <td id="L2231" class="blob-num js-line-number" data-line-number="2231"></td>
        <td id="LC2231" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">var</span> asSearch<span class="pl-k">=</span>bEscapeRegex<span class="pl-k">?</span><span class="pl-en">_fnEscapeRegex</span>(sInput).<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-smi">sInput</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> sRegExpString<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>^(?=.*?<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">asSearch</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>)(?=.*?<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>).*$<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2232" class="blob-num js-line-number" data-line-number="2232"></td>
        <td id="LC2232" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> rpSearch<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">RegExp</span>(sRegExpString,<span class="pl-s"><span class="pl-pds">&quot;</span>i<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-smi">sInput</span>.<span class="pl-c1">length</span><span class="pl-k">&lt;=</span><span class="pl-c1">0</span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplay</span>.<span class="pl-c1">splice</span>(<span class="pl-c1">0</span>,<span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplay</span>.<span class="pl-c1">length</span>);</td>
      </tr>
      <tr>
        <td id="L2233" class="blob-num js-line-number" data-line-number="2233"></td>
        <td id="LC2233" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplay</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplayMaster</span>.<span class="pl-c1">slice</span>()}<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplay</span>.<span class="pl-c1">length</span><span class="pl-k">==</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplayMaster</span>.<span class="pl-c1">length</span><span class="pl-k">||</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oPreviousSearch</span>.<span class="pl-smi">sSearch</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-smi">sInput</span>.<span class="pl-c1">length</span><span class="pl-k">||</span>iForce<span class="pl-k">==</span><span class="pl-c1">1</span><span class="pl-k">||</span><span class="pl-smi">sInput</span>.<span class="pl-c1">indexOf</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oPreviousSearch</span>.<span class="pl-smi">sSearch</span>)<span class="pl-k">!==</span><span class="pl-c1">0</span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplay</span>.<span class="pl-c1">splice</span>(<span class="pl-c1">0</span>,<span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplay</span>.<span class="pl-c1">length</span>);</td>
      </tr>
      <tr>
        <td id="L2234" class="blob-num js-line-number" data-line-number="2234"></td>
        <td id="LC2234" class="blob-code blob-code-inner js-file-line"><span class="pl-en">_fnBuildSearchArray</span>(oSettings,<span class="pl-c1">1</span>);<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplayMaster</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>){<span class="pl-k">if</span>(<span class="pl-smi">rpSearch</span>.<span class="pl-c1">test</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">asDataSearch</span>[i])){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplay</span>.<span class="pl-c1">push</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplayMaster</span>[i])</td>
      </tr>
      <tr>
        <td id="L2235" class="blob-num js-line-number" data-line-number="2235"></td>
        <td id="LC2235" class="blob-code blob-code-inner js-file-line">}}}<span class="pl-k">else</span>{<span class="pl-k">var</span> iIndexCorrector<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">asDataSearch</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">rpSearch</span>.<span class="pl-c1">test</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">asDataSearch</span>[i])){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplay</span>.<span class="pl-c1">splice</span>(i<span class="pl-k">-</span>iIndexCorrector,<span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L2236" class="blob-num js-line-number" data-line-number="2236"></td>
        <td id="LC2236" class="blob-code blob-code-inner js-file-line">iIndexCorrector<span class="pl-k">++</span>}}}}<span class="pl-smi">oSettings</span>.<span class="pl-smi">oPreviousSearch</span>.<span class="pl-smi">sSearch</span><span class="pl-k">=</span>sInput;<span class="pl-smi">oSettings</span>.<span class="pl-smi">oPreviousSearch</span>.<span class="pl-smi">bEscapeRegex</span><span class="pl-k">=</span>bEscapeRegex</td>
      </tr>
      <tr>
        <td id="L2237" class="blob-num js-line-number" data-line-number="2237"></td>
        <td id="LC2237" class="blob-code blob-code-inner js-file-line">}function _fnBuildSearchArray(oSettings,iMaster){oSettings.asDataSearch.splice(0,oSettings.asDataSearch.length);</td>
      </tr>
      <tr>
        <td id="L2238" class="blob-num js-line-number" data-line-number="2238"></td>
        <td id="LC2238" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> aArray<span class="pl-k">=</span>(<span class="pl-k">typeof</span> iMaster<span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>iMaster<span class="pl-k">==</span><span class="pl-c1">1</span>)<span class="pl-k">?</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplayMaster</span><span class="pl-k">:</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplay</span>;</td>
      </tr>
      <tr>
        <td id="L2239" class="blob-num js-line-number" data-line-number="2239"></td>
        <td id="LC2239" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>,iLen<span class="pl-k">=</span><span class="pl-smi">aArray</span>.<span class="pl-c1">length</span>;i<span class="pl-k">&lt;</span>iLen;i<span class="pl-k">++</span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">asDataSearch</span>[i]<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-c1">0</span>,jLen<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2240" class="blob-num js-line-number" data-line-number="2240"></td>
        <td id="LC2240" class="blob-code blob-code-inner js-file-line">j<span class="pl-k">&lt;</span>jLen;j<span class="pl-k">++</span>){<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[j].<span class="pl-smi">bSearchable</span>){<span class="pl-k">var</span> sData<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[aArray[i]].<span class="pl-smi">_aData</span>[j];</td>
      </tr>
      <tr>
        <td id="L2241" class="blob-num js-line-number" data-line-number="2241"></td>
        <td id="LC2241" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">oSettings</span>.<span class="pl-smi">asDataSearch</span>[i]<span class="pl-k">+=</span><span class="pl-en">_fnDataToSearch</span>(sData,<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[j].<span class="pl-smi">sType</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L2242" class="blob-num js-line-number" data-line-number="2242"></td>
        <td id="LC2242" class="blob-code blob-code-inner js-file-line">}}}}function _fnDataToSearch(sData,sType){if(typeof _oExt.ofnSearch[sType]==&quot;function&quot;){return _oExt.ofnSearch[sType](sData)</td>
      </tr>
      <tr>
        <td id="L2243" class="blob-num js-line-number" data-line-number="2243"></td>
        <td id="LC2243" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">else</span>{<span class="pl-k">if</span>(sType<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>html<span class="pl-pds">&quot;</span></span>){<span class="pl-k">return</span> <span class="pl-smi">sData</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\n</span><span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;<span class="pl-c1">.</span><span class="pl-k">*?</span>&gt;<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)}<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-k">typeof</span> sData<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>){<span class="pl-k">return</span> <span class="pl-smi">sData</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\n</span><span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2244" class="blob-num js-line-number" data-line-number="2244"></td>
        <td id="LC2244" class="blob-code blob-code-inner js-file-line">}}}<span class="pl-k">return</span> sData}function _fnSort(oSettings,bApplyClasses){var aaSort=[];var oSort=_oExt.oSort;</td>
      </tr>
      <tr>
        <td id="L2245" class="blob-num js-line-number" data-line-number="2245"></td>
        <td id="LC2245" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> aoData<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>;<span class="pl-k">var</span> iDataSort;<span class="pl-k">var</span> iDataType;<span class="pl-k">var</span> i,j,jLen;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>.<span class="pl-smi">bServerSide</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSorting</span>.<span class="pl-c1">length</span><span class="pl-k">!==</span><span class="pl-c1">0</span><span class="pl-k">||</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSortingFixed</span><span class="pl-k">!==</span><span class="pl-c1">null</span>)){<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSortingFixed</span><span class="pl-k">!==</span><span class="pl-c1">null</span>){aaSort<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSortingFixed</span>.<span class="pl-c1">concat</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSorting</span>)</td>
      </tr>
      <tr>
        <td id="L2246" class="blob-num js-line-number" data-line-number="2246"></td>
        <td id="LC2246" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">else</span>{aaSort<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSorting</span>.<span class="pl-c1">slice</span>()}<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">aaSort</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>){<span class="pl-k">var</span> iColumn<span class="pl-k">=</span>aaSort[i][<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L2247" class="blob-num js-line-number" data-line-number="2247"></td>
        <td id="LC2247" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> sDataType<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[iColumn].<span class="pl-smi">sSortDataType</span>;<span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-smi">_oExt</span>.<span class="pl-smi">afnSortData</span>[sDataType]<span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>){<span class="pl-k">var</span> iCorrector<span class="pl-k">=</span><span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2248" class="blob-num js-line-number" data-line-number="2248"></td>
        <td id="LC2248" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> aData<span class="pl-k">=</span><span class="pl-smi">_oExt</span>.<span class="pl-smi">afnSortData</span>[sDataType](oSettings,iColumn);<span class="pl-k">for</span>(j<span class="pl-k">=</span><span class="pl-c1">0</span>,jLen<span class="pl-k">=</span><span class="pl-smi">aoData</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2249" class="blob-num js-line-number" data-line-number="2249"></td>
        <td id="LC2249" class="blob-code blob-code-inner js-file-line">j<span class="pl-k">&lt;</span>jLen;j<span class="pl-k">++</span>){<span class="pl-k">if</span>(aoData[j]<span class="pl-k">!==</span><span class="pl-c1">null</span>){aoData[j].<span class="pl-smi">_aData</span>[iColumn]<span class="pl-k">=</span>aData[iCorrector];iCorrector<span class="pl-k">++</span></td>
      </tr>
      <tr>
        <td id="L2250" class="blob-num js-line-number" data-line-number="2250"></td>
        <td id="LC2250" class="blob-code blob-code-inner js-file-line">}}}}<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">window</span>.<span class="pl-smi">runtime</span>){<span class="pl-k">var</span> fnLocalSorting;<span class="pl-k">var</span> sDynamicSort<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>fnLocalSorting = function(a,b){var iTest;<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2251" class="blob-num js-line-number" data-line-number="2251"></td>
        <td id="LC2251" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">aaSort</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;i<span class="pl-k">++</span>){iDataSort<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[aaSort[i][<span class="pl-c1">0</span>]].<span class="pl-smi">iDataSort</span>;</td>
      </tr>
      <tr>
        <td id="L2252" class="blob-num js-line-number" data-line-number="2252"></td>
        <td id="LC2252" class="blob-code blob-code-inner js-file-line">iDataType<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[iDataSort].<span class="pl-smi">sType</span>;sDynamicSort<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>iTest = oSort[&#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>iDataType<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>aaSort[i][<span class="pl-c1">1</span>]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;]( aoData[a]._aData[<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>iDataSort<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>], aoData[b]._aData[<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>iDataSort<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>] ); if ( iTest === 0 )<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L2253" class="blob-num js-line-number" data-line-number="2253"></td>
        <td id="LC2253" class="blob-code blob-code-inner js-file-line">}iDataSort<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[aaSort[<span class="pl-smi">aaSort</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>][<span class="pl-c1">0</span>]].<span class="pl-smi">iDataSort</span>;iDataType<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[iDataSort].<span class="pl-smi">sType</span>;</td>
      </tr>
      <tr>
        <td id="L2254" class="blob-num js-line-number" data-line-number="2254"></td>
        <td id="LC2254" class="blob-code blob-code-inner js-file-line">sDynamicSort<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>iTest = oSort[&#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>iDataType<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>aaSort[<span class="pl-smi">aaSort</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>][<span class="pl-c1">1</span>]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;]( aoData[a]._aData[<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>iDataSort<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>], aoData[b]._aData[<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>iDataSort<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>] );if (iTest===0) return oSort[&#39;numeric-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>aaSort[<span class="pl-smi">aaSort</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>][<span class="pl-c1">1</span>]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;](a, b); return iTest;}<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2255" class="blob-num js-line-number" data-line-number="2255"></td>
        <td id="LC2255" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">eval</span>(sDynamicSort);<span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplayMaster</span>.<span class="pl-c1">sort</span>(fnLocalSorting)}<span class="pl-k">else</span>{<span class="pl-k">var</span> aAirSort<span class="pl-k">=</span>[];</td>
      </tr>
      <tr>
        <td id="L2256" class="blob-num js-line-number" data-line-number="2256"></td>
        <td id="LC2256" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> iLen<span class="pl-k">=</span><span class="pl-smi">aaSort</span>.<span class="pl-c1">length</span>;<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>iLen;i<span class="pl-k">++</span>){iDataSort<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[aaSort[i][<span class="pl-c1">0</span>]].<span class="pl-smi">iDataSort</span>;</td>
      </tr>
      <tr>
        <td id="L2257" class="blob-num js-line-number" data-line-number="2257"></td>
        <td id="LC2257" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">aAirSort</span>.<span class="pl-c1">push</span>([iDataSort,<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[iDataSort].<span class="pl-smi">sType</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>aaSort[i][<span class="pl-c1">1</span>]])}<span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplayMaster</span>.<span class="pl-c1">sort</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> iTest;</td>
      </tr>
      <tr>
        <td id="L2258" class="blob-num js-line-number" data-line-number="2258"></td>
        <td id="LC2258" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>iLen;i<span class="pl-k">++</span>){iTest<span class="pl-k">=</span>oSort[aAirSort[i][<span class="pl-c1">1</span>]](aoData[a].<span class="pl-smi">_aData</span>[aAirSort[i][<span class="pl-c1">0</span>]],aoData[b].<span class="pl-smi">_aData</span>[aAirSort[i][<span class="pl-c1">0</span>]]);</td>
      </tr>
      <tr>
        <td id="L2259" class="blob-num js-line-number" data-line-number="2259"></td>
        <td id="LC2259" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(iTest<span class="pl-k">!==</span><span class="pl-c1">0</span>){<span class="pl-k">return</span> iTest}}<span class="pl-k">return</span> <span class="pl-c1">0</span>})}}<span class="pl-k">if</span>(<span class="pl-k">typeof</span> bApplyClasses<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>bApplyClasses){<span class="pl-en">_fnSortingClasses</span>(oSettings)</td>
      </tr>
      <tr>
        <td id="L2260" class="blob-num js-line-number" data-line-number="2260"></td>
        <td id="LC2260" class="blob-code blob-code-inner js-file-line">}<span class="pl-smi">oSettings</span>.<span class="pl-smi">bSorted</span><span class="pl-k">=</span><span class="pl-c1">true</span>;<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>.<span class="pl-smi">bFilter</span>){<span class="pl-en">_fnFilterComplete</span>(oSettings,<span class="pl-smi">oSettings</span>.<span class="pl-smi">oPreviousSearch</span>,<span class="pl-c1">1</span>)</td>
      </tr>
      <tr>
        <td id="L2261" class="blob-num js-line-number" data-line-number="2261"></td>
        <td id="LC2261" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">else</span>{<span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplay</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplayMaster</span>.<span class="pl-c1">slice</span>();<span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayStart</span><span class="pl-k">=</span><span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2262" class="blob-num js-line-number" data-line-number="2262"></td>
        <td id="LC2262" class="blob-code blob-code-inner js-file-line"><span class="pl-en">_fnCalculateEnd</span>(oSettings);<span class="pl-en">_fnDraw</span>(oSettings)}}function _fnSortAttachListener(oSettings,nNode,iDataIndex,fnCallback){$(nNode).click(function(e){if(oSettings.aoColumns[iDataIndex].bSortable===false){return</td>
      </tr>
      <tr>
        <td id="L2263" class="blob-num js-line-number" data-line-number="2263"></td>
        <td id="LC2263" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">var</span> <span class="pl-en">fnInnerSorting</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> iColumn,iNextSort;<span class="pl-k">if</span>(<span class="pl-smi">e</span>.<span class="pl-smi">shiftKey</span>){<span class="pl-k">var</span> bFound<span class="pl-k">=</span><span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L2264" class="blob-num js-line-number" data-line-number="2264"></td>
        <td id="LC2264" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSorting</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>){<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSorting</span>[i][<span class="pl-c1">0</span>]<span class="pl-k">==</span>iDataIndex){bFound<span class="pl-k">=</span><span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L2265" class="blob-num js-line-number" data-line-number="2265"></td>
        <td id="LC2265" class="blob-code blob-code-inner js-file-line">iColumn<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSorting</span>[i][<span class="pl-c1">0</span>];iNextSort<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSorting</span>[i][<span class="pl-c1">2</span>]<span class="pl-k">+</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[iColumn].<span class="pl-smi">asSorting</span>[iNextSort]<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSorting</span>.<span class="pl-c1">splice</span>(i,<span class="pl-c1">1</span>)</td>
      </tr>
      <tr>
        <td id="L2266" class="blob-num js-line-number" data-line-number="2266"></td>
        <td id="LC2266" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">else</span>{<span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSorting</span>[i][<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[iColumn].<span class="pl-smi">asSorting</span>[iNextSort];</td>
      </tr>
      <tr>
        <td id="L2267" class="blob-num js-line-number" data-line-number="2267"></td>
        <td id="LC2267" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSorting</span>[i][<span class="pl-c1">2</span>]<span class="pl-k">=</span>iNextSort}<span class="pl-k">break</span>}}<span class="pl-k">if</span>(bFound<span class="pl-k">===</span><span class="pl-c1">false</span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSorting</span>.<span class="pl-c1">push</span>([iDataIndex,<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[iDataIndex].<span class="pl-smi">asSorting</span>[<span class="pl-c1">0</span>],<span class="pl-c1">0</span>])</td>
      </tr>
      <tr>
        <td id="L2268" class="blob-num js-line-number" data-line-number="2268"></td>
        <td id="LC2268" class="blob-code blob-code-inner js-file-line">}}<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSorting</span>.<span class="pl-c1">length</span><span class="pl-k">==</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSorting</span>[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>]<span class="pl-k">==</span>iDataIndex){iColumn<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSorting</span>[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L2269" class="blob-num js-line-number" data-line-number="2269"></td>
        <td id="LC2269" class="blob-code blob-code-inner js-file-line">iNextSort<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSorting</span>[<span class="pl-c1">0</span>][<span class="pl-c1">2</span>]<span class="pl-k">+</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[iColumn].<span class="pl-smi">asSorting</span>[iNextSort]<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>){iNextSort<span class="pl-k">=</span><span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L2270" class="blob-num js-line-number" data-line-number="2270"></td>
        <td id="LC2270" class="blob-code blob-code-inner js-file-line">}<span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSorting</span>[<span class="pl-c1">0</span>][<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[iColumn].<span class="pl-smi">asSorting</span>[iNextSort];<span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSorting</span>[<span class="pl-c1">0</span>][<span class="pl-c1">2</span>]<span class="pl-k">=</span>iNextSort</td>
      </tr>
      <tr>
        <td id="L2271" class="blob-num js-line-number" data-line-number="2271"></td>
        <td id="LC2271" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">else</span>{<span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSorting</span>.<span class="pl-c1">splice</span>(<span class="pl-c1">0</span>,<span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSorting</span>.<span class="pl-c1">length</span>);<span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSorting</span>.<span class="pl-c1">push</span>([iDataIndex,<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[iDataIndex].<span class="pl-smi">asSorting</span>[<span class="pl-c1">0</span>],<span class="pl-c1">0</span>])</td>
      </tr>
      <tr>
        <td id="L2272" class="blob-num js-line-number" data-line-number="2272"></td>
        <td id="LC2272" class="blob-code blob-code-inner js-file-line">}}<span class="pl-en">_fnSort</span>(oSettings)};<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>.<span class="pl-smi">bProcessing</span>){<span class="pl-en">fnInnerSorting</span>()}<span class="pl-k">else</span>{<span class="pl-en">_fnProcessingDisplay</span>(oSettings,<span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L2273" class="blob-num js-line-number" data-line-number="2273"></td>
        <td id="LC2273" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">setTimeout</span>(<span class="pl-k">function</span>(){<span class="pl-en">fnInnerSorting</span>();<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>.<span class="pl-smi">bServerSide</span>){<span class="pl-en">_fnProcessingDisplay</span>(oSettings,<span class="pl-c1">false</span>)</td>
      </tr>
      <tr>
        <td id="L2274" class="blob-num js-line-number" data-line-number="2274"></td>
        <td id="LC2274" class="blob-code blob-code-inner js-file-line">}},<span class="pl-c1">0</span>)}<span class="pl-k">if</span>(<span class="pl-k">typeof</span> fnCallback<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>){<span class="pl-en">fnCallback</span>(oSettings)}})}function _fnSortingClasses(oSettings){var i,iLen,j,jLen,iFound;</td>
      </tr>
      <tr>
        <td id="L2275" class="blob-num js-line-number" data-line-number="2275"></td>
        <td id="LC2275" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> aaSort,sClass;<span class="pl-k">var</span> iColumns<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>.<span class="pl-c1">length</span>;<span class="pl-k">var</span> oClasses<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oClasses</span>;</td>
      </tr>
      <tr>
        <td id="L2276" class="blob-num js-line-number" data-line-number="2276"></td>
        <td id="LC2276" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>iColumns;i<span class="pl-k">++</span>){<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">bSortable</span>){<span class="pl-en">$</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">nTh</span>).<span class="pl-en">removeClass</span>(<span class="pl-smi">oClasses</span>.<span class="pl-smi">sSortAsc</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">oClasses</span>.<span class="pl-smi">sSortDesc</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">sSortingClass</span>)</td>
      </tr>
      <tr>
        <td id="L2277" class="blob-num js-line-number" data-line-number="2277"></td>
        <td id="LC2277" class="blob-code blob-code-inner js-file-line">}}<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSortingFixed</span><span class="pl-k">!==</span><span class="pl-c1">null</span>){aaSort<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSortingFixed</span>.<span class="pl-c1">concat</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSorting</span>)</td>
      </tr>
      <tr>
        <td id="L2278" class="blob-num js-line-number" data-line-number="2278"></td>
        <td id="LC2278" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">else</span>{aaSort<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSorting</span>.<span class="pl-c1">slice</span>()}<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>){<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">bSortable</span>){sClass<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">sSortingClass</span>;</td>
      </tr>
      <tr>
        <td id="L2279" class="blob-num js-line-number" data-line-number="2279"></td>
        <td id="LC2279" class="blob-code blob-code-inner js-file-line">iFound<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-k">for</span>(j<span class="pl-k">=</span><span class="pl-c1">0</span>;j<span class="pl-k">&lt;</span><span class="pl-smi">aaSort</span>.<span class="pl-c1">length</span>;j<span class="pl-k">++</span>){<span class="pl-k">if</span>(aaSort[j][<span class="pl-c1">0</span>]<span class="pl-k">==</span>i){sClass<span class="pl-k">=</span>(aaSort[j][<span class="pl-c1">1</span>]<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>asc<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span><span class="pl-smi">oClasses</span>.<span class="pl-smi">sSortAsc</span><span class="pl-k">:</span><span class="pl-smi">oClasses</span>.<span class="pl-smi">sSortDesc</span>;</td>
      </tr>
      <tr>
        <td id="L2280" class="blob-num js-line-number" data-line-number="2280"></td>
        <td id="LC2280" class="blob-code blob-code-inner js-file-line">iFound<span class="pl-k">=</span>j;<span class="pl-k">break</span>}}<span class="pl-en">$</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">nTh</span>).<span class="pl-en">addClass</span>(sClass);<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">bJUI</span>){<span class="pl-k">var</span> jqSpan<span class="pl-k">=</span><span class="pl-en">$</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>span<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">nTh</span>);</td>
      </tr>
      <tr>
        <td id="L2281" class="blob-num js-line-number" data-line-number="2281"></td>
        <td id="LC2281" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">jqSpan</span>.<span class="pl-en">removeClass</span>(<span class="pl-smi">oClasses</span>.<span class="pl-smi">sSortJUIAsc</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">oClasses</span>.<span class="pl-smi">sSortJUIDesc</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">oClasses</span>.<span class="pl-smi">sSortJUI</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">oClasses</span>.<span class="pl-smi">sSortJUIAscAllowed</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">oClasses</span>.<span class="pl-smi">sSortJUIDescAllowed</span>);</td>
      </tr>
      <tr>
        <td id="L2282" class="blob-num js-line-number" data-line-number="2282"></td>
        <td id="LC2282" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> sSpanClass;<span class="pl-k">if</span>(iFound<span class="pl-k">==</span><span class="pl-k">-</span><span class="pl-c1">1</span>){sSpanClass<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">sSortingClassJUI</span>}<span class="pl-k">else</span>{<span class="pl-k">if</span>(aaSort[iFound][<span class="pl-c1">1</span>]<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>asc<span class="pl-pds">&quot;</span></span>){sSpanClass<span class="pl-k">=</span><span class="pl-smi">oClasses</span>.<span class="pl-smi">sSortJUIAsc</span></td>
      </tr>
      <tr>
        <td id="L2283" class="blob-num js-line-number" data-line-number="2283"></td>
        <td id="LC2283" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">else</span>{sSpanClass<span class="pl-k">=</span><span class="pl-smi">oClasses</span>.<span class="pl-smi">sSortJUIDesc</span>}}<span class="pl-smi">jqSpan</span>.<span class="pl-en">addClass</span>(sSpanClass)}}<span class="pl-k">else</span>{<span class="pl-en">$</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">nTh</span>).<span class="pl-en">addClass</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">sSortingClass</span>)</td>
      </tr>
      <tr>
        <td id="L2284" class="blob-num js-line-number" data-line-number="2284"></td>
        <td id="LC2284" class="blob-code blob-code-inner js-file-line">}}sClass<span class="pl-k">=</span><span class="pl-smi">oClasses</span>.<span class="pl-smi">sSortColumn</span>;<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>.<span class="pl-smi">bSort</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>.<span class="pl-smi">bSortClasses</span>){<span class="pl-k">var</span> nTds<span class="pl-k">=</span><span class="pl-en">_fnGetTdNodes</span>(oSettings);</td>
      </tr>
      <tr>
        <td id="L2285" class="blob-num js-line-number" data-line-number="2285"></td>
        <td id="LC2285" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">nTds</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;=</span>iColumns){<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>iColumns;i<span class="pl-k">++</span>){<span class="pl-k">if</span>(nTds[i].<span class="pl-c1">className</span>.<span class="pl-c1">indexOf</span>(sClass<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>1<span class="pl-pds">&quot;</span></span>)<span class="pl-k">!=</span><span class="pl-k">-</span><span class="pl-c1">1</span>){<span class="pl-k">for</span>(j<span class="pl-k">=</span><span class="pl-c1">0</span>,jLen<span class="pl-k">=</span>(<span class="pl-smi">nTds</span>.<span class="pl-c1">length</span><span class="pl-k">/</span>iColumns);</td>
      </tr>
      <tr>
        <td id="L2286" class="blob-num js-line-number" data-line-number="2286"></td>
        <td id="LC2286" class="blob-code blob-code-inner js-file-line">j<span class="pl-k">&lt;</span>jLen;j<span class="pl-k">++</span>){nTds[(iColumns<span class="pl-k">*</span>j)<span class="pl-k">+</span>i].<span class="pl-c1">className</span><span class="pl-k">=</span>nTds[(iColumns<span class="pl-k">*</span>j)<span class="pl-k">+</span>i].<span class="pl-c1">className</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>sClass<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>1<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2287" class="blob-num js-line-number" data-line-number="2287"></td>
        <td id="LC2287" class="blob-code blob-code-inner js-file-line">}}<span class="pl-k">else</span>{<span class="pl-k">if</span>(nTds[i].<span class="pl-c1">className</span>.<span class="pl-c1">indexOf</span>(sClass<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>2<span class="pl-pds">&quot;</span></span>)<span class="pl-k">!=</span><span class="pl-k">-</span><span class="pl-c1">1</span>){<span class="pl-k">for</span>(j<span class="pl-k">=</span><span class="pl-c1">0</span>,jLen<span class="pl-k">=</span>(<span class="pl-smi">nTds</span>.<span class="pl-c1">length</span><span class="pl-k">/</span>iColumns);</td>
      </tr>
      <tr>
        <td id="L2288" class="blob-num js-line-number" data-line-number="2288"></td>
        <td id="LC2288" class="blob-code blob-code-inner js-file-line">j<span class="pl-k">&lt;</span>jLen;j<span class="pl-k">++</span>){nTds[(iColumns<span class="pl-k">*</span>j)<span class="pl-k">+</span>i].<span class="pl-c1">className</span><span class="pl-k">=</span>nTds[(iColumns<span class="pl-k">*</span>j)<span class="pl-k">+</span>i].<span class="pl-c1">className</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>sClass<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>2<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2289" class="blob-num js-line-number" data-line-number="2289"></td>
        <td id="LC2289" class="blob-code blob-code-inner js-file-line">}}<span class="pl-k">else</span>{<span class="pl-k">if</span>(nTds[i].<span class="pl-c1">className</span>.<span class="pl-c1">indexOf</span>(sClass<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>3<span class="pl-pds">&quot;</span></span>)<span class="pl-k">!=</span><span class="pl-k">-</span><span class="pl-c1">1</span>){<span class="pl-k">for</span>(j<span class="pl-k">=</span><span class="pl-c1">0</span>,jLen<span class="pl-k">=</span>(<span class="pl-smi">nTds</span>.<span class="pl-c1">length</span><span class="pl-k">/</span>iColumns);</td>
      </tr>
      <tr>
        <td id="L2290" class="blob-num js-line-number" data-line-number="2290"></td>
        <td id="LC2290" class="blob-code blob-code-inner js-file-line">j<span class="pl-k">&lt;</span>jLen;j<span class="pl-k">++</span>){nTds[(iColumns<span class="pl-k">*</span>j)<span class="pl-k">+</span>i].<span class="pl-c1">className</span><span class="pl-k">=</span>nTds[(iColumns<span class="pl-k">*</span>j)<span class="pl-k">+</span>i].<span class="pl-c1">className</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>sClass<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>3<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2291" class="blob-num js-line-number" data-line-number="2291"></td>
        <td id="LC2291" class="blob-code blob-code-inner js-file-line">}}}}}}<span class="pl-k">var</span> iClass<span class="pl-k">=</span><span class="pl-c1">1</span>,iTargetCol;<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">aaSort</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>){iTargetCol<span class="pl-k">=</span><span class="pl-c1">parseInt</span>(aaSort[i][<span class="pl-c1">0</span>],<span class="pl-c1">10</span>);</td>
      </tr>
      <tr>
        <td id="L2292" class="blob-num js-line-number" data-line-number="2292"></td>
        <td id="LC2292" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(j<span class="pl-k">=</span><span class="pl-c1">0</span>,jLen<span class="pl-k">=</span>(<span class="pl-smi">nTds</span>.<span class="pl-c1">length</span><span class="pl-k">/</span>iColumns);j<span class="pl-k">&lt;</span>jLen;j<span class="pl-k">++</span>){nTds[(iColumns<span class="pl-k">*</span>j)<span class="pl-k">+</span>iTargetCol].<span class="pl-c1">className</span><span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>sClass<span class="pl-k">+</span>iClass</td>
      </tr>
      <tr>
        <td id="L2293" class="blob-num js-line-number" data-line-number="2293"></td>
        <td id="LC2293" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">if</span>(iClass<span class="pl-k">&lt;</span><span class="pl-c1">3</span>){iClass<span class="pl-k">++</span>}}}}function _fnFeatureHtmlPaginate(oSettings){var nPaginate=document.createElement(&quot;div&quot;);</td>
      </tr>
      <tr>
        <td id="L2294" class="blob-num js-line-number" data-line-number="2294"></td>
        <td id="LC2294" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">nPaginate</span>.<span class="pl-c1">className</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oClasses</span>.<span class="pl-smi">sPaging</span><span class="pl-k">+</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">sPaginationType</span>;<span class="pl-smi">_oExt</span>.<span class="pl-smi">oPagination</span>[<span class="pl-smi">oSettings</span>.<span class="pl-smi">sPaginationType</span>].<span class="pl-en">fnInit</span>(oSettings,nPaginate,<span class="pl-k">function</span>(<span class="pl-smi">oSettings</span>){<span class="pl-en">_fnCalculateEnd</span>(oSettings);</td>
      </tr>
      <tr>
        <td id="L2295" class="blob-num js-line-number" data-line-number="2295"></td>
        <td id="LC2295" class="blob-code blob-code-inner js-file-line"><span class="pl-en">_fnDraw</span>(oSettings)});<span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-smi">oSettings</span>.<span class="pl-smi">aanFeatures</span>.<span class="pl-smi">p</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoDrawCallback</span>.<span class="pl-c1">push</span>({<span class="pl-en">fn</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">oSettings</span>){<span class="pl-smi">_oExt</span>.<span class="pl-smi">oPagination</span>[<span class="pl-smi">oSettings</span>.<span class="pl-smi">sPaginationType</span>].<span class="pl-en">fnUpdate</span>(oSettings,<span class="pl-k">function</span>(<span class="pl-smi">oSettings</span>){<span class="pl-en">_fnCalculateEnd</span>(oSettings);</td>
      </tr>
      <tr>
        <td id="L2296" class="blob-num js-line-number" data-line-number="2296"></td>
        <td id="LC2296" class="blob-code blob-code-inner js-file-line"><span class="pl-en">_fnDraw</span>(oSettings)})},sName<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>pagination<span class="pl-pds">&quot;</span></span>})}<span class="pl-k">return</span> nPaginate}function _fnPageChange(oSettings,sAction){var iOldStart=oSettings._iDisplayStart;</td>
      </tr>
      <tr>
        <td id="L2297" class="blob-num js-line-number" data-line-number="2297"></td>
        <td id="LC2297" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(sAction<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>first<span class="pl-pds">&quot;</span></span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayStart</span><span class="pl-k">=</span><span class="pl-c1">0</span>}<span class="pl-k">else</span>{<span class="pl-k">if</span>(sAction<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>previous<span class="pl-pds">&quot;</span></span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayStart</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayLength</span><span class="pl-k">&gt;=</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayStart</span><span class="pl-k">-</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayLength</span><span class="pl-k">:</span><span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2298" class="blob-num js-line-number" data-line-number="2298"></td>
        <td id="LC2298" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayStart</span><span class="pl-k">&lt;</span><span class="pl-c1">0</span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayStart</span><span class="pl-k">=</span><span class="pl-c1">0</span>}}<span class="pl-k">else</span>{<span class="pl-k">if</span>(sAction<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>next<span class="pl-pds">&quot;</span></span>){<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayLength</span><span class="pl-k">&gt;=</span><span class="pl-c1">0</span>){<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayStart</span><span class="pl-k">+</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayLength</span><span class="pl-k">&lt;</span><span class="pl-smi">oSettings</span>.<span class="pl-en">fnRecordsDisplay</span>()){<span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayStart</span><span class="pl-k">+=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayLength</span></td>
      </tr>
      <tr>
        <td id="L2299" class="blob-num js-line-number" data-line-number="2299"></td>
        <td id="LC2299" class="blob-code blob-code-inner js-file-line">}}<span class="pl-k">else</span>{<span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayStart</span><span class="pl-k">=</span><span class="pl-c1">0</span>}}<span class="pl-k">else</span>{<span class="pl-k">if</span>(sAction<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>last<span class="pl-pds">&quot;</span></span>){<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayLength</span><span class="pl-k">&gt;=</span><span class="pl-c1">0</span>){<span class="pl-k">var</span> iPages<span class="pl-k">=</span><span class="pl-c1">parseInt</span>((<span class="pl-smi">oSettings</span>.<span class="pl-en">fnRecordsDisplay</span>()<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">/</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayLength</span>,<span class="pl-c1">10</span>)<span class="pl-k">+</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2300" class="blob-num js-line-number" data-line-number="2300"></td>
        <td id="LC2300" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayStart</span><span class="pl-k">=</span>(iPages<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">*</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayLength</span>}<span class="pl-k">else</span>{<span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayStart</span><span class="pl-k">=</span><span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L2301" class="blob-num js-line-number" data-line-number="2301"></td>
        <td id="LC2301" class="blob-code blob-code-inner js-file-line">}}<span class="pl-k">else</span>{<span class="pl-en">alert</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>DataTables warning: unknown paging action: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>sAction)}}}}<span class="pl-k">return</span> iOldStart<span class="pl-k">!=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayStart</span></td>
      </tr>
      <tr>
        <td id="L2302" class="blob-num js-line-number" data-line-number="2302"></td>
        <td id="LC2302" class="blob-code blob-code-inner js-file-line">}function _fnFeatureHtmlInfo(oSettings){var nInfo=document.createElement(&quot;div&quot;);nInfo.className=oSettings.oClasses.sInfo;</td>
      </tr>
      <tr>
        <td id="L2303" class="blob-num js-line-number" data-line-number="2303"></td>
        <td id="LC2303" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-smi">oSettings</span>.<span class="pl-smi">aanFeatures</span>.<span class="pl-smi">i</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoDrawCallback</span>.<span class="pl-c1">push</span>({fn<span class="pl-k">:</span>_fnUpdateInfo,sName<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>information<span class="pl-pds">&quot;</span></span>});</td>
      </tr>
      <tr>
        <td id="L2304" class="blob-num js-line-number" data-line-number="2304"></td>
        <td id="LC2304" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">sTableId</span><span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>){<span class="pl-smi">nInfo</span>.<span class="pl-c1">setAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>id<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">oSettings</span>.<span class="pl-smi">sTableId</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>_info<span class="pl-pds">&quot;</span></span>)}}<span class="pl-k">return</span> nInfo</td>
      </tr>
      <tr>
        <td id="L2305" class="blob-num js-line-number" data-line-number="2305"></td>
        <td id="LC2305" class="blob-code blob-code-inner js-file-line">}function _fnUpdateInfo(oSettings){if(!oSettings.oFeatures.bInfo||oSettings.aanFeatures.i.length===0){return</td>
      </tr>
      <tr>
        <td id="L2306" class="blob-num js-line-number" data-line-number="2306"></td>
        <td id="LC2306" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">var</span> nFirst<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aanFeatures</span>.<span class="pl-smi">i</span>[<span class="pl-c1">0</span>];<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-en">fnRecordsDisplay</span>()<span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">oSettings</span>.<span class="pl-en">fnRecordsDisplay</span>()<span class="pl-k">==</span><span class="pl-smi">oSettings</span>.<span class="pl-en">fnRecordsTotal</span>()){<span class="pl-smi">nFirst</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oLanguage</span>.<span class="pl-smi">sInfoEmpty</span><span class="pl-k">+</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oLanguage</span>.<span class="pl-smi">sInfoPostFix</span></td>
      </tr>
      <tr>
        <td id="L2307" class="blob-num js-line-number" data-line-number="2307"></td>
        <td id="LC2307" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-en">fnRecordsDisplay</span>()<span class="pl-k">===</span><span class="pl-c1">0</span>){<span class="pl-smi">nFirst</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oLanguage</span>.<span class="pl-smi">sInfoEmpty</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oLanguage</span>.<span class="pl-smi">sInfoFiltered</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>_MAX_<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">oSettings</span>.<span class="pl-en">fnRecordsTotal</span>())<span class="pl-k">+</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oLanguage</span>.<span class="pl-smi">sInfoPostFix</span></td>
      </tr>
      <tr>
        <td id="L2308" class="blob-num js-line-number" data-line-number="2308"></td>
        <td id="LC2308" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-en">fnRecordsDisplay</span>()<span class="pl-k">==</span><span class="pl-smi">oSettings</span>.<span class="pl-en">fnRecordsTotal</span>()){<span class="pl-smi">nFirst</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oLanguage</span>.<span class="pl-smi">sInfo</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>_START_<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayStart</span><span class="pl-k">+</span><span class="pl-c1">1</span>).<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>_END_<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">oSettings</span>.<span class="pl-en">fnDisplayEnd</span>()).<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>_TOTAL_<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">oSettings</span>.<span class="pl-en">fnRecordsDisplay</span>())<span class="pl-k">+</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oLanguage</span>.<span class="pl-smi">sInfoPostFix</span></td>
      </tr>
      <tr>
        <td id="L2309" class="blob-num js-line-number" data-line-number="2309"></td>
        <td id="LC2309" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">else</span>{<span class="pl-smi">nFirst</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oLanguage</span>.<span class="pl-smi">sInfo</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>_START_<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayStart</span><span class="pl-k">+</span><span class="pl-c1">1</span>).<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>_END_<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">oSettings</span>.<span class="pl-en">fnDisplayEnd</span>()).<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>_TOTAL_<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">oSettings</span>.<span class="pl-en">fnRecordsDisplay</span>())<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oLanguage</span>.<span class="pl-smi">sInfoFiltered</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>_MAX_<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">oSettings</span>.<span class="pl-en">fnRecordsTotal</span>())<span class="pl-k">+</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oLanguage</span>.<span class="pl-smi">sInfoPostFix</span></td>
      </tr>
      <tr>
        <td id="L2310" class="blob-num js-line-number" data-line-number="2310"></td>
        <td id="LC2310" class="blob-code blob-code-inner js-file-line">}}}<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aanFeatures</span>.<span class="pl-smi">i</span>;<span class="pl-k">if</span>(<span class="pl-smi">n</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">1</span>){<span class="pl-k">var</span> sInfo<span class="pl-k">=</span><span class="pl-smi">nFirst</span>.<span class="pl-smi">innerHTML</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">1</span>,iLen<span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2311" class="blob-num js-line-number" data-line-number="2311"></td>
        <td id="LC2311" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">&lt;</span>iLen;i<span class="pl-k">++</span>){n[i].<span class="pl-smi">innerHTML</span><span class="pl-k">=</span>sInfo}}}function _fnFeatureHtmlLength(oSettings){var sName=(oSettings.sTableId===&quot;&quot;)?&quot;&quot;:&#39;name=&quot;&#39;+oSettings.sTableId+&#39;_length&quot;&#39;;</td>
      </tr>
      <tr>
        <td id="L2312" class="blob-num js-line-number" data-line-number="2312"></td>
        <td id="LC2312" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> sStdMenu<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;select size=&quot;1&quot; <span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>sName<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&gt;&lt;option value=&quot;10&quot;&gt;10&lt;/option&gt;&lt;option value=&quot;25&quot;&gt;25&lt;/option&gt;&lt;option value=&quot;50&quot;&gt;50&lt;/option&gt;&lt;option value=&quot;100&quot;&gt;100&lt;/option&gt;&lt;/select&gt;<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2313" class="blob-num js-line-number" data-line-number="2313"></td>
        <td id="LC2313" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> nLength<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>div<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">sTableId</span><span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-k">typeof</span> <span class="pl-smi">oSettings</span>.<span class="pl-smi">aanFeatures</span>.<span class="pl-smi">l</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>){<span class="pl-smi">nLength</span>.<span class="pl-c1">setAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>id<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">oSettings</span>.<span class="pl-smi">sTableId</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>_length<span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2314" class="blob-num js-line-number" data-line-number="2314"></td>
        <td id="LC2314" class="blob-code blob-code-inner js-file-line">}<span class="pl-smi">nLength</span>.<span class="pl-c1">className</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oClasses</span>.<span class="pl-smi">sLength</span>;<span class="pl-smi">nLength</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oLanguage</span>.<span class="pl-smi">sLengthMenu</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>_MENU_<span class="pl-pds">&quot;</span></span>,sStdMenu);</td>
      </tr>
      <tr>
        <td id="L2315" class="blob-num js-line-number" data-line-number="2315"></td>
        <td id="LC2315" class="blob-code blob-code-inner js-file-line"><span class="pl-en">$</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>select option[value=&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayLength</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;]<span class="pl-pds">&#39;</span></span>,nLength).<span class="pl-en">attr</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>selected<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L2316" class="blob-num js-line-number" data-line-number="2316"></td>
        <td id="LC2316" class="blob-code blob-code-inner js-file-line"><span class="pl-en">$</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span>,nLength).<span class="pl-en">change</span>(<span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">var</span> iVal<span class="pl-k">=</span><span class="pl-en">$</span>(<span class="pl-c1">this</span>).<span class="pl-en">val</span>();<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aanFeatures</span>.<span class="pl-smi">l</span>;</td>
      </tr>
      <tr>
        <td id="L2317" class="blob-num js-line-number" data-line-number="2317"></td>
        <td id="LC2317" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>,iLen<span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-c1">length</span>;i<span class="pl-k">&lt;</span>iLen;i<span class="pl-k">++</span>){<span class="pl-k">if</span>(n[i]<span class="pl-k">!=</span><span class="pl-c1">this</span>.<span class="pl-c1">parentNode</span>){<span class="pl-en">$</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span>,n[i]).<span class="pl-en">val</span>(iVal)</td>
      </tr>
      <tr>
        <td id="L2318" class="blob-num js-line-number" data-line-number="2318"></td>
        <td id="LC2318" class="blob-code blob-code-inner js-file-line">}}<span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayLength</span><span class="pl-k">=</span><span class="pl-c1">parseInt</span>(iVal,<span class="pl-c1">10</span>);<span class="pl-en">_fnCalculateEnd</span>(oSettings);<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayEnd</span><span class="pl-k">==</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplay</span>.<span class="pl-c1">length</span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayStart</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayEnd</span><span class="pl-k">-</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayLength</span>;</td>
      </tr>
      <tr>
        <td id="L2319" class="blob-num js-line-number" data-line-number="2319"></td>
        <td id="LC2319" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayStart</span><span class="pl-k">&lt;</span><span class="pl-c1">0</span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayStart</span><span class="pl-k">=</span><span class="pl-c1">0</span>}}<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayLength</span><span class="pl-k">==</span><span class="pl-k">-</span><span class="pl-c1">1</span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayStart</span><span class="pl-k">=</span><span class="pl-c1">0</span></td>
      </tr>
      <tr>
        <td id="L2320" class="blob-num js-line-number" data-line-number="2320"></td>
        <td id="LC2320" class="blob-code blob-code-inner js-file-line">}<span class="pl-en">_fnDraw</span>(oSettings)});<span class="pl-k">return</span> nLength}function _fnFeatureHtmlProcessing(oSettings){var nProcessing=document.createElement(&quot;div&quot;);</td>
      </tr>
      <tr>
        <td id="L2321" class="blob-num js-line-number" data-line-number="2321"></td>
        <td id="LC2321" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">sTableId</span><span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-k">typeof</span> <span class="pl-smi">oSettings</span>.<span class="pl-smi">aanFeatures</span>.<span class="pl-smi">r</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>){<span class="pl-smi">nProcessing</span>.<span class="pl-c1">setAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>id<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">oSettings</span>.<span class="pl-smi">sTableId</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>_processing<span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2322" class="blob-num js-line-number" data-line-number="2322"></td>
        <td id="LC2322" class="blob-code blob-code-inner js-file-line">}<span class="pl-smi">nProcessing</span>.<span class="pl-smi">innerHTML</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oLanguage</span>.<span class="pl-smi">sProcessing</span>;<span class="pl-smi">nProcessing</span>.<span class="pl-c1">className</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oClasses</span>.<span class="pl-smi">sProcessing</span>;</td>
      </tr>
      <tr>
        <td id="L2323" class="blob-num js-line-number" data-line-number="2323"></td>
        <td id="LC2323" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">oSettings</span>.<span class="pl-smi">nTable</span>.<span class="pl-c1">parentNode</span>.<span class="pl-c1">insertBefore</span>(nProcessing,<span class="pl-smi">oSettings</span>.<span class="pl-smi">nTable</span>);<span class="pl-k">return</span> nProcessing</td>
      </tr>
      <tr>
        <td id="L2324" class="blob-num js-line-number" data-line-number="2324"></td>
        <td id="LC2324" class="blob-code blob-code-inner js-file-line">}function _fnProcessingDisplay(oSettings,bShow){if(oSettings.oFeatures.bProcessing){var an=oSettings.aanFeatures.r;</td>
      </tr>
      <tr>
        <td id="L2325" class="blob-num js-line-number" data-line-number="2325"></td>
        <td id="LC2325" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>,iLen<span class="pl-k">=</span><span class="pl-smi">an</span>.<span class="pl-c1">length</span>;i<span class="pl-k">&lt;</span>iLen;i<span class="pl-k">++</span>){an[i].<span class="pl-c1">style</span>.<span class="pl-c1">visibility</span><span class="pl-k">=</span>bShow<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>visible<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L2326" class="blob-num js-line-number" data-line-number="2326"></td>
        <td id="LC2326" class="blob-code blob-code-inner js-file-line">}}}function _fnVisibleToColumnIndex(oSettings,iMatch){var iColumn=-1;for(var i=0;</td>
      </tr>
      <tr>
        <td id="L2327" class="blob-num js-line-number" data-line-number="2327"></td>
        <td id="LC2327" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">&lt;</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>){<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">bVisible</span><span class="pl-k">===</span><span class="pl-c1">true</span>){iColumn<span class="pl-k">++</span></td>
      </tr>
      <tr>
        <td id="L2328" class="blob-num js-line-number" data-line-number="2328"></td>
        <td id="LC2328" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">if</span>(iColumn<span class="pl-k">==</span>iMatch){<span class="pl-k">return</span> i}}<span class="pl-k">return</span> <span class="pl-c1">null</span>}function _fnColumnIndexToVisible(oSettings,iMatch){var iVisible=-1;</td>
      </tr>
      <tr>
        <td id="L2329" class="blob-num js-line-number" data-line-number="2329"></td>
        <td id="LC2329" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>){<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">bVisible</span><span class="pl-k">===</span><span class="pl-c1">true</span>){iVisible<span class="pl-k">++</span></td>
      </tr>
      <tr>
        <td id="L2330" class="blob-num js-line-number" data-line-number="2330"></td>
        <td id="LC2330" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">if</span>(i<span class="pl-k">==</span>iMatch){<span class="pl-k">return</span> <span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">bVisible</span><span class="pl-k">===</span><span class="pl-c1">true</span><span class="pl-k">?</span>iVisible<span class="pl-k">:</span><span class="pl-c1">null</span>}}<span class="pl-k">return</span> <span class="pl-c1">null</span></td>
      </tr>
      <tr>
        <td id="L2331" class="blob-num js-line-number" data-line-number="2331"></td>
        <td id="LC2331" class="blob-code blob-code-inner js-file-line">}function _fnNodeToDataIndex(s,n){for(var i=0,iLen=s.aoData.length;i&lt;iLen;i++){if(s.aoData[i]!==null&amp;&amp;s.aoData[i].nTr==n){return i</td>
      </tr>
      <tr>
        <td id="L2332" class="blob-num js-line-number" data-line-number="2332"></td>
        <td id="LC2332" class="blob-code blob-code-inner js-file-line">}}<span class="pl-k">return</span> <span class="pl-c1">null</span>}function _fnVisbleColumns(oS){var iVis=0;for(var i=0;i&lt;oS.aoColumns.length;</td>
      </tr>
      <tr>
        <td id="L2333" class="blob-num js-line-number" data-line-number="2333"></td>
        <td id="LC2333" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">++</span>){<span class="pl-k">if</span>(<span class="pl-smi">oS</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">bVisible</span><span class="pl-k">===</span><span class="pl-c1">true</span>){iVis<span class="pl-k">++</span>}}<span class="pl-k">return</span> iVis}function _fnCalculateEnd(oSettings){if(oSettings.oFeatures.bPaginate===false){oSettings._iDisplayEnd=oSettings.aiDisplay.length</td>
      </tr>
      <tr>
        <td id="L2334" class="blob-num js-line-number" data-line-number="2334"></td>
        <td id="LC2334" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayStart</span><span class="pl-k">+</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayLength</span><span class="pl-k">&gt;</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplay</span>.<span class="pl-c1">length</span><span class="pl-k">||</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayLength</span><span class="pl-k">==</span><span class="pl-k">-</span><span class="pl-c1">1</span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayEnd</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplay</span>.<span class="pl-c1">length</span></td>
      </tr>
      <tr>
        <td id="L2335" class="blob-num js-line-number" data-line-number="2335"></td>
        <td id="LC2335" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">else</span>{<span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayEnd</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayStart</span><span class="pl-k">+</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayLength</span>}}}function _fnConvertToWidth(sWidth,nParent){if(!sWidth||sWidth===null||sWidth===&quot;&quot;){return 0</td>
      </tr>
      <tr>
        <td id="L2336" class="blob-num js-line-number" data-line-number="2336"></td>
        <td id="LC2336" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">if</span>(<span class="pl-k">typeof</span> nParent<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>){nParent<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">getElementsByTagName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>body<span class="pl-pds">&quot;</span></span>)[<span class="pl-c1">0</span>]</td>
      </tr>
      <tr>
        <td id="L2337" class="blob-num js-line-number" data-line-number="2337"></td>
        <td id="LC2337" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">var</span> iWidth;<span class="pl-k">var</span> nTmp<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>div<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">nTmp</span>.<span class="pl-c1">style</span>.<span class="pl-c1">width</span><span class="pl-k">=</span>sWidth;<span class="pl-smi">nParent</span>.<span class="pl-c1">appendChild</span>(nTmp);</td>
      </tr>
      <tr>
        <td id="L2338" class="blob-num js-line-number" data-line-number="2338"></td>
        <td id="LC2338" class="blob-code blob-code-inner js-file-line">iWidth<span class="pl-k">=</span><span class="pl-smi">nTmp</span>.<span class="pl-smi">offsetWidth</span>;<span class="pl-smi">nParent</span>.<span class="pl-c1">removeChild</span>(nTmp);<span class="pl-k">return</span>(iWidth)}function _fnCalculateColumnWidths(oSettings){var iTableWidth=oSettings.nTable.offsetWidth;</td>
      </tr>
      <tr>
        <td id="L2339" class="blob-num js-line-number" data-line-number="2339"></td>
        <td id="LC2339" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> iTotalUserIpSize<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> iTmpWidth;<span class="pl-k">var</span> iVisibleColumns<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> iColums<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2340" class="blob-num js-line-number" data-line-number="2340"></td>
        <td id="LC2340" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> i;<span class="pl-k">var</span> oHeaders<span class="pl-k">=</span><span class="pl-en">$</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>thead:eq(0)&gt;th<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">oSettings</span>.<span class="pl-smi">nTable</span>);<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>iColums;i<span class="pl-k">++</span>){<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">bVisible</span>){iVisibleColumns<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L2341" class="blob-num js-line-number" data-line-number="2341"></td>
        <td id="LC2341" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">sWidth</span><span class="pl-k">!==</span><span class="pl-c1">null</span>){iTmpWidth<span class="pl-k">=</span><span class="pl-en">_fnConvertToWidth</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">sWidth</span>,<span class="pl-smi">oSettings</span>.<span class="pl-smi">nTable</span>.<span class="pl-c1">parentNode</span>);</td>
      </tr>
      <tr>
        <td id="L2342" class="blob-num js-line-number" data-line-number="2342"></td>
        <td id="LC2342" class="blob-code blob-code-inner js-file-line">iTotalUserIpSize<span class="pl-k">+=</span>iTmpWidth;<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">sWidth</span><span class="pl-k">=</span>iTmpWidth<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>}}}<span class="pl-k">if</span>(iColums<span class="pl-k">==</span><span class="pl-smi">oHeaders</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>iTotalUserIpSize<span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>iVisibleColumns<span class="pl-k">==</span>iColums){<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2343" class="blob-num js-line-number" data-line-number="2343"></td>
        <td id="LC2343" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">&lt;</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">sWidth</span><span class="pl-k">=</span>oHeaders[i].<span class="pl-smi">offsetWidth</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L2344" class="blob-num js-line-number" data-line-number="2344"></td>
        <td id="LC2344" class="blob-code blob-code-inner js-file-line">}}<span class="pl-k">else</span>{<span class="pl-k">var</span> nCalcTmp<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">nTable</span>.<span class="pl-c1">cloneNode</span>(<span class="pl-c1">false</span>);<span class="pl-smi">nCalcTmp</span>.<span class="pl-c1">setAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>id<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2345" class="blob-num js-line-number" data-line-number="2345"></td>
        <td id="LC2345" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> sTableTmp<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;table class=&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span><span class="pl-smi">nCalcTmp</span>.<span class="pl-c1">className</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;&gt;<span class="pl-pds">&#39;</span></span>;<span class="pl-k">var</span> sCalcHead<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;tr&gt;<span class="pl-pds">&quot;</span></span>;<span class="pl-k">var</span> sCalcHtml<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;tr&gt;<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2346" class="blob-num js-line-number" data-line-number="2346"></td>
        <td id="LC2346" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>iColums;i<span class="pl-k">++</span>){<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">bVisible</span>){sCalcHead<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;th&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">sTitle</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/th&gt;<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2347" class="blob-num js-line-number" data-line-number="2347"></td>
        <td id="LC2347" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">sWidth</span><span class="pl-k">!==</span><span class="pl-c1">null</span>){<span class="pl-k">var</span> sWidth<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">sWidth</span><span class="pl-k">!==</span><span class="pl-c1">null</span>){sWidth<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&#39;</span> style=&quot;width:<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">sWidth</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>;&quot;<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L2348" class="blob-num js-line-number" data-line-number="2348"></td>
        <td id="LC2348" class="blob-code blob-code-inner js-file-line">}sCalcHtml<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;td<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>sWidth<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span> tag_index=&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>i<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;&gt;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span><span class="pl-en">fnGetMaxLenString</span>(oSettings,i)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/td&gt;<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L2349" class="blob-num js-line-number" data-line-number="2349"></td>
        <td id="LC2349" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">else</span>{sCalcHtml<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;td tag_index=&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>i<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;&gt;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span><span class="pl-en">fnGetMaxLenString</span>(oSettings,i)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/td&gt;<span class="pl-pds">&quot;</span></span>}}}sCalcHead<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/tr&gt;<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2350" class="blob-num js-line-number" data-line-number="2350"></td>
        <td id="LC2350" class="blob-code blob-code-inner js-file-line">sCalcHtml<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/tr&gt;<span class="pl-pds">&quot;</span></span>;nCalcTmp<span class="pl-k">=</span><span class="pl-en">$</span>(sTableTmp<span class="pl-k">+</span>sCalcHead<span class="pl-k">+</span>sCalcHtml<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/table&gt;<span class="pl-pds">&quot;</span></span>)[<span class="pl-c1">0</span>];<span class="pl-smi">nCalcTmp</span>.<span class="pl-c1">style</span>.<span class="pl-c1">width</span><span class="pl-k">=</span>iTableWidth<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2351" class="blob-num js-line-number" data-line-number="2351"></td>
        <td id="LC2351" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">nCalcTmp</span>.<span class="pl-c1">style</span>.<span class="pl-c1">visibility</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span>;<span class="pl-smi">nCalcTmp</span>.<span class="pl-c1">style</span>.<span class="pl-smi">position</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span>;<span class="pl-smi">oSettings</span>.<span class="pl-smi">nTable</span>.<span class="pl-c1">parentNode</span>.<span class="pl-c1">appendChild</span>(nCalcTmp);</td>
      </tr>
      <tr>
        <td id="L2352" class="blob-num js-line-number" data-line-number="2352"></td>
        <td id="LC2352" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> oNodes<span class="pl-k">=</span><span class="pl-en">$</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tr:eq(1)&gt;td<span class="pl-pds">&quot;</span></span>,nCalcTmp);<span class="pl-k">var</span> iIndex;<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">oNodes</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>){iIndex<span class="pl-k">=</span>oNodes[i].<span class="pl-c1">getAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tag_index<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2353" class="blob-num js-line-number" data-line-number="2353"></td>
        <td id="LC2353" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> iContentWidth<span class="pl-k">=</span><span class="pl-en">$</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>td<span class="pl-pds">&quot;</span></span>,nCalcTmp).<span class="pl-en">eq</span>(i).<span class="pl-c1">width</span>();<span class="pl-k">var</span> iSetWidth<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">sWidth</span><span class="pl-k">?</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">sWidth</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">2</span>)<span class="pl-k">:</span><span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2354" class="blob-num js-line-number" data-line-number="2354"></td>
        <td id="LC2354" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[iIndex].<span class="pl-smi">sWidth</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(iContentWidth,iSetWidth)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>}<span class="pl-smi">oSettings</span>.<span class="pl-smi">nTable</span>.<span class="pl-c1">parentNode</span>.<span class="pl-c1">removeChild</span>(nCalcTmp)</td>
      </tr>
      <tr>
        <td id="L2355" class="blob-num js-line-number" data-line-number="2355"></td>
        <td id="LC2355" class="blob-code blob-code-inner js-file-line">}}function fnGetMaxLenString(oSettings,iCol){var iMax=0;var iMaxIndex=-1;for(var i=0;</td>
      </tr>
      <tr>
        <td id="L2356" class="blob-num js-line-number" data-line-number="2356"></td>
        <td id="LC2356" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">&lt;</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>){<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[i].<span class="pl-smi">_aData</span>[iCol].<span class="pl-c1">length</span><span class="pl-k">&gt;</span>iMax){iMax<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[i].<span class="pl-smi">_aData</span>[iCol].<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2357" class="blob-num js-line-number" data-line-number="2357"></td>
        <td id="LC2357" class="blob-code blob-code-inner js-file-line">iMaxIndex<span class="pl-k">=</span>i}}<span class="pl-k">if</span>(iMaxIndex<span class="pl-k">&gt;=</span><span class="pl-c1">0</span>){<span class="pl-k">return</span> <span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[iMaxIndex].<span class="pl-smi">_aData</span>[iCol]}<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L2358" class="blob-num js-line-number" data-line-number="2358"></td>
        <td id="LC2358" class="blob-code blob-code-inner js-file-line">}function _fnArrayCmp(aArray1,aArray2){if(aArray1.length!=aArray2.length){return 1</td>
      </tr>
      <tr>
        <td id="L2359" class="blob-num js-line-number" data-line-number="2359"></td>
        <td id="LC2359" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">aArray1</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>){<span class="pl-k">if</span>(aArray1[i]<span class="pl-k">!=</span>aArray2[i]){<span class="pl-k">return</span> <span class="pl-c1">2</span>}}<span class="pl-k">return</span> <span class="pl-c1">0</span>}function _fnDetectType(sData){var aTypes=_oExt.aTypes;</td>
      </tr>
      <tr>
        <td id="L2360" class="blob-num js-line-number" data-line-number="2360"></td>
        <td id="LC2360" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> iLen<span class="pl-k">=</span><span class="pl-smi">aTypes</span>.<span class="pl-c1">length</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>iLen;i<span class="pl-k">++</span>){<span class="pl-k">var</span> sType<span class="pl-k">=</span>aTypes[i](sData);<span class="pl-k">if</span>(sType<span class="pl-k">!==</span><span class="pl-c1">null</span>){<span class="pl-k">return</span> sType</td>
      </tr>
      <tr>
        <td id="L2361" class="blob-num js-line-number" data-line-number="2361"></td>
        <td id="LC2361" class="blob-code blob-code-inner js-file-line">}}<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>}function _fnSettingsFromNode(nTable){for(var i=0;i&lt;_aoSettings.length;</td>
      </tr>
      <tr>
        <td id="L2362" class="blob-num js-line-number" data-line-number="2362"></td>
        <td id="LC2362" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">++</span>){<span class="pl-k">if</span>(_aoSettings[i].<span class="pl-smi">nTable</span><span class="pl-k">==</span>nTable){<span class="pl-k">return</span> _aoSettings[i]}}<span class="pl-k">return</span> <span class="pl-c1">null</span>}function _fnGetDataMaster(oSettings){var aData=[];</td>
      </tr>
      <tr>
        <td id="L2363" class="blob-num js-line-number" data-line-number="2363"></td>
        <td id="LC2363" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> iLen<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>.<span class="pl-c1">length</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>iLen;i<span class="pl-k">++</span>){<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[i]<span class="pl-k">===</span><span class="pl-c1">null</span>){<span class="pl-smi">aData</span>.<span class="pl-c1">push</span>(<span class="pl-c1">null</span>)</td>
      </tr>
      <tr>
        <td id="L2364" class="blob-num js-line-number" data-line-number="2364"></td>
        <td id="LC2364" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">else</span>{<span class="pl-smi">aData</span>.<span class="pl-c1">push</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[i].<span class="pl-smi">_aData</span>)}}<span class="pl-k">return</span> aData}function _fnGetTrNodes(oSettings){var aNodes=[];</td>
      </tr>
      <tr>
        <td id="L2365" class="blob-num js-line-number" data-line-number="2365"></td>
        <td id="LC2365" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> iLen<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>.<span class="pl-c1">length</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>iLen;i<span class="pl-k">++</span>){<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[i]<span class="pl-k">===</span><span class="pl-c1">null</span>){<span class="pl-smi">aNodes</span>.<span class="pl-c1">push</span>(<span class="pl-c1">null</span>)</td>
      </tr>
      <tr>
        <td id="L2366" class="blob-num js-line-number" data-line-number="2366"></td>
        <td id="LC2366" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">else</span>{<span class="pl-smi">aNodes</span>.<span class="pl-c1">push</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[i].<span class="pl-smi">nTr</span>)}}<span class="pl-k">return</span> aNodes}function _fnGetTdNodes(oSettings){var nTrs=_fnGetTrNodes(oSettings);</td>
      </tr>
      <tr>
        <td id="L2367" class="blob-num js-line-number" data-line-number="2367"></td>
        <td id="LC2367" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> nTds<span class="pl-k">=</span>[],nTd;<span class="pl-k">var</span> anReturn<span class="pl-k">=</span>[];<span class="pl-k">var</span> iCorrector;<span class="pl-k">var</span> iRow,iRows,iColumn,iColumns;<span class="pl-k">for</span>(iRow<span class="pl-k">=</span><span class="pl-c1">0</span>,iRows<span class="pl-k">=</span><span class="pl-smi">nTrs</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2368" class="blob-num js-line-number" data-line-number="2368"></td>
        <td id="LC2368" class="blob-code blob-code-inner js-file-line">iRow<span class="pl-k">&lt;</span>iRows;iRow<span class="pl-k">++</span>){nTds<span class="pl-k">=</span>[];<span class="pl-k">for</span>(iColumn<span class="pl-k">=</span><span class="pl-c1">0</span>,iColumns<span class="pl-k">=</span>nTrs[iRow].<span class="pl-c1">childNodes</span>.<span class="pl-c1">length</span>;iColumn<span class="pl-k">&lt;</span>iColumns;</td>
      </tr>
      <tr>
        <td id="L2369" class="blob-num js-line-number" data-line-number="2369"></td>
        <td id="LC2369" class="blob-code blob-code-inner js-file-line">iColumn<span class="pl-k">++</span>){nTd<span class="pl-k">=</span>nTrs[iRow].<span class="pl-c1">childNodes</span>[iColumn];<span class="pl-k">if</span>(<span class="pl-smi">nTd</span>.<span class="pl-c1">nodeName</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>TD<span class="pl-pds">&quot;</span></span>){<span class="pl-smi">nTds</span>.<span class="pl-c1">push</span>(nTd)</td>
      </tr>
      <tr>
        <td id="L2370" class="blob-num js-line-number" data-line-number="2370"></td>
        <td id="LC2370" class="blob-code blob-code-inner js-file-line">}}iCorrector<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(iColumn<span class="pl-k">=</span><span class="pl-c1">0</span>,iColumns<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>.<span class="pl-c1">length</span>;iColumn<span class="pl-k">&lt;</span>iColumns;</td>
      </tr>
      <tr>
        <td id="L2371" class="blob-num js-line-number" data-line-number="2371"></td>
        <td id="LC2371" class="blob-code blob-code-inner js-file-line">iColumn<span class="pl-k">++</span>){<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[iColumn].<span class="pl-smi">bVisible</span>){<span class="pl-smi">anReturn</span>.<span class="pl-c1">push</span>(nTds[iColumn<span class="pl-k">-</span>iCorrector])</td>
      </tr>
      <tr>
        <td id="L2372" class="blob-num js-line-number" data-line-number="2372"></td>
        <td id="LC2372" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">else</span>{<span class="pl-smi">anReturn</span>.<span class="pl-c1">push</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoData</span>[iRow].<span class="pl-smi">_anHidden</span>[iColumn]);iCorrector<span class="pl-k">++</span>}}}<span class="pl-k">return</span> anReturn</td>
      </tr>
      <tr>
        <td id="L2373" class="blob-num js-line-number" data-line-number="2373"></td>
        <td id="LC2373" class="blob-code blob-code-inner js-file-line">}function _fnEscapeRegex(sVal){var acEscape=[&quot;/&quot;,&quot;.&quot;,&quot;*&quot;,&quot;+&quot;,&quot;?&quot;,&quot;|&quot;,&quot;(&quot;,&quot;)&quot;,&quot;[&quot;,&quot;]&quot;,&quot;{&quot;,&quot;}&quot;,&quot;\\&quot;,&quot;$&quot;,&quot;^&quot;];</td>
      </tr>
      <tr>
        <td id="L2374" class="blob-num js-line-number" data-line-number="2374"></td>
        <td id="LC2374" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> reReplace<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">RegExp</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-cce">\\</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">acEscape</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>|<span class="pl-cce">\\</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-smi">sVal</span>.<span class="pl-c1">replace</span>(reReplace,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\\</span>$1<span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2375" class="blob-num js-line-number" data-line-number="2375"></td>
        <td id="LC2375" class="blob-code blob-code-inner js-file-line">}function _fnReOrderIndex(oSettings,sColumns){var aColumns=sColumns.split(&quot;,&quot;);var aiReturn=[];</td>
      </tr>
      <tr>
        <td id="L2376" class="blob-num js-line-number" data-line-number="2376"></td>
        <td id="LC2376" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>,iLen<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>.<span class="pl-c1">length</span>;i<span class="pl-k">&lt;</span>iLen;i<span class="pl-k">++</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-c1">0</span>;j<span class="pl-k">&lt;</span>iLen;j<span class="pl-k">++</span>){<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">sName</span><span class="pl-k">==</span>aColumns[j]){<span class="pl-smi">aiReturn</span>.<span class="pl-c1">push</span>(j);</td>
      </tr>
      <tr>
        <td id="L2377" class="blob-num js-line-number" data-line-number="2377"></td>
        <td id="LC2377" class="blob-code blob-code-inner js-file-line"><span class="pl-k">break</span>}}}<span class="pl-k">return</span> aiReturn}function _fnColumnOrdering(oSettings){var sNames=&quot;&quot;;for(var i=0,iLen=oSettings.aoColumns.length;</td>
      </tr>
      <tr>
        <td id="L2378" class="blob-num js-line-number" data-line-number="2378"></td>
        <td id="LC2378" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">&lt;</span>iLen;i<span class="pl-k">++</span>){sNames<span class="pl-k">+=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">sName</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>}<span class="pl-k">if</span>(<span class="pl-smi">sNames</span>.<span class="pl-c1">length</span><span class="pl-k">==</span>iLen){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L2379" class="blob-num js-line-number" data-line-number="2379"></td>
        <td id="LC2379" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">return</span> <span class="pl-smi">sNames</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>)}function _fnClearTable(oSettings){oSettings.aoData.length=0;</td>
      </tr>
      <tr>
        <td id="L2380" class="blob-num js-line-number" data-line-number="2380"></td>
        <td id="LC2380" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplayMaster</span>.<span class="pl-c1">length</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplay</span>.<span class="pl-c1">length</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-en">_fnCalculateEnd</span>(oSettings)</td>
      </tr>
      <tr>
        <td id="L2381" class="blob-num js-line-number" data-line-number="2381"></td>
        <td id="LC2381" class="blob-code blob-code-inner js-file-line">}function _fnSaveState(oSettings){if(!oSettings.oFeatures.bStateSave){return}var i;</td>
      </tr>
      <tr>
        <td id="L2382" class="blob-num js-line-number" data-line-number="2382"></td>
        <td id="LC2382" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> sValue<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>{<span class="pl-pds">&quot;</span></span>;sValue<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;iStart&quot;: <span class="pl-pds">&#39;</span></span><span class="pl-k">+</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayStart</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>;sValue<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;iEnd&quot;: <span class="pl-pds">&#39;</span></span><span class="pl-k">+</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayEnd</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2383" class="blob-num js-line-number" data-line-number="2383"></td>
        <td id="LC2383" class="blob-code blob-code-inner js-file-line">sValue<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;iLength&quot;: <span class="pl-pds">&#39;</span></span><span class="pl-k">+</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayLength</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>;sValue<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;sFilter&quot;: &quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oPreviousSearch</span>.<span class="pl-smi">sSearch</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\\</span>&quot;<span class="pl-pds">&#39;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;,<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2384" class="blob-num js-line-number" data-line-number="2384"></td>
        <td id="LC2384" class="blob-code blob-code-inner js-file-line">sValue<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;sFilterEsc&quot;: <span class="pl-pds">&#39;</span></span><span class="pl-k">+</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oPreviousSearch</span>.<span class="pl-smi">bEscapeRegex</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>;sValue<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;aaSorting&quot;: [ <span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2385" class="blob-num js-line-number" data-line-number="2385"></td>
        <td id="LC2385" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSorting</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>){sValue<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>[<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSorting</span>[i][<span class="pl-c1">0</span>]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,&#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSorting</span>[i][<span class="pl-c1">1</span>]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;],<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L2386" class="blob-num js-line-number" data-line-number="2386"></td>
        <td id="LC2386" class="blob-code blob-code-inner js-file-line">}sValue<span class="pl-k">=</span><span class="pl-smi">sValue</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>,<span class="pl-smi">sValue</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>);sValue<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>],<span class="pl-pds">&quot;</span></span>;sValue<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;aaSearchCols&quot;: [ <span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2387" class="blob-num js-line-number" data-line-number="2387"></td>
        <td id="LC2387" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoPreSearchCols</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>){sValue<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>[&#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoPreSearchCols</span>[i].<span class="pl-smi">sSearch</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoPreSearchCols</span>[i].<span class="pl-smi">bEscapeRegex</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>],<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L2388" class="blob-num js-line-number" data-line-number="2388"></td>
        <td id="LC2388" class="blob-code blob-code-inner js-file-line">}sValue<span class="pl-k">=</span><span class="pl-smi">sValue</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>,<span class="pl-smi">sValue</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>);sValue<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>],<span class="pl-pds">&quot;</span></span>;sValue<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;abVisCols&quot;: [ <span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2389" class="blob-num js-line-number" data-line-number="2389"></td>
        <td id="LC2389" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>){sValue<span class="pl-k">+=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[i].<span class="pl-smi">bVisible</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L2390" class="blob-num js-line-number" data-line-number="2390"></td>
        <td id="LC2390" class="blob-code blob-code-inner js-file-line">}sValue<span class="pl-k">=</span><span class="pl-smi">sValue</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>,<span class="pl-smi">sValue</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>);sValue<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>]<span class="pl-pds">&quot;</span></span>;sValue<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>;<span class="pl-en">_fnCreateCookie</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>SpryMedia_DataTables_<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">sInstance</span>,sValue,<span class="pl-smi">oSettings</span>.<span class="pl-smi">iCookieDuration</span>)</td>
      </tr>
      <tr>
        <td id="L2391" class="blob-num js-line-number" data-line-number="2391"></td>
        <td id="LC2391" class="blob-code blob-code-inner js-file-line">}function _fnLoadState(oSettings,oInit){if(!oSettings.oFeatures.bStateSave){return</td>
      </tr>
      <tr>
        <td id="L2392" class="blob-num js-line-number" data-line-number="2392"></td>
        <td id="LC2392" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">var</span> oData;<span class="pl-k">var</span> sData<span class="pl-k">=</span><span class="pl-en">_fnReadCookie</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>SpryMedia_DataTables_<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">sInstance</span>);<span class="pl-k">if</span>(sData<span class="pl-k">!==</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;</span>sData<span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>){<span class="pl-k">try</span>{<span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-c1">JSON</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-k">typeof</span> <span class="pl-c1">JSON</span>.<span class="pl-smi">parse</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>){oData<span class="pl-k">=</span><span class="pl-c1">JSON</span>.<span class="pl-c1">parse</span>(<span class="pl-smi">sData</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&#39;<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span>))</td>
      </tr>
      <tr>
        <td id="L2393" class="blob-num js-line-number" data-line-number="2393"></td>
        <td id="LC2393" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">else</span>{oData<span class="pl-k">=</span><span class="pl-c1">eval</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>sData<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>)}}<span class="pl-k">catch</span>(e){<span class="pl-k">return</span>}<span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayStart</span><span class="pl-k">=</span><span class="pl-smi">oData</span>.<span class="pl-smi">iStart</span>;</td>
      </tr>
      <tr>
        <td id="L2394" class="blob-num js-line-number" data-line-number="2394"></td>
        <td id="LC2394" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">oSettings</span>.<span class="pl-smi">iInitDisplayStart</span><span class="pl-k">=</span><span class="pl-smi">oData</span>.<span class="pl-smi">iStart</span>;<span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayEnd</span><span class="pl-k">=</span><span class="pl-smi">oData</span>.<span class="pl-smi">iEnd</span>;<span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayLength</span><span class="pl-k">=</span><span class="pl-smi">oData</span>.<span class="pl-smi">iLength</span>;</td>
      </tr>
      <tr>
        <td id="L2395" class="blob-num js-line-number" data-line-number="2395"></td>
        <td id="LC2395" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">oSettings</span>.<span class="pl-smi">oPreviousSearch</span>.<span class="pl-smi">sSearch</span><span class="pl-k">=</span><span class="pl-smi">oData</span>.<span class="pl-smi">sFilter</span>;<span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSorting</span><span class="pl-k">=</span><span class="pl-smi">oData</span>.<span class="pl-smi">aaSorting</span>.<span class="pl-c1">slice</span>();</td>
      </tr>
      <tr>
        <td id="L2396" class="blob-num js-line-number" data-line-number="2396"></td>
        <td id="LC2396" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">oSettings</span>.<span class="pl-smi">saved_aaSorting</span><span class="pl-k">=</span><span class="pl-smi">oData</span>.<span class="pl-smi">aaSorting</span>.<span class="pl-c1">slice</span>();<span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-smi">oData</span>.<span class="pl-smi">sFilterEsc</span><span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">oPreviousSearch</span>.<span class="pl-smi">bEscapeRegex</span><span class="pl-k">=</span><span class="pl-smi">oData</span>.<span class="pl-smi">sFilterEsc</span></td>
      </tr>
      <tr>
        <td id="L2397" class="blob-num js-line-number" data-line-number="2397"></td>
        <td id="LC2397" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-smi">oData</span>.<span class="pl-smi">aaSearchCols</span><span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">oData</span>.<span class="pl-smi">aaSearchCols</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2398" class="blob-num js-line-number" data-line-number="2398"></td>
        <td id="LC2398" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">++</span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoPreSearchCols</span>[i]<span class="pl-k">=</span>{sSearch<span class="pl-k">:</span><span class="pl-smi">oData</span>.<span class="pl-smi">aaSearchCols</span>[i][<span class="pl-c1">0</span>],bEscapeRegex<span class="pl-k">:</span><span class="pl-smi">oData</span>.<span class="pl-smi">aaSearchCols</span>[i][<span class="pl-c1">1</span>]}</td>
      </tr>
      <tr>
        <td id="L2399" class="blob-num js-line-number" data-line-number="2399"></td>
        <td id="LC2399" class="blob-code blob-code-inner js-file-line">}}<span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-smi">oData</span>.<span class="pl-smi">abVisCols</span><span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>){<span class="pl-smi">oInit</span>.<span class="pl-smi">saved_aoColumns</span><span class="pl-k">=</span>[];<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">oData</span>.<span class="pl-smi">abVisCols</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2400" class="blob-num js-line-number" data-line-number="2400"></td>
        <td id="LC2400" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">++</span>){<span class="pl-smi">oInit</span>.<span class="pl-smi">saved_aoColumns</span>[i]<span class="pl-k">=</span>{};<span class="pl-smi">oInit</span>.<span class="pl-smi">saved_aoColumns</span>[i].<span class="pl-smi">bVisible</span><span class="pl-k">=</span><span class="pl-smi">oData</span>.<span class="pl-smi">abVisCols</span>[i]</td>
      </tr>
      <tr>
        <td id="L2401" class="blob-num js-line-number" data-line-number="2401"></td>
        <td id="LC2401" class="blob-code blob-code-inner js-file-line">}}}}function _fnCreateCookie(sName,sValue,iSecs){var date=new Date();date.setTime(date.getTime()+(iSecs*1000));</td>
      </tr>
      <tr>
        <td id="L2402" class="blob-num js-line-number" data-line-number="2402"></td>
        <td id="LC2402" class="blob-code blob-code-inner js-file-line">sName<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>_<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">window</span>.<span class="pl-c1">location</span>.<span class="pl-c1">pathname</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">[<span class="pl-cce">\/</span>:]</span><span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">toLowerCase</span>();<span class="pl-c1">document</span>.<span class="pl-c1">cookie</span><span class="pl-k">=</span>sName<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>=<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">encodeURIComponent</span>(sValue)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>; expires=<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">date</span>.<span class="pl-c1">toGMTString</span>()<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>; path=/<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L2403" class="blob-num js-line-number" data-line-number="2403"></td>
        <td id="LC2403" class="blob-code blob-code-inner js-file-line">}function _fnReadCookie(sName){var sNameEQ=sName+&quot;_&quot;+window.location.pathname.replace(/[\/:]/g,&quot;&quot;).toLowerCase()+&quot;=&quot;;</td>
      </tr>
      <tr>
        <td id="L2404" class="blob-num js-line-number" data-line-number="2404"></td>
        <td id="LC2404" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> sCookieContents<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">cookie</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">sCookieContents</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2405" class="blob-num js-line-number" data-line-number="2405"></td>
        <td id="LC2405" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">++</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>sCookieContents[i];<span class="pl-k">while</span>(<span class="pl-smi">c</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>)<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>){c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">1</span>,<span class="pl-smi">c</span>.<span class="pl-c1">length</span>)}<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-c1">indexOf</span>(sNameEQ)<span class="pl-k">===</span><span class="pl-c1">0</span>){<span class="pl-k">return</span> <span class="pl-c1">decodeURIComponent</span>(<span class="pl-smi">c</span>.<span class="pl-c1">substring</span>(<span class="pl-smi">sNameEQ</span>.<span class="pl-c1">length</span>,<span class="pl-smi">c</span>.<span class="pl-c1">length</span>))</td>
      </tr>
      <tr>
        <td id="L2406" class="blob-num js-line-number" data-line-number="2406"></td>
        <td id="LC2406" class="blob-code blob-code-inner js-file-line">}}<span class="pl-k">return</span> <span class="pl-c1">null</span>}function _fnGetUniqueThs(nThead){var nTrs=nThead.getElementsByTagName(&quot;tr&quot;);</td>
      </tr>
      <tr>
        <td id="L2407" class="blob-num js-line-number" data-line-number="2407"></td>
        <td id="LC2407" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">nTrs</span>.<span class="pl-c1">length</span><span class="pl-k">==</span><span class="pl-c1">1</span>){<span class="pl-k">return</span> nTrs[<span class="pl-c1">0</span>].<span class="pl-c1">getElementsByTagName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>th<span class="pl-pds">&quot;</span></span>)}<span class="pl-k">var</span> aLayout<span class="pl-k">=</span>[],aReturn<span class="pl-k">=</span>[];</td>
      </tr>
      <tr>
        <td id="L2408" class="blob-num js-line-number" data-line-number="2408"></td>
        <td id="LC2408" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">ROWSPAN</span><span class="pl-k">=</span><span class="pl-c1">2</span>,<span class="pl-c1">COLSPAN</span><span class="pl-k">=</span><span class="pl-c1">3</span>,<span class="pl-c1">TDELEM</span><span class="pl-k">=</span><span class="pl-c1">4</span>;<span class="pl-k">var</span> i,j,k,iLen,jLen,iColumnShifted;<span class="pl-k">var</span> <span class="pl-en">fnShiftCol</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">i</span>,<span class="pl-smi">j</span>){<span class="pl-k">while</span>(<span class="pl-k">typeof</span> a[i][j]<span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>){j<span class="pl-k">++</span></td>
      </tr>
      <tr>
        <td id="L2409" class="blob-num js-line-number" data-line-number="2409"></td>
        <td id="LC2409" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">return</span> j};<span class="pl-k">var</span> <span class="pl-en">fnAddRow</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">i</span>){<span class="pl-k">if</span>(<span class="pl-k">typeof</span> aLayout[i]<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>){aLayout[i]<span class="pl-k">=</span>[]</td>
      </tr>
      <tr>
        <td id="L2410" class="blob-num js-line-number" data-line-number="2410"></td>
        <td id="LC2410" class="blob-code blob-code-inner js-file-line">}};<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>,iLen<span class="pl-k">=</span><span class="pl-smi">nTrs</span>.<span class="pl-c1">length</span>;i<span class="pl-k">&lt;</span>iLen;i<span class="pl-k">++</span>){<span class="pl-en">fnAddRow</span>(i);<span class="pl-k">var</span> iColumn<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> nTds<span class="pl-k">=</span>[];<span class="pl-k">for</span>(j<span class="pl-k">=</span><span class="pl-c1">0</span>,jLen<span class="pl-k">=</span>nTrs[i].<span class="pl-c1">childNodes</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2411" class="blob-num js-line-number" data-line-number="2411"></td>
        <td id="LC2411" class="blob-code blob-code-inner js-file-line">j<span class="pl-k">&lt;</span>jLen;j<span class="pl-k">++</span>){<span class="pl-k">if</span>(nTrs[i].<span class="pl-c1">childNodes</span>[j].<span class="pl-c1">nodeName</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>TD<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>nTrs[i].<span class="pl-c1">childNodes</span>[j].<span class="pl-c1">nodeName</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>TH<span class="pl-pds">&quot;</span></span>){<span class="pl-smi">nTds</span>.<span class="pl-c1">push</span>(nTrs[i].<span class="pl-c1">childNodes</span>[j])</td>
      </tr>
      <tr>
        <td id="L2412" class="blob-num js-line-number" data-line-number="2412"></td>
        <td id="LC2412" class="blob-code blob-code-inner js-file-line">}}<span class="pl-k">for</span>(j<span class="pl-k">=</span><span class="pl-c1">0</span>,jLen<span class="pl-k">=</span><span class="pl-smi">nTds</span>.<span class="pl-c1">length</span>;j<span class="pl-k">&lt;</span>jLen;j<span class="pl-k">++</span>){<span class="pl-k">var</span> iColspan<span class="pl-k">=</span>nTds[j].<span class="pl-c1">getAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>colspan<span class="pl-pds">&quot;</span></span>)<span class="pl-k">*</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2413" class="blob-num js-line-number" data-line-number="2413"></td>
        <td id="LC2413" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> iRowspan<span class="pl-k">=</span>nTds[j].<span class="pl-c1">getAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>rowspan<span class="pl-pds">&quot;</span></span>)<span class="pl-k">*</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>iColspan<span class="pl-k">||</span>iColspan<span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">||</span>iColspan<span class="pl-k">===</span><span class="pl-c1">1</span>){iColumnShifted<span class="pl-k">=</span><span class="pl-en">fnShiftCol</span>(aLayout,i,iColumn);</td>
      </tr>
      <tr>
        <td id="L2414" class="blob-num js-line-number" data-line-number="2414"></td>
        <td id="LC2414" class="blob-code blob-code-inner js-file-line">aLayout[i][iColumnShifted]<span class="pl-k">=</span>(nTds[j].<span class="pl-c1">nodeName</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>TD<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span><span class="pl-c1">TDELEM</span><span class="pl-k">:</span>nTds[j];<span class="pl-k">if</span>(iRowspan<span class="pl-k">||</span>iRowspan<span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">||</span>iRowspan<span class="pl-k">===</span><span class="pl-c1">1</span>){<span class="pl-k">for</span>(k<span class="pl-k">=</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2415" class="blob-num js-line-number" data-line-number="2415"></td>
        <td id="LC2415" class="blob-code blob-code-inner js-file-line">k<span class="pl-k">&lt;</span>iRowspan;k<span class="pl-k">++</span>){<span class="pl-en">fnAddRow</span>(i<span class="pl-k">+</span>k);aLayout[i<span class="pl-k">+</span>k][iColumnShifted]<span class="pl-k">=</span><span class="pl-c1">ROWSPAN</span>}}iColumn<span class="pl-k">++</span>}<span class="pl-k">else</span>{iColumnShifted<span class="pl-k">=</span><span class="pl-en">fnShiftCol</span>(aLayout,i,iColumn);</td>
      </tr>
      <tr>
        <td id="L2416" class="blob-num js-line-number" data-line-number="2416"></td>
        <td id="LC2416" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(k<span class="pl-k">=</span><span class="pl-c1">0</span>;k<span class="pl-k">&lt;</span>iColspan;k<span class="pl-k">++</span>){aLayout[i][iColumnShifted<span class="pl-k">+</span>k]<span class="pl-k">=</span><span class="pl-c1">COLSPAN</span>}iColumn<span class="pl-k">+=</span>iColspan}}}<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>,iLen<span class="pl-k">=</span>aLayout[<span class="pl-c1">0</span>].<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2417" class="blob-num js-line-number" data-line-number="2417"></td>
        <td id="LC2417" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">&lt;</span>iLen;i<span class="pl-k">++</span>){<span class="pl-k">for</span>(j<span class="pl-k">=</span><span class="pl-c1">0</span>,jLen<span class="pl-k">=</span><span class="pl-smi">aLayout</span>.<span class="pl-c1">length</span>;j<span class="pl-k">&lt;</span>jLen;j<span class="pl-k">++</span>){<span class="pl-k">if</span>(<span class="pl-k">typeof</span> aLayout[j][i]<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span>){<span class="pl-smi">aReturn</span>.<span class="pl-c1">push</span>(aLayout[j][i])</td>
      </tr>
      <tr>
        <td id="L2418" class="blob-num js-line-number" data-line-number="2418"></td>
        <td id="LC2418" class="blob-code blob-code-inner js-file-line">}}}<span class="pl-k">return</span> aReturn}function _fnMap(oRet,oSrc,sName,sMappedName){if(typeof sMappedName==&quot;undefined&quot;){sMappedName=sName</td>
      </tr>
      <tr>
        <td id="L2419" class="blob-num js-line-number" data-line-number="2419"></td>
        <td id="LC2419" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">if</span>(<span class="pl-k">typeof</span> oSrc[sName]<span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>){oRet[sMappedName]<span class="pl-k">=</span>oSrc[sName]}}<span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnInitalise</span><span class="pl-k">=</span>_fnInitalise;</td>
      </tr>
      <tr>
        <td id="L2420" class="blob-num js-line-number" data-line-number="2420"></td>
        <td id="LC2420" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnLanguageProcess</span><span class="pl-k">=</span>_fnLanguageProcess;<span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnAddColumn</span><span class="pl-k">=</span>_fnAddColumn;</td>
      </tr>
      <tr>
        <td id="L2421" class="blob-num js-line-number" data-line-number="2421"></td>
        <td id="LC2421" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnAddData</span><span class="pl-k">=</span>_fnAddData;<span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnGatherData</span><span class="pl-k">=</span>_fnGatherData;<span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnDrawHead</span><span class="pl-k">=</span>_fnDrawHead;</td>
      </tr>
      <tr>
        <td id="L2422" class="blob-num js-line-number" data-line-number="2422"></td>
        <td id="LC2422" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnDraw</span><span class="pl-k">=</span>_fnDraw;<span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnAjaxUpdate</span><span class="pl-k">=</span>_fnAjaxUpdate;<span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnAddOptionsHtml</span><span class="pl-k">=</span>_fnAddOptionsHtml;</td>
      </tr>
      <tr>
        <td id="L2423" class="blob-num js-line-number" data-line-number="2423"></td>
        <td id="LC2423" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnFeatureHtmlFilter</span><span class="pl-k">=</span>_fnFeatureHtmlFilter;<span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnFeatureHtmlInfo</span><span class="pl-k">=</span>_fnFeatureHtmlInfo;</td>
      </tr>
      <tr>
        <td id="L2424" class="blob-num js-line-number" data-line-number="2424"></td>
        <td id="LC2424" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnFeatureHtmlPaginate</span><span class="pl-k">=</span>_fnFeatureHtmlPaginate;<span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnPageChange</span><span class="pl-k">=</span>_fnPageChange;</td>
      </tr>
      <tr>
        <td id="L2425" class="blob-num js-line-number" data-line-number="2425"></td>
        <td id="LC2425" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnFeatureHtmlLength</span><span class="pl-k">=</span>_fnFeatureHtmlLength;<span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnFeatureHtmlProcessing</span><span class="pl-k">=</span>_fnFeatureHtmlProcessing;</td>
      </tr>
      <tr>
        <td id="L2426" class="blob-num js-line-number" data-line-number="2426"></td>
        <td id="LC2426" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnProcessingDisplay</span><span class="pl-k">=</span>_fnProcessingDisplay;<span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnFilterComplete</span><span class="pl-k">=</span>_fnFilterComplete;</td>
      </tr>
      <tr>
        <td id="L2427" class="blob-num js-line-number" data-line-number="2427"></td>
        <td id="LC2427" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnFilterColumn</span><span class="pl-k">=</span>_fnFilterColumn;<span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnFilter</span><span class="pl-k">=</span>_fnFilter;<span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnSortingClasses</span><span class="pl-k">=</span>_fnSortingClasses;</td>
      </tr>
      <tr>
        <td id="L2428" class="blob-num js-line-number" data-line-number="2428"></td>
        <td id="LC2428" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnVisibleToColumnIndex</span><span class="pl-k">=</span>_fnVisibleToColumnIndex;<span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnColumnIndexToVisible</span><span class="pl-k">=</span>_fnColumnIndexToVisible;</td>
      </tr>
      <tr>
        <td id="L2429" class="blob-num js-line-number" data-line-number="2429"></td>
        <td id="LC2429" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnNodeToDataIndex</span><span class="pl-k">=</span>_fnNodeToDataIndex;<span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnVisbleColumns</span><span class="pl-k">=</span>_fnVisbleColumns;</td>
      </tr>
      <tr>
        <td id="L2430" class="blob-num js-line-number" data-line-number="2430"></td>
        <td id="LC2430" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnBuildSearchArray</span><span class="pl-k">=</span>_fnBuildSearchArray;<span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnDataToSearch</span><span class="pl-k">=</span>_fnDataToSearch;</td>
      </tr>
      <tr>
        <td id="L2431" class="blob-num js-line-number" data-line-number="2431"></td>
        <td id="LC2431" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnCalculateEnd</span><span class="pl-k">=</span>_fnCalculateEnd;<span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnConvertToWidth</span><span class="pl-k">=</span>_fnConvertToWidth;</td>
      </tr>
      <tr>
        <td id="L2432" class="blob-num js-line-number" data-line-number="2432"></td>
        <td id="LC2432" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnCalculateColumnWidths</span><span class="pl-k">=</span>_fnCalculateColumnWidths;<span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnArrayCmp</span><span class="pl-k">=</span>_fnArrayCmp;</td>
      </tr>
      <tr>
        <td id="L2433" class="blob-num js-line-number" data-line-number="2433"></td>
        <td id="LC2433" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnDetectType</span><span class="pl-k">=</span>_fnDetectType;<span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnGetDataMaster</span><span class="pl-k">=</span>_fnGetDataMaster;</td>
      </tr>
      <tr>
        <td id="L2434" class="blob-num js-line-number" data-line-number="2434"></td>
        <td id="LC2434" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnGetTrNodes</span><span class="pl-k">=</span>_fnGetTrNodes;<span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnGetTdNodes</span><span class="pl-k">=</span>_fnGetTdNodes;<span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnEscapeRegex</span><span class="pl-k">=</span>_fnEscapeRegex;</td>
      </tr>
      <tr>
        <td id="L2435" class="blob-num js-line-number" data-line-number="2435"></td>
        <td id="LC2435" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnReOrderIndex</span><span class="pl-k">=</span>_fnReOrderIndex;<span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnColumnOrdering</span><span class="pl-k">=</span>_fnColumnOrdering;</td>
      </tr>
      <tr>
        <td id="L2436" class="blob-num js-line-number" data-line-number="2436"></td>
        <td id="LC2436" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnClearTable</span><span class="pl-k">=</span>_fnClearTable;<span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnSaveState</span><span class="pl-k">=</span>_fnSaveState;<span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnLoadState</span><span class="pl-k">=</span>_fnLoadState;</td>
      </tr>
      <tr>
        <td id="L2437" class="blob-num js-line-number" data-line-number="2437"></td>
        <td id="LC2437" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnCreateCookie</span><span class="pl-k">=</span>_fnCreateCookie;<span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnReadCookie</span><span class="pl-k">=</span>_fnReadCookie;<span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnGetUniqueThs</span><span class="pl-k">=</span>_fnGetUniqueThs;</td>
      </tr>
      <tr>
        <td id="L2438" class="blob-num js-line-number" data-line-number="2438"></td>
        <td id="LC2438" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">oApi</span>.<span class="pl-smi">_fnReDraw</span><span class="pl-k">=</span>_fnReDraw;<span class="pl-k">var</span> _that<span class="pl-k">=</span><span class="pl-c1">this</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">each</span>(<span class="pl-k">function</span>(){<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>,iLen,j,jLen;</td>
      </tr>
      <tr>
        <td id="L2439" class="blob-num js-line-number" data-line-number="2439"></td>
        <td id="LC2439" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>,iLen<span class="pl-k">=</span><span class="pl-smi">_aoSettings</span>.<span class="pl-c1">length</span>;i<span class="pl-k">&lt;</span>iLen;i<span class="pl-k">++</span>){<span class="pl-k">if</span>(_aoSettings[i].<span class="pl-smi">nTable</span><span class="pl-k">==</span><span class="pl-c1">this</span>){<span class="pl-en">alert</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>DataTables warning: Unable to re-initialise DataTable. Please use the API to make any configuration changes required.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2440" class="blob-num js-line-number" data-line-number="2440"></td>
        <td id="LC2440" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> _aoSettings[i]}}<span class="pl-k">var</span> oSettings<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">classSettings</span>();<span class="pl-smi">_aoSettings</span>.<span class="pl-c1">push</span>(oSettings);</td>
      </tr>
      <tr>
        <td id="L2441" class="blob-num js-line-number" data-line-number="2441"></td>
        <td id="LC2441" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> bInitHandedOff<span class="pl-k">=</span><span class="pl-c1">false</span>;<span class="pl-k">var</span> bUsePassedData<span class="pl-k">=</span><span class="pl-c1">false</span>;<span class="pl-k">var</span> sId<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">getAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>id<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2442" class="blob-num js-line-number" data-line-number="2442"></td>
        <td id="LC2442" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(sId<span class="pl-k">!==</span><span class="pl-c1">null</span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">sTableId</span><span class="pl-k">=</span>sId;<span class="pl-smi">oSettings</span>.<span class="pl-smi">sInstance</span><span class="pl-k">=</span>sId}<span class="pl-k">else</span>{<span class="pl-smi">oSettings</span>.<span class="pl-smi">sInstance</span><span class="pl-k">=</span><span class="pl-smi">_oExt</span>.<span class="pl-smi">_oExternConfig</span>.<span class="pl-smi">iNextUnique</span><span class="pl-k">++</span></td>
      </tr>
      <tr>
        <td id="L2443" class="blob-num js-line-number" data-line-number="2443"></td>
        <td id="LC2443" class="blob-code blob-code-inner js-file-line">}<span class="pl-smi">oSettings</span>.<span class="pl-smi">nTable</span><span class="pl-k">=</span><span class="pl-c1">this</span>;<span class="pl-smi">oSettings</span>.<span class="pl-smi">oApi</span><span class="pl-k">=</span><span class="pl-smi">_that</span>.<span class="pl-smi">oApi</span>;<span class="pl-k">if</span>(<span class="pl-k">typeof</span> oInit<span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>oInit<span class="pl-k">!==</span><span class="pl-c1">null</span>){<span class="pl-en">_fnMap</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>,oInit,<span class="pl-s"><span class="pl-pds">&quot;</span>bPaginate<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2444" class="blob-num js-line-number" data-line-number="2444"></td>
        <td id="LC2444" class="blob-code blob-code-inner js-file-line"><span class="pl-en">_fnMap</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>,oInit,<span class="pl-s"><span class="pl-pds">&quot;</span>bLengthChange<span class="pl-pds">&quot;</span></span>);<span class="pl-en">_fnMap</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>,oInit,<span class="pl-s"><span class="pl-pds">&quot;</span>bFilter<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2445" class="blob-num js-line-number" data-line-number="2445"></td>
        <td id="LC2445" class="blob-code blob-code-inner js-file-line"><span class="pl-en">_fnMap</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>,oInit,<span class="pl-s"><span class="pl-pds">&quot;</span>bSort<span class="pl-pds">&quot;</span></span>);<span class="pl-en">_fnMap</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>,oInit,<span class="pl-s"><span class="pl-pds">&quot;</span>bInfo<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2446" class="blob-num js-line-number" data-line-number="2446"></td>
        <td id="LC2446" class="blob-code blob-code-inner js-file-line"><span class="pl-en">_fnMap</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>,oInit,<span class="pl-s"><span class="pl-pds">&quot;</span>bProcessing<span class="pl-pds">&quot;</span></span>);<span class="pl-en">_fnMap</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>,oInit,<span class="pl-s"><span class="pl-pds">&quot;</span>bAutoWidth<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2447" class="blob-num js-line-number" data-line-number="2447"></td>
        <td id="LC2447" class="blob-code blob-code-inner js-file-line"><span class="pl-en">_fnMap</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>,oInit,<span class="pl-s"><span class="pl-pds">&quot;</span>bSortClasses<span class="pl-pds">&quot;</span></span>);<span class="pl-en">_fnMap</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>,oInit,<span class="pl-s"><span class="pl-pds">&quot;</span>bServerSide<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2448" class="blob-num js-line-number" data-line-number="2448"></td>
        <td id="LC2448" class="blob-code blob-code-inner js-file-line"><span class="pl-en">_fnMap</span>(oSettings,oInit,<span class="pl-s"><span class="pl-pds">&quot;</span>asStripClasses<span class="pl-pds">&quot;</span></span>);<span class="pl-en">_fnMap</span>(oSettings,oInit,<span class="pl-s"><span class="pl-pds">&quot;</span>fnRowCallback<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2449" class="blob-num js-line-number" data-line-number="2449"></td>
        <td id="LC2449" class="blob-code blob-code-inner js-file-line"><span class="pl-en">_fnMap</span>(oSettings,oInit,<span class="pl-s"><span class="pl-pds">&quot;</span>fnHeaderCallback<span class="pl-pds">&quot;</span></span>);<span class="pl-en">_fnMap</span>(oSettings,oInit,<span class="pl-s"><span class="pl-pds">&quot;</span>fnFooterCallback<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2450" class="blob-num js-line-number" data-line-number="2450"></td>
        <td id="LC2450" class="blob-code blob-code-inner js-file-line"><span class="pl-en">_fnMap</span>(oSettings,oInit,<span class="pl-s"><span class="pl-pds">&quot;</span>fnInitComplete<span class="pl-pds">&quot;</span></span>);<span class="pl-en">_fnMap</span>(oSettings,oInit,<span class="pl-s"><span class="pl-pds">&quot;</span>fnServerData<span class="pl-pds">&quot;</span></span>);<span class="pl-en">_fnMap</span>(oSettings,oInit,<span class="pl-s"><span class="pl-pds">&quot;</span>aaSorting<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2451" class="blob-num js-line-number" data-line-number="2451"></td>
        <td id="LC2451" class="blob-code blob-code-inner js-file-line"><span class="pl-en">_fnMap</span>(oSettings,oInit,<span class="pl-s"><span class="pl-pds">&quot;</span>aaSortingFixed<span class="pl-pds">&quot;</span></span>);<span class="pl-en">_fnMap</span>(oSettings,oInit,<span class="pl-s"><span class="pl-pds">&quot;</span>sPaginationType<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2452" class="blob-num js-line-number" data-line-number="2452"></td>
        <td id="LC2452" class="blob-code blob-code-inner js-file-line"><span class="pl-en">_fnMap</span>(oSettings,oInit,<span class="pl-s"><span class="pl-pds">&quot;</span>sAjaxSource<span class="pl-pds">&quot;</span></span>);<span class="pl-en">_fnMap</span>(oSettings,oInit,<span class="pl-s"><span class="pl-pds">&quot;</span>iCookieDuration<span class="pl-pds">&quot;</span></span>);<span class="pl-en">_fnMap</span>(oSettings,oInit,<span class="pl-s"><span class="pl-pds">&quot;</span>sDom<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2453" class="blob-num js-line-number" data-line-number="2453"></td>
        <td id="LC2453" class="blob-code blob-code-inner js-file-line"><span class="pl-en">_fnMap</span>(oSettings,oInit,<span class="pl-s"><span class="pl-pds">&quot;</span>oSearch<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>oPreviousSearch<span class="pl-pds">&quot;</span></span>);<span class="pl-en">_fnMap</span>(oSettings,oInit,<span class="pl-s"><span class="pl-pds">&quot;</span>aoSearchCols<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>aoPreSearchCols<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2454" class="blob-num js-line-number" data-line-number="2454"></td>
        <td id="LC2454" class="blob-code blob-code-inner js-file-line"><span class="pl-en">_fnMap</span>(oSettings,oInit,<span class="pl-s"><span class="pl-pds">&quot;</span>iDisplayLength<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>_iDisplayLength<span class="pl-pds">&quot;</span></span>);<span class="pl-en">_fnMap</span>(oSettings,oInit,<span class="pl-s"><span class="pl-pds">&quot;</span>bJQueryUI<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bJUI<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2455" class="blob-num js-line-number" data-line-number="2455"></td>
        <td id="LC2455" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-smi">oInit</span>.<span class="pl-smi">fnDrawCallback</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoDrawCallback</span>.<span class="pl-c1">push</span>({fn<span class="pl-k">:</span><span class="pl-smi">oInit</span>.<span class="pl-smi">fnDrawCallback</span>,sName<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>user<span class="pl-pds">&quot;</span></span>})</td>
      </tr>
      <tr>
        <td id="L2456" class="blob-num js-line-number" data-line-number="2456"></td>
        <td id="LC2456" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>.<span class="pl-smi">bServerSide</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>.<span class="pl-smi">bSort</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>.<span class="pl-smi">bSortClasses</span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoDrawCallback</span>.<span class="pl-c1">push</span>({fn<span class="pl-k">:</span>_fnSortingClasses,sName<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>server_side_sort_classes<span class="pl-pds">&quot;</span></span>})</td>
      </tr>
      <tr>
        <td id="L2457" class="blob-num js-line-number" data-line-number="2457"></td>
        <td id="LC2457" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-smi">oInit</span>.<span class="pl-smi">bJQueryUI</span><span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">oInit</span>.<span class="pl-smi">bJQueryUI</span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">oClasses</span><span class="pl-k">=</span><span class="pl-smi">_oExt</span>.<span class="pl-smi">oJUIClasses</span>;</td>
      </tr>
      <tr>
        <td id="L2458" class="blob-num js-line-number" data-line-number="2458"></td>
        <td id="LC2458" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-smi">oInit</span>.<span class="pl-smi">sDom</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">sDom</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;&quot;H&quot;lfr&gt;t&lt;&quot;F&quot;ip&gt;<span class="pl-pds">&#39;</span></span>}}<span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-smi">oInit</span>.<span class="pl-smi">iDisplayStart</span><span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-k">typeof</span> <span class="pl-smi">oSettings</span>.<span class="pl-smi">iInitDisplayStart</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">iInitDisplayStart</span><span class="pl-k">=</span><span class="pl-smi">oInit</span>.<span class="pl-smi">iDisplayStart</span>;</td>
      </tr>
      <tr>
        <td id="L2459" class="blob-num js-line-number" data-line-number="2459"></td>
        <td id="LC2459" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">oSettings</span>.<span class="pl-smi">_iDisplayStart</span><span class="pl-k">=</span><span class="pl-smi">oInit</span>.<span class="pl-smi">iDisplayStart</span>}<span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-smi">oInit</span>.<span class="pl-smi">bStateSave</span><span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>.<span class="pl-smi">bStateSave</span><span class="pl-k">=</span><span class="pl-smi">oInit</span>.<span class="pl-smi">bStateSave</span>;</td>
      </tr>
      <tr>
        <td id="L2460" class="blob-num js-line-number" data-line-number="2460"></td>
        <td id="LC2460" class="blob-code blob-code-inner js-file-line"><span class="pl-en">_fnLoadState</span>(oSettings,oInit);<span class="pl-smi">oSettings</span>.<span class="pl-smi">aoDrawCallback</span>.<span class="pl-c1">push</span>({fn<span class="pl-k">:</span>_fnSaveState,sName<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>state_save<span class="pl-pds">&quot;</span></span>})</td>
      </tr>
      <tr>
        <td id="L2461" class="blob-num js-line-number" data-line-number="2461"></td>
        <td id="LC2461" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-smi">oInit</span>.<span class="pl-smi">aaData</span><span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>){bUsePassedData<span class="pl-k">=</span><span class="pl-c1">true</span>}<span class="pl-k">if</span>(<span class="pl-k">typeof</span> oInit<span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-k">typeof</span> <span class="pl-smi">oInit</span>.<span class="pl-smi">aoData</span><span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>){<span class="pl-smi">oInit</span>.<span class="pl-smi">aoColumns</span><span class="pl-k">=</span><span class="pl-smi">oInit</span>.<span class="pl-smi">aoData</span></td>
      </tr>
      <tr>
        <td id="L2462" class="blob-num js-line-number" data-line-number="2462"></td>
        <td id="LC2462" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-smi">oInit</span>.<span class="pl-smi">oLanguage</span><span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>){<span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-smi">oInit</span>.<span class="pl-smi">oLanguage</span>.<span class="pl-smi">sUrl</span><span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">oInit</span>.<span class="pl-smi">oLanguage</span>.<span class="pl-smi">sUrl</span><span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">oLanguage</span>.<span class="pl-smi">sUrl</span><span class="pl-k">=</span><span class="pl-smi">oInit</span>.<span class="pl-smi">oLanguage</span>.<span class="pl-smi">sUrl</span>;</td>
      </tr>
      <tr>
        <td id="L2463" class="blob-num js-line-number" data-line-number="2463"></td>
        <td id="LC2463" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">$</span>.<span class="pl-en">getJSON</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oLanguage</span>.<span class="pl-smi">sUrl</span>,<span class="pl-c1">null</span>,<span class="pl-k">function</span>(<span class="pl-smi">json</span>){<span class="pl-en">_fnLanguageProcess</span>(oSettings,json,<span class="pl-c1">true</span>)</td>
      </tr>
      <tr>
        <td id="L2464" class="blob-num js-line-number" data-line-number="2464"></td>
        <td id="LC2464" class="blob-code blob-code-inner js-file-line">});bInitHandedOff<span class="pl-k">=</span><span class="pl-c1">true</span>}<span class="pl-k">else</span>{<span class="pl-en">_fnLanguageProcess</span>(oSettings,<span class="pl-smi">oInit</span>.<span class="pl-smi">oLanguage</span>,<span class="pl-c1">false</span>)}}}<span class="pl-k">else</span>{oInit<span class="pl-k">=</span>{}</td>
      </tr>
      <tr>
        <td id="L2465" class="blob-num js-line-number" data-line-number="2465"></td>
        <td id="LC2465" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-smi">oInit</span>.<span class="pl-smi">asStripClasses</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">asStripClasses</span>.<span class="pl-c1">push</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oClasses</span>.<span class="pl-smi">sStripOdd</span>);</td>
      </tr>
      <tr>
        <td id="L2466" class="blob-num js-line-number" data-line-number="2466"></td>
        <td id="LC2466" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">oSettings</span>.<span class="pl-smi">asStripClasses</span>.<span class="pl-c1">push</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oClasses</span>.<span class="pl-smi">sStripEven</span>)}<span class="pl-k">var</span> nThead<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">getElementsByTagName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>thead<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2467" class="blob-num js-line-number" data-line-number="2467"></td>
        <td id="LC2467" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> nThs<span class="pl-k">=</span><span class="pl-smi">nThead</span>.<span class="pl-c1">length</span><span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-c1">null</span><span class="pl-k">:</span><span class="pl-en">_fnGetUniqueThs</span>(nThead[<span class="pl-c1">0</span>]);<span class="pl-k">var</span> bUseCols<span class="pl-k">=</span><span class="pl-k">typeof</span> <span class="pl-smi">oInit</span>.<span class="pl-smi">aoColumns</span><span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2468" class="blob-num js-line-number" data-line-number="2468"></td>
        <td id="LC2468" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>,iLen<span class="pl-k">=</span>bUseCols<span class="pl-k">?</span><span class="pl-smi">oInit</span>.<span class="pl-smi">aoColumns</span>.<span class="pl-c1">length</span><span class="pl-k">:</span><span class="pl-smi">nThs</span>.<span class="pl-c1">length</span>;i<span class="pl-k">&lt;</span>iLen;i<span class="pl-k">++</span>){<span class="pl-k">var</span> oCol<span class="pl-k">=</span>bUseCols<span class="pl-k">?</span><span class="pl-smi">oInit</span>.<span class="pl-smi">aoColumns</span>[i]<span class="pl-k">:</span><span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L2469" class="blob-num js-line-number" data-line-number="2469"></td>
        <td id="LC2469" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> nTh<span class="pl-k">=</span>nThs<span class="pl-k">?</span>nThs[i]<span class="pl-k">:</span><span class="pl-c1">null</span>;<span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-smi">oInit</span>.<span class="pl-smi">saved_aoColumns</span><span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">oInit</span>.<span class="pl-smi">saved_aoColumns</span>.<span class="pl-c1">length</span><span class="pl-k">==</span>iLen){<span class="pl-k">if</span>(oCol<span class="pl-k">===</span><span class="pl-c1">null</span>){oCol<span class="pl-k">=</span>{}</td>
      </tr>
      <tr>
        <td id="L2470" class="blob-num js-line-number" data-line-number="2470"></td>
        <td id="LC2470" class="blob-code blob-code-inner js-file-line">}<span class="pl-smi">oCol</span>.<span class="pl-smi">bVisible</span><span class="pl-k">=</span><span class="pl-smi">oInit</span>.<span class="pl-smi">saved_aoColumns</span>[i].<span class="pl-smi">bVisible</span>}<span class="pl-en">_fnAddColumn</span>(oSettings,oCol,nTh)</td>
      </tr>
      <tr>
        <td id="L2471" class="blob-num js-line-number" data-line-number="2471"></td>
        <td id="LC2471" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>,iLen<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSorting</span>.<span class="pl-c1">length</span>;i<span class="pl-k">&lt;</span>iLen;i<span class="pl-k">++</span>){<span class="pl-k">var</span> oColumn<span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aoColumns</span>[<span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSorting</span>[i][<span class="pl-c1">0</span>]];</td>
      </tr>
      <tr>
        <td id="L2472" class="blob-num js-line-number" data-line-number="2472"></td>
        <td id="LC2472" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSorting</span>[i][<span class="pl-c1">2</span>]<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSorting</span>[i][<span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>}<span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-smi">oInit</span>.<span class="pl-smi">aaSorting</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-k">typeof</span> <span class="pl-smi">oSettings</span>.<span class="pl-smi">saved_aaSorting</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSorting</span>[i][<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-smi">oColumn</span>.<span class="pl-smi">asSorting</span>[<span class="pl-c1">0</span>]</td>
      </tr>
      <tr>
        <td id="L2473" class="blob-num js-line-number" data-line-number="2473"></td>
        <td id="LC2473" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">for</span>(j<span class="pl-k">=</span><span class="pl-c1">0</span>,jLen<span class="pl-k">=</span><span class="pl-smi">oColumn</span>.<span class="pl-smi">asSorting</span>.<span class="pl-c1">length</span>;j<span class="pl-k">&lt;</span>jLen;j<span class="pl-k">++</span>){<span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSorting</span>[i][<span class="pl-c1">1</span>]<span class="pl-k">==</span><span class="pl-smi">oColumn</span>.<span class="pl-smi">asSorting</span>[j]){<span class="pl-smi">oSettings</span>.<span class="pl-smi">aaSorting</span>[i][<span class="pl-c1">2</span>]<span class="pl-k">=</span>j;</td>
      </tr>
      <tr>
        <td id="L2474" class="blob-num js-line-number" data-line-number="2474"></td>
        <td id="LC2474" class="blob-code blob-code-inner js-file-line"><span class="pl-k">break</span>}}}<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-c1">getElementsByTagName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>thead<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">length</span><span class="pl-k">===</span><span class="pl-c1">0</span>){<span class="pl-c1">this</span>.<span class="pl-c1">appendChild</span>(<span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>thead<span class="pl-pds">&quot;</span></span>))</td>
      </tr>
      <tr>
        <td id="L2475" class="blob-num js-line-number" data-line-number="2475"></td>
        <td id="LC2475" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-c1">getElementsByTagName</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tbody<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">length</span><span class="pl-k">===</span><span class="pl-c1">0</span>){<span class="pl-c1">this</span>.<span class="pl-c1">appendChild</span>(<span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tbody<span class="pl-pds">&quot;</span></span>))</td>
      </tr>
      <tr>
        <td id="L2476" class="blob-num js-line-number" data-line-number="2476"></td>
        <td id="LC2476" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">if</span>(bUsePassedData){<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-smi">oInit</span>.<span class="pl-smi">aaData</span>.<span class="pl-c1">length</span>;i<span class="pl-k">++</span>){<span class="pl-en">_fnAddData</span>(oSettings,<span class="pl-smi">oInit</span>.<span class="pl-smi">aaData</span>[i])</td>
      </tr>
      <tr>
        <td id="L2477" class="blob-num js-line-number" data-line-number="2477"></td>
        <td id="LC2477" class="blob-code blob-code-inner js-file-line">}}<span class="pl-k">else</span>{<span class="pl-en">_fnGatherData</span>(oSettings)}<span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplay</span><span class="pl-k">=</span><span class="pl-smi">oSettings</span>.<span class="pl-smi">aiDisplayMaster</span>.<span class="pl-c1">slice</span>();</td>
      </tr>
      <tr>
        <td id="L2478" class="blob-num js-line-number" data-line-number="2478"></td>
        <td id="LC2478" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">oSettings</span>.<span class="pl-smi">oFeatures</span>.<span class="pl-smi">bAutoWidth</span>){<span class="pl-en">_fnCalculateColumnWidths</span>(oSettings)}<span class="pl-smi">oSettings</span>.<span class="pl-smi">bInitialised</span><span class="pl-k">=</span><span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L2479" class="blob-num js-line-number" data-line-number="2479"></td>
        <td id="LC2479" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(bInitHandedOff<span class="pl-k">===</span><span class="pl-c1">false</span>){<span class="pl-en">_fnInitalise</span>(oSettings)}})}})(jQuery);</td>
      </tr>
      <tr>
        <td id="L2480" class="blob-num js-line-number" data-line-number="2480"></td>
        <td id="LC2480" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> bibtexify <span class="pl-k">=</span> (<span class="pl-k">function</span>(<span class="pl-smi">$</span>) {</td>
      </tr>
      <tr>
        <td id="L2481" class="blob-num js-line-number" data-line-number="2481"></td>
        <td id="LC2481" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> helper function to &quot;compile&quot; LaTeX special characters to HTML</span></td>
      </tr>
      <tr>
        <td id="L2482" class="blob-num js-line-number" data-line-number="2482"></td>
        <td id="LC2482" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-en">htmlify</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">str</span>) {</td>
      </tr>
      <tr>
        <td id="L2483" class="blob-num js-line-number" data-line-number="2483"></td>
        <td id="LC2483" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>str) { <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>; }</td>
      </tr>
      <tr>
        <td id="L2484" class="blob-num js-line-number" data-line-number="2484"></td>
        <td id="LC2484" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> TODO: this is probably not a complete list..</span></td>
      </tr>
      <tr>
        <td id="L2485" class="blob-num js-line-number" data-line-number="2485"></td>
        <td id="LC2485" class="blob-code blob-code-inner js-file-line">        str <span class="pl-k">=</span> <span class="pl-smi">str</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\\</span>&quot;<span class="pl-cce">\{</span>a<span class="pl-cce">\}</span><span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>&amp;auml;<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2486" class="blob-num js-line-number" data-line-number="2486"></td>
        <td id="LC2486" class="blob-code blob-code-inner js-file-line">            .<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\{\\</span>aa<span class="pl-cce">\}</span><span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>&amp;aring;<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2487" class="blob-num js-line-number" data-line-number="2487"></td>
        <td id="LC2487" class="blob-code blob-code-inner js-file-line">            .<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\\</span>aa<span class="pl-cce">\{\}</span><span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>&amp;aring;<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2488" class="blob-num js-line-number" data-line-number="2488"></td>
        <td id="LC2488" class="blob-code blob-code-inner js-file-line">            .<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\\</span>&quot;a<span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>&amp;auml;<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2489" class="blob-num js-line-number" data-line-number="2489"></td>
        <td id="LC2489" class="blob-code blob-code-inner js-file-line">            .<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\\</span>&quot;<span class="pl-cce">\{</span>o<span class="pl-cce">\}</span><span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>&amp;ouml;<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2490" class="blob-num js-line-number" data-line-number="2490"></td>
        <td id="LC2490" class="blob-code blob-code-inner js-file-line">            .<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\\</span>&#39;e<span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>&amp;eacute;<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2491" class="blob-num js-line-number" data-line-number="2491"></td>
        <td id="LC2491" class="blob-code blob-code-inner js-file-line">            .<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\\</span>&#39;<span class="pl-cce">\{</span>e<span class="pl-cce">\}</span><span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>&amp;eacute;<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2492" class="blob-num js-line-number" data-line-number="2492"></td>
        <td id="LC2492" class="blob-code blob-code-inner js-file-line">            .<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\\</span>&#39;a<span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>&amp;aacute;<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2493" class="blob-num js-line-number" data-line-number="2493"></td>
        <td id="LC2493" class="blob-code blob-code-inner js-file-line">            .<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\\</span>&#39;A<span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>&amp;Aacute;<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2494" class="blob-num js-line-number" data-line-number="2494"></td>
        <td id="LC2494" class="blob-code blob-code-inner js-file-line">            .<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\\</span>&quot;o<span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>&amp;ouml;<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2495" class="blob-num js-line-number" data-line-number="2495"></td>
        <td id="LC2495" class="blob-code blob-code-inner js-file-line">            .<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\\</span>&quot;u<span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>&amp;uuml;<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2496" class="blob-num js-line-number" data-line-number="2496"></td>
        <td id="LC2496" class="blob-code blob-code-inner js-file-line">            .<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\\</span>ss<span class="pl-cce">\{\}</span><span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>&amp;szlig;<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2497" class="blob-num js-line-number" data-line-number="2497"></td>
        <td id="LC2497" class="blob-code blob-code-inner js-file-line">            .<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\{</span><span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2498" class="blob-num js-line-number" data-line-number="2498"></td>
        <td id="LC2498" class="blob-code blob-code-inner js-file-line">            .<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\}</span><span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2499" class="blob-num js-line-number" data-line-number="2499"></td>
        <td id="LC2499" class="blob-code blob-code-inner js-file-line">            .<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\\</span>&amp;<span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>&amp;<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2500" class="blob-num js-line-number" data-line-number="2500"></td>
        <td id="LC2500" class="blob-code blob-code-inner js-file-line">            .<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>--<span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>&amp;ndash;<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2501" class="blob-num js-line-number" data-line-number="2501"></td>
        <td id="LC2501" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> str;</td>
      </tr>
      <tr>
        <td id="L2502" class="blob-num js-line-number" data-line-number="2502"></td>
        <td id="LC2502" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L2503" class="blob-num js-line-number" data-line-number="2503"></td>
        <td id="LC2503" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-en">uriencode</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">str</span>) {</td>
      </tr>
      <tr>
        <td id="L2504" class="blob-num js-line-number" data-line-number="2504"></td>
        <td id="LC2504" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>str) { <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>; }</td>
      </tr>
      <tr>
        <td id="L2505" class="blob-num js-line-number" data-line-number="2505"></td>
        <td id="LC2505" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> TODO: this is probably not a complete list..</span></td>
      </tr>
      <tr>
        <td id="L2506" class="blob-num js-line-number" data-line-number="2506"></td>
        <td id="LC2506" class="blob-code blob-code-inner js-file-line">        str <span class="pl-k">=</span> <span class="pl-smi">str</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\\</span>&quot;<span class="pl-cce">\{</span>a<span class="pl-cce">\}</span><span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>%C3%A4<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2507" class="blob-num js-line-number" data-line-number="2507"></td>
        <td id="LC2507" class="blob-code blob-code-inner js-file-line">            .<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\{\\</span>aa<span class="pl-cce">\}</span><span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>%C3%A5<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2508" class="blob-num js-line-number" data-line-number="2508"></td>
        <td id="LC2508" class="blob-code blob-code-inner js-file-line">            .<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\\</span>aa<span class="pl-cce">\{\}</span><span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>%C3%A5<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2509" class="blob-num js-line-number" data-line-number="2509"></td>
        <td id="LC2509" class="blob-code blob-code-inner js-file-line">            .<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\\</span>&quot;a<span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>%C3%A4<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2510" class="blob-num js-line-number" data-line-number="2510"></td>
        <td id="LC2510" class="blob-code blob-code-inner js-file-line">            .<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\\</span>&quot;<span class="pl-cce">\{</span>o<span class="pl-cce">\}</span><span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>%C3%B6<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2511" class="blob-num js-line-number" data-line-number="2511"></td>
        <td id="LC2511" class="blob-code blob-code-inner js-file-line">            .<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\\</span>&#39;e<span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>%C3%A9<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2512" class="blob-num js-line-number" data-line-number="2512"></td>
        <td id="LC2512" class="blob-code blob-code-inner js-file-line">            .<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\\</span>&#39;<span class="pl-cce">\{</span>e<span class="pl-cce">\}</span><span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>%C3%A9<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2513" class="blob-num js-line-number" data-line-number="2513"></td>
        <td id="LC2513" class="blob-code blob-code-inner js-file-line">            .<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\\</span>&#39;a<span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>%C3%A1<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2514" class="blob-num js-line-number" data-line-number="2514"></td>
        <td id="LC2514" class="blob-code blob-code-inner js-file-line">            .<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\\</span>&#39;A<span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>%C3%81<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2515" class="blob-num js-line-number" data-line-number="2515"></td>
        <td id="LC2515" class="blob-code blob-code-inner js-file-line">            .<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\\</span>&quot;o<span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>%C3%B6<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2516" class="blob-num js-line-number" data-line-number="2516"></td>
        <td id="LC2516" class="blob-code blob-code-inner js-file-line">            .<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\\</span>&quot;u<span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>%C3%BC<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2517" class="blob-num js-line-number" data-line-number="2517"></td>
        <td id="LC2517" class="blob-code blob-code-inner js-file-line">            .<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\\</span>ss<span class="pl-cce">\{\}</span><span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>%C3%9F<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2518" class="blob-num js-line-number" data-line-number="2518"></td>
        <td id="LC2518" class="blob-code blob-code-inner js-file-line">            .<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\{</span><span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2519" class="blob-num js-line-number" data-line-number="2519"></td>
        <td id="LC2519" class="blob-code blob-code-inner js-file-line">            .<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\}</span><span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2520" class="blob-num js-line-number" data-line-number="2520"></td>
        <td id="LC2520" class="blob-code blob-code-inner js-file-line">            .<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\\</span>&amp;<span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>%26<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L2521" class="blob-num js-line-number" data-line-number="2521"></td>
        <td id="LC2521" class="blob-code blob-code-inner js-file-line">            .<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>--<span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>%E2%80%93<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2522" class="blob-num js-line-number" data-line-number="2522"></td>
        <td id="LC2522" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> str;</td>
      </tr>
      <tr>
        <td id="L2523" class="blob-num js-line-number" data-line-number="2523"></td>
        <td id="LC2523" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L2524" class="blob-num js-line-number" data-line-number="2524"></td>
        <td id="LC2524" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> helper functions to turn a single bibtex entry into HTML</span></td>
      </tr>
      <tr>
        <td id="L2525" class="blob-num js-line-number" data-line-number="2525"></td>
        <td id="LC2525" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> bib2html <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L2526" class="blob-num js-line-number" data-line-number="2526"></td>
        <td id="LC2526" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> the main function which turns the entry into HTML</span></td>
      </tr>
      <tr>
        <td id="L2527" class="blob-num js-line-number" data-line-number="2527"></td>
        <td id="LC2527" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">entry2html</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">entryData</span>, <span class="pl-smi">bib</span>) {</td>
      </tr>
      <tr>
        <td id="L2528" class="blob-num js-line-number" data-line-number="2528"></td>
        <td id="LC2528" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> type <span class="pl-k">=</span> <span class="pl-smi">entryData</span>.<span class="pl-smi">entryType</span>.<span class="pl-c1">toLowerCase</span>();</td>
      </tr>
      <tr>
        <td id="L2529" class="blob-num js-line-number" data-line-number="2529"></td>
        <td id="LC2529" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> default to type misc if type is unknown</span></td>
      </tr>
      <tr>
        <td id="L2530" class="blob-num js-line-number" data-line-number="2530"></td>
        <td id="LC2530" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span>(<span class="pl-en">array_keys</span>(bib2html).<span class="pl-c1">indexOf</span>(type) <span class="pl-k">===</span> <span class="pl-k">-</span><span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L2531" class="blob-num js-line-number" data-line-number="2531"></td>
        <td id="LC2531" class="blob-code blob-code-inner js-file-line">                type <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>misc<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2532" class="blob-num js-line-number" data-line-number="2532"></td>
        <td id="LC2532" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">entryData</span>.<span class="pl-smi">entryType</span> <span class="pl-k">=</span> type;</td>
      </tr>
      <tr>
        <td id="L2533" class="blob-num js-line-number" data-line-number="2533"></td>
        <td id="LC2533" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2534" class="blob-num js-line-number" data-line-number="2534"></td>
        <td id="LC2534" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> itemStr <span class="pl-k">=</span> <span class="pl-en">htmlify</span>(bib2html[type](entryData));</td>
      </tr>
      <tr>
        <td id="L2535" class="blob-num js-line-number" data-line-number="2535"></td>
        <td id="LC2535" class="blob-code blob-code-inner js-file-line">            itemStr <span class="pl-k">+=</span> <span class="pl-smi">bib2html</span>.<span class="pl-c1">links</span>(entryData);</td>
      </tr>
      <tr>
        <td id="L2536" class="blob-num js-line-number" data-line-number="2536"></td>
        <td id="LC2536" class="blob-code blob-code-inner js-file-line">            itemStr <span class="pl-k">+=</span> <span class="pl-smi">bib2html</span>.<span class="pl-en">bibtex</span>(entryData);</td>
      </tr>
      <tr>
        <td id="L2537" class="blob-num js-line-number" data-line-number="2537"></td>
        <td id="LC2537" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-smi">bib</span>.<span class="pl-c1">options</span>.<span class="pl-smi">tweet</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">entryData</span>.<span class="pl-smi">url</span>) {</td>
      </tr>
      <tr>
        <td id="L2538" class="blob-num js-line-number" data-line-number="2538"></td>
        <td id="LC2538" class="blob-code blob-code-inner js-file-line">                itemStr <span class="pl-k">+=</span> <span class="pl-smi">bib2html</span>.<span class="pl-en">tweet</span>(entryData, bib);</td>
      </tr>
      <tr>
        <td id="L2539" class="blob-num js-line-number" data-line-number="2539"></td>
        <td id="LC2539" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2540" class="blob-num js-line-number" data-line-number="2540"></td>
        <td id="LC2540" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-smi">itemStr</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>undefined<span class="pl-c1">[,<span class="pl-c1">.</span>]</span><span class="pl-k">?</span><span class="pl-pds">/</span>g</span>,</td>
      </tr>
      <tr>
        <td id="L2541" class="blob-num js-line-number" data-line-number="2541"></td>
        <td id="LC2541" class="blob-code blob-code-inner js-file-line">                                   <span class="pl-s"><span class="pl-pds">&#39;</span>&lt;span class=&quot;undefined&quot;&gt;missing&lt;<span class="pl-cce">\/</span>span&gt;<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2542" class="blob-num js-line-number" data-line-number="2542"></td>
        <td id="LC2542" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L2543" class="blob-num js-line-number" data-line-number="2543"></td>
        <td id="LC2543" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> converts the given author data into HTML</span></td>
      </tr>
      <tr>
        <td id="L2544" class="blob-num js-line-number" data-line-number="2544"></td>
        <td id="LC2544" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">authors2html</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">authorData</span>) {</td>
      </tr>
      <tr>
        <td id="L2545" class="blob-num js-line-number" data-line-number="2545"></td>
        <td id="LC2545" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> authorsStr <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2546" class="blob-num js-line-number" data-line-number="2546"></td>
        <td id="LC2546" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span>authorData) { <span class="pl-k">return</span> authorsStr ;}</td>
      </tr>
      <tr>
        <td id="L2547" class="blob-num js-line-number" data-line-number="2547"></td>
        <td id="LC2547" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (<span class="pl-k">var</span> index <span class="pl-k">=</span> <span class="pl-c1">0</span>; index <span class="pl-k">&lt;</span> <span class="pl-smi">authorData</span>.<span class="pl-c1">length</span>; index<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L2548" class="blob-num js-line-number" data-line-number="2548"></td>
        <td id="LC2548" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (index <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) { authorsStr <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span>; }</td>
      </tr>
      <tr>
        <td id="L2549" class="blob-num js-line-number" data-line-number="2549"></td>
        <td id="LC2549" class="blob-code blob-code-inner js-file-line">                authorsStr <span class="pl-k">+=</span> authorData[index].<span class="pl-smi">last</span>;</td>
      </tr>
      <tr>
        <td id="L2550" class="blob-num js-line-number" data-line-number="2550"></td>
        <td id="LC2550" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2551" class="blob-num js-line-number" data-line-number="2551"></td>
        <td id="LC2551" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-en">htmlify</span>(authorsStr);</td>
      </tr>
      <tr>
        <td id="L2552" class="blob-num js-line-number" data-line-number="2552"></td>
        <td id="LC2552" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L2553" class="blob-num js-line-number" data-line-number="2553"></td>
        <td id="LC2553" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> adds links to the PDF or url of the item</span></td>
      </tr>
      <tr>
        <td id="L2554" class="blob-num js-line-number" data-line-number="2554"></td>
        <td id="LC2554" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">links</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">entryData</span>) {</td>
      </tr>
      <tr>
        <td id="L2555" class="blob-num js-line-number" data-line-number="2555"></td>
        <td id="LC2555" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> itemStr <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2556" class="blob-num js-line-number" data-line-number="2556"></td>
        <td id="LC2556" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-smi">entryData</span>.<span class="pl-smi">url</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">entryData</span>.<span class="pl-smi">url</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">.</span><span class="pl-k">*</span><span class="pl-cce">\.</span>pdf<span class="pl-pds">/</span></span>)) {</td>
      </tr>
      <tr>
        <td id="L2557" class="blob-num js-line-number" data-line-number="2557"></td>
        <td id="LC2557" class="blob-code blob-code-inner js-file-line">                itemStr <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span> (&lt;a title=&quot;PDF-version of this article&quot;  target=&quot;_blank&quot; href=&quot;<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L2558" class="blob-num js-line-number" data-line-number="2558"></td>
        <td id="LC2558" class="blob-code blob-code-inner js-file-line">                            <span class="pl-smi">entryData</span>.<span class="pl-smi">url</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>&quot;&gt;pdf&lt;<span class="pl-cce">\/</span>a&gt;)<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2559" class="blob-num js-line-number" data-line-number="2559"></td>
        <td id="LC2559" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-smi">entryData</span>.<span class="pl-smi">url</span>) {</td>
      </tr>
      <tr>
        <td id="L2560" class="blob-num js-line-number" data-line-number="2560"></td>
        <td id="LC2560" class="blob-code blob-code-inner js-file-line">                itemStr <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span> (&lt;a title=&quot;This article online&quot; target=&quot;_blank&quot; href=&quot;<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> <span class="pl-smi">entryData</span>.<span class="pl-smi">url</span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L2561" class="blob-num js-line-number" data-line-number="2561"></td>
        <td id="LC2561" class="blob-code blob-code-inner js-file-line">                            <span class="pl-s"><span class="pl-pds">&#39;</span>&quot;&gt;link&lt;<span class="pl-cce">\/</span>a&gt;)<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2562" class="blob-num js-line-number" data-line-number="2562"></td>
        <td id="LC2562" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2563" class="blob-num js-line-number" data-line-number="2563"></td>
        <td id="LC2563" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> itemStr;</td>
      </tr>
      <tr>
        <td id="L2564" class="blob-num js-line-number" data-line-number="2564"></td>
        <td id="LC2564" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L2565" class="blob-num js-line-number" data-line-number="2565"></td>
        <td id="LC2565" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> adds the bibtex link and the opening div with bibtex content</span></td>
      </tr>
      <tr>
        <td id="L2566" class="blob-num js-line-number" data-line-number="2566"></td>
        <td id="LC2566" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">bibtex</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">entryData</span>) {</td>
      </tr>
      <tr>
        <td id="L2567" class="blob-num js-line-number" data-line-number="2567"></td>
        <td id="LC2567" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> itemStr <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2568" class="blob-num js-line-number" data-line-number="2568"></td>
        <td id="LC2568" class="blob-code blob-code-inner js-file-line">            itemStr <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span> (&lt;a title=&quot;This article as BibTeX&quot; href=&quot;#&quot; class=&quot;biblink&quot;&gt;<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L2569" class="blob-num js-line-number" data-line-number="2569"></td>
        <td id="LC2569" class="blob-code blob-code-inner js-file-line">                        <span class="pl-s"><span class="pl-pds">&#39;</span>bib&lt;/a&gt;)&lt;div class=&quot;bibinfo hidden&quot;&gt;<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2570" class="blob-num js-line-number" data-line-number="2570"></td>
        <td id="LC2570" class="blob-code blob-code-inner js-file-line">            itemStr <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>&lt;a href=&quot;#&quot; class=&quot;bibclose&quot; title=&quot;Close&quot;&gt;x&lt;/a&gt;&lt;pre&gt;<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2571" class="blob-num js-line-number" data-line-number="2571"></td>
        <td id="LC2571" class="blob-code blob-code-inner js-file-line">            itemStr <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>@<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> <span class="pl-smi">entryData</span>.<span class="pl-smi">entryType</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>{<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">entryData</span>.<span class="pl-c1">cite</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2572" class="blob-num js-line-number" data-line-number="2572"></td>
        <td id="LC2572" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">$</span>.<span class="pl-en">each</span>(entryData, <span class="pl-k">function</span>(<span class="pl-smi">key</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L2573" class="blob-num js-line-number" data-line-number="2573"></td>
        <td id="LC2573" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (key <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>author<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L2574" class="blob-num js-line-number" data-line-number="2574"></td>
        <td id="LC2574" class="blob-code blob-code-inner js-file-line">                    itemStr <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>  author = { <span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2575" class="blob-num js-line-number" data-line-number="2575"></td>
        <td id="LC2575" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">for</span> (<span class="pl-k">var</span> index <span class="pl-k">=</span> <span class="pl-c1">0</span>; index <span class="pl-k">&lt;</span> <span class="pl-smi">value</span>.<span class="pl-c1">length</span>; index<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L2576" class="blob-num js-line-number" data-line-number="2576"></td>
        <td id="LC2576" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (index <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) { itemStr <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&quot;</span> and <span class="pl-pds">&quot;</span></span>; }</td>
      </tr>
      <tr>
        <td id="L2577" class="blob-num js-line-number" data-line-number="2577"></td>
        <td id="LC2577" class="blob-code blob-code-inner js-file-line">                        itemStr <span class="pl-k">+=</span> value[index].<span class="pl-smi">last</span>;</td>
      </tr>
      <tr>
        <td id="L2578" class="blob-num js-line-number" data-line-number="2578"></td>
        <td id="LC2578" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L2579" class="blob-num js-line-number" data-line-number="2579"></td>
        <td id="LC2579" class="blob-code blob-code-inner js-file-line">                    itemStr <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span> },<span class="pl-cce">\n</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2580" class="blob-num js-line-number" data-line-number="2580"></td>
        <td id="LC2580" class="blob-code blob-code-inner js-file-line">                } <span class="pl-k">else</span> <span class="pl-k">if</span> (key <span class="pl-k">!=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>entryType<span class="pl-pds">&#39;</span></span> <span class="pl-k">&amp;&amp;</span> key <span class="pl-k">!=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>cite<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L2581" class="blob-num js-line-number" data-line-number="2581"></td>
        <td id="LC2581" class="blob-code blob-code-inner js-file-line">                    itemStr <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>  <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> key <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> = { <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> value <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> },<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2582" class="blob-num js-line-number" data-line-number="2582"></td>
        <td id="LC2582" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2583" class="blob-num js-line-number" data-line-number="2583"></td>
        <td id="LC2583" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L2584" class="blob-num js-line-number" data-line-number="2584"></td>
        <td id="LC2584" class="blob-code blob-code-inner js-file-line">            itemStr <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>}&lt;/pre&gt;&lt;/div&gt;<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2585" class="blob-num js-line-number" data-line-number="2585"></td>
        <td id="LC2585" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> itemStr;</td>
      </tr>
      <tr>
        <td id="L2586" class="blob-num js-line-number" data-line-number="2586"></td>
        <td id="LC2586" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L2587" class="blob-num js-line-number" data-line-number="2587"></td>
        <td id="LC2587" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> generates the twitter link for the entry</span></td>
      </tr>
      <tr>
        <td id="L2588" class="blob-num js-line-number" data-line-number="2588"></td>
        <td id="LC2588" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">tweet</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">entryData</span>, <span class="pl-smi">bib</span>) {</td>
      </tr>
      <tr>
        <td id="L2589" class="blob-num js-line-number" data-line-number="2589"></td>
        <td id="LC2589" class="blob-code blob-code-inner js-file-line">          <span class="pl-c"><span class="pl-c">//</span> url, via, text</span></td>
      </tr>
      <tr>
        <td id="L2590" class="blob-num js-line-number" data-line-number="2590"></td>
        <td id="LC2590" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> itemStr <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span> (&lt;a title=&quot;Tweet this article&quot; href=&quot;http://twitter.com/share?url=<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2591" class="blob-num js-line-number" data-line-number="2591"></td>
        <td id="LC2591" class="blob-code blob-code-inner js-file-line">          itemStr <span class="pl-k">+=</span> <span class="pl-smi">entryData</span>.<span class="pl-smi">url</span>;</td>
      </tr>
      <tr>
        <td id="L2592" class="blob-num js-line-number" data-line-number="2592"></td>
        <td id="LC2592" class="blob-code blob-code-inner js-file-line">          itemStr <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>&amp;via=<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> <span class="pl-smi">bib</span>.<span class="pl-c1">options</span>.<span class="pl-smi">tweet</span>;</td>
      </tr>
      <tr>
        <td id="L2593" class="blob-num js-line-number" data-line-number="2593"></td>
        <td id="LC2593" class="blob-code blob-code-inner js-file-line">          itemStr <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>&amp;text=<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2594" class="blob-num js-line-number" data-line-number="2594"></td>
        <td id="LC2594" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> <span class="pl-en">splitName</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">wholeName</span>) {</td>
      </tr>
      <tr>
        <td id="L2595" class="blob-num js-line-number" data-line-number="2595"></td>
        <td id="LC2595" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> spl <span class="pl-k">=</span> <span class="pl-smi">wholeName</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2596" class="blob-num js-line-number" data-line-number="2596"></td>
        <td id="LC2596" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> spl[<span class="pl-smi">spl</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L2597" class="blob-num js-line-number" data-line-number="2597"></td>
        <td id="LC2597" class="blob-code blob-code-inner js-file-line">          };</td>
      </tr>
      <tr>
        <td id="L2598" class="blob-num js-line-number" data-line-number="2598"></td>
        <td id="LC2598" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> auth <span class="pl-k">=</span> <span class="pl-smi">entryData</span>.<span class="pl-smi">author</span>;</td>
      </tr>
      <tr>
        <td id="L2599" class="blob-num js-line-number" data-line-number="2599"></td>
        <td id="LC2599" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-k">!</span>auth) {</td>
      </tr>
      <tr>
        <td id="L2600" class="blob-num js-line-number" data-line-number="2600"></td>
        <td id="LC2600" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> nothing to do</span></td>
      </tr>
      <tr>
        <td id="L2601" class="blob-num js-line-number" data-line-number="2601"></td>
        <td id="LC2601" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-smi">auth</span>.<span class="pl-c1">length</span> <span class="pl-k">==</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L2602" class="blob-num js-line-number" data-line-number="2602"></td>
        <td id="LC2602" class="blob-code blob-code-inner js-file-line">            itemStr <span class="pl-k">+=</span> <span class="pl-en">uriencode</span>(<span class="pl-en">splitName</span>(auth[<span class="pl-c1">0</span>].<span class="pl-smi">last</span>));</td>
      </tr>
      <tr>
        <td id="L2603" class="blob-num js-line-number" data-line-number="2603"></td>
        <td id="LC2603" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-smi">auth</span>.<span class="pl-c1">length</span> <span class="pl-k">==</span> <span class="pl-c1">2</span>) {</td>
      </tr>
      <tr>
        <td id="L2604" class="blob-num js-line-number" data-line-number="2604"></td>
        <td id="LC2604" class="blob-code blob-code-inner js-file-line">            itemStr <span class="pl-k">+=</span> <span class="pl-en">uriencode</span>(<span class="pl-en">splitName</span>(auth[<span class="pl-c1">0</span>].<span class="pl-smi">last</span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>%26<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-en">splitName</span>(auth[<span class="pl-c1">1</span>].<span class="pl-smi">last</span>));</td>
      </tr>
      <tr>
        <td id="L2605" class="blob-num js-line-number" data-line-number="2605"></td>
        <td id="LC2605" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2606" class="blob-num js-line-number" data-line-number="2606"></td>
        <td id="LC2606" class="blob-code blob-code-inner js-file-line">            itemStr <span class="pl-k">+=</span> <span class="pl-en">uriencode</span>(<span class="pl-en">splitName</span>(auth[<span class="pl-c1">0</span>].<span class="pl-smi">last</span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> et al<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2607" class="blob-num js-line-number" data-line-number="2607"></td>
        <td id="LC2607" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L2608" class="blob-num js-line-number" data-line-number="2608"></td>
        <td id="LC2608" class="blob-code blob-code-inner js-file-line">          itemStr <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-en">uriencode</span>(<span class="pl-smi">entryData</span>.<span class="pl-c1">title</span>);</td>
      </tr>
      <tr>
        <td id="L2609" class="blob-num js-line-number" data-line-number="2609"></td>
        <td id="LC2609" class="blob-code blob-code-inner js-file-line">          itemStr <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>&quot; target=&quot;_blank&quot;&gt;tweet&lt;/a&gt;)<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2610" class="blob-num js-line-number" data-line-number="2610"></td>
        <td id="LC2610" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> itemStr;</td>
      </tr>
      <tr>
        <td id="L2611" class="blob-num js-line-number" data-line-number="2611"></td>
        <td id="LC2611" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L2612" class="blob-num js-line-number" data-line-number="2612"></td>
        <td id="LC2612" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> helper functions for formatting different types of bibtex entries</span></td>
      </tr>
      <tr>
        <td id="L2613" class="blob-num js-line-number" data-line-number="2613"></td>
        <td id="LC2613" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">inproceedings</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">entryData</span>) {</td>
      </tr>
      <tr>
        <td id="L2614" class="blob-num js-line-number" data-line-number="2614"></td>
        <td id="LC2614" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">authors2html</span>(<span class="pl-smi">entryData</span>.<span class="pl-smi">author</span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> (<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">entryData</span>.<span class="pl-smi">year</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>). <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L2615" class="blob-num js-line-number" data-line-number="2615"></td>
        <td id="LC2615" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">entryData</span>.<span class="pl-c1">title</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>. In &lt;em&gt;<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">entryData</span>.<span class="pl-smi">booktitle</span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L2616" class="blob-num js-line-number" data-line-number="2616"></td>
        <td id="LC2616" class="blob-code blob-code-inner js-file-line">                <span class="pl-s"><span class="pl-pds">&quot;</span>, pp. <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">entryData</span>.<span class="pl-smi">pages</span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L2617" class="blob-num js-line-number" data-line-number="2617"></td>
        <td id="LC2617" class="blob-code blob-code-inner js-file-line">                ((<span class="pl-smi">entryData</span>.<span class="pl-smi">address</span>)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">entryData</span>.<span class="pl-smi">address</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>.&lt;<span class="pl-cce">\/</span>em&gt;<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2618" class="blob-num js-line-number" data-line-number="2618"></td>
        <td id="LC2618" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L2619" class="blob-num js-line-number" data-line-number="2619"></td>
        <td id="LC2619" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">article</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">entryData</span>) {</td>
      </tr>
      <tr>
        <td id="L2620" class="blob-num js-line-number" data-line-number="2620"></td>
        <td id="LC2620" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">authors2html</span>(<span class="pl-smi">entryData</span>.<span class="pl-smi">author</span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> (<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">entryData</span>.<span class="pl-smi">year</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>). <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L2621" class="blob-num js-line-number" data-line-number="2621"></td>
        <td id="LC2621" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">entryData</span>.<span class="pl-c1">title</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>. &lt;em&gt;<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">entryData</span>.<span class="pl-smi">journal</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">entryData</span>.<span class="pl-smi">volume</span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L2622" class="blob-num js-line-number" data-line-number="2622"></td>
        <td id="LC2622" class="blob-code blob-code-inner js-file-line">                ((<span class="pl-smi">entryData</span>.<span class="pl-smi">number</span>)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">entryData</span>.<span class="pl-smi">number</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L2623" class="blob-num js-line-number" data-line-number="2623"></td>
        <td id="LC2623" class="blob-code blob-code-inner js-file-line">                <span class="pl-s"><span class="pl-pds">&quot;</span>pp. <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">entryData</span>.<span class="pl-smi">pages</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>. <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L2624" class="blob-num js-line-number" data-line-number="2624"></td>
        <td id="LC2624" class="blob-code blob-code-inner js-file-line">                ((<span class="pl-smi">entryData</span>.<span class="pl-smi">address</span>)<span class="pl-k">?</span><span class="pl-smi">entryData</span>.<span class="pl-smi">address</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-cce">\/</span>em&gt;<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2625" class="blob-num js-line-number" data-line-number="2625"></td>
        <td id="LC2625" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L2626" class="blob-num js-line-number" data-line-number="2626"></td>
        <td id="LC2626" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">misc</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">entryData</span>) {</td>
      </tr>
      <tr>
        <td id="L2627" class="blob-num js-line-number" data-line-number="2627"></td>
        <td id="LC2627" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">authors2html</span>(<span class="pl-smi">entryData</span>.<span class="pl-smi">author</span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> (<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">entryData</span>.<span class="pl-smi">year</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>). <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L2628" class="blob-num js-line-number" data-line-number="2628"></td>
        <td id="LC2628" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">entryData</span>.<span class="pl-c1">title</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>. <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L2629" class="blob-num js-line-number" data-line-number="2629"></td>
        <td id="LC2629" class="blob-code blob-code-inner js-file-line">                ((<span class="pl-smi">entryData</span>.<span class="pl-smi">howpublished</span>)<span class="pl-k">?</span><span class="pl-smi">entryData</span>.<span class="pl-smi">howpublished</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>. <span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>) <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L2630" class="blob-num js-line-number" data-line-number="2630"></td>
        <td id="LC2630" class="blob-code blob-code-inner js-file-line">                ((<span class="pl-smi">entryData</span>.<span class="pl-smi">note</span>)<span class="pl-k">?</span><span class="pl-smi">entryData</span>.<span class="pl-smi">note</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2631" class="blob-num js-line-number" data-line-number="2631"></td>
        <td id="LC2631" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L2632" class="blob-num js-line-number" data-line-number="2632"></td>
        <td id="LC2632" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">mastersthesis</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">entryData</span>) {</td>
      </tr>
      <tr>
        <td id="L2633" class="blob-num js-line-number" data-line-number="2633"></td>
        <td id="LC2633" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">authors2html</span>(<span class="pl-smi">entryData</span>.<span class="pl-smi">author</span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> (<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">entryData</span>.<span class="pl-smi">year</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>). <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L2634" class="blob-num js-line-number" data-line-number="2634"></td>
        <td id="LC2634" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">entryData</span>.<span class="pl-c1">title</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>. <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">entryData</span>.<span class="pl-c1">type</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>. <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L2635" class="blob-num js-line-number" data-line-number="2635"></td>
        <td id="LC2635" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">entryData</span>.<span class="pl-smi">organization</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">entryData</span>.<span class="pl-smi">school</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2636" class="blob-num js-line-number" data-line-number="2636"></td>
        <td id="LC2636" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L2637" class="blob-num js-line-number" data-line-number="2637"></td>
        <td id="LC2637" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">techreport</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">entryData</span>) {</td>
      </tr>
      <tr>
        <td id="L2638" class="blob-num js-line-number" data-line-number="2638"></td>
        <td id="LC2638" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">authors2html</span>(<span class="pl-smi">entryData</span>.<span class="pl-smi">author</span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> (<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">entryData</span>.<span class="pl-smi">year</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>). <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L2639" class="blob-num js-line-number" data-line-number="2639"></td>
        <td id="LC2639" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">entryData</span>.<span class="pl-c1">title</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>. <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">entryData</span>.<span class="pl-smi">institution</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>. <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L2640" class="blob-num js-line-number" data-line-number="2640"></td>
        <td id="LC2640" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">entryData</span>.<span class="pl-smi">number</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>. <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">entryData</span>.<span class="pl-c1">type</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2641" class="blob-num js-line-number" data-line-number="2641"></td>
        <td id="LC2641" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L2642" class="blob-num js-line-number" data-line-number="2642"></td>
        <td id="LC2642" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">book</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">entryData</span>) {</td>
      </tr>
      <tr>
        <td id="L2643" class="blob-num js-line-number" data-line-number="2643"></td>
        <td id="LC2643" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">authors2html</span>(<span class="pl-smi">entryData</span>.<span class="pl-smi">author</span> <span class="pl-k">||</span> <span class="pl-smi">entryData</span>.<span class="pl-smi">editor</span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> (<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">entryData</span>.<span class="pl-smi">year</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>). <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L2644" class="blob-num js-line-number" data-line-number="2644"></td>
        <td id="LC2644" class="blob-code blob-code-inner js-file-line">                <span class="pl-s"><span class="pl-pds">&quot;</span> &lt;em&gt;<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">entryData</span>.<span class="pl-c1">title</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-cce">\/</span>em&gt;, <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L2645" class="blob-num js-line-number" data-line-number="2645"></td>
        <td id="LC2645" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">entryData</span>.<span class="pl-smi">publisher</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">entryData</span>.<span class="pl-smi">year</span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L2646" class="blob-num js-line-number" data-line-number="2646"></td>
        <td id="LC2646" class="blob-code blob-code-inner js-file-line">                ((<span class="pl-smi">entryData</span>.<span class="pl-smi">issn</span>)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>, ISBN: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">entryData</span>.<span class="pl-smi">issn</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2647" class="blob-num js-line-number" data-line-number="2647"></td>
        <td id="LC2647" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L2648" class="blob-num js-line-number" data-line-number="2648"></td>
        <td id="LC2648" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">inbook</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">entryData</span>) {</td>
      </tr>
      <tr>
        <td id="L2649" class="blob-num js-line-number" data-line-number="2649"></td>
        <td id="LC2649" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">authors2html</span>(<span class="pl-smi">entryData</span>.<span class="pl-smi">author</span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> (<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">entryData</span>.<span class="pl-smi">year</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>). <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L2650" class="blob-num js-line-number" data-line-number="2650"></td>
        <td id="LC2650" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">entryData</span>.<span class="pl-smi">chapter</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> in &lt;em&gt;<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">entryData</span>.<span class="pl-c1">title</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-cce">\/</span>em&gt;, <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L2651" class="blob-num js-line-number" data-line-number="2651"></td>
        <td id="LC2651" class="blob-code blob-code-inner js-file-line">                ((<span class="pl-smi">entryData</span>.<span class="pl-smi">editor</span>)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span> Edited by <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">entryData</span>.<span class="pl-smi">editor</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>) <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L2652" class="blob-num js-line-number" data-line-number="2652"></td>
        <td id="LC2652" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">entryData</span>.<span class="pl-smi">publisher</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>, pp. <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">entryData</span>.<span class="pl-smi">pages</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L2653" class="blob-num js-line-number" data-line-number="2653"></td>
        <td id="LC2653" class="blob-code blob-code-inner js-file-line">                ((<span class="pl-smi">entryData</span>.<span class="pl-smi">series</span>)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>, &lt;em&gt;<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">entryData</span>.<span class="pl-smi">series</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-cce">\/</span>em&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>) <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L2654" class="blob-num js-line-number" data-line-number="2654"></td>
        <td id="LC2654" class="blob-code blob-code-inner js-file-line">                ((<span class="pl-smi">entryData</span>.<span class="pl-smi">volume</span>)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>, Vol. <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">entryData</span>.<span class="pl-smi">volume</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>) <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L2655" class="blob-num js-line-number" data-line-number="2655"></td>
        <td id="LC2655" class="blob-code blob-code-inner js-file-line">                ((<span class="pl-smi">entryData</span>.<span class="pl-smi">issn</span>)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>, ISBN: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">entryData</span>.<span class="pl-smi">issn</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>) <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L2656" class="blob-num js-line-number" data-line-number="2656"></td>
        <td id="LC2656" class="blob-code blob-code-inner js-file-line">                <span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2657" class="blob-num js-line-number" data-line-number="2657"></td>
        <td id="LC2657" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L2658" class="blob-num js-line-number" data-line-number="2658"></td>
        <td id="LC2658" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">proceedings</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">entryData</span>) {</td>
      </tr>
      <tr>
        <td id="L2659" class="blob-num js-line-number" data-line-number="2659"></td>
        <td id="LC2659" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">authors2html</span>(<span class="pl-smi">entryData</span>.<span class="pl-smi">editor</span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>, editor(s) (<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">entryData</span>.<span class="pl-smi">year</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>). <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L2660" class="blob-num js-line-number" data-line-number="2660"></td>
        <td id="LC2660" class="blob-code blob-code-inner js-file-line">                <span class="pl-s"><span class="pl-pds">&quot;</span> &lt;em&gt;<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">entryData</span>.<span class="pl-c1">title</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>.&lt;<span class="pl-cce">\/</span>em&gt;<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L2661" class="blob-num js-line-number" data-line-number="2661"></td>
        <td id="LC2661" class="blob-code blob-code-inner js-file-line">                ((<span class="pl-smi">entryData</span>.<span class="pl-smi">volume</span>)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>, Vol. <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">entryData</span>.<span class="pl-smi">volume</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>) <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L2662" class="blob-num js-line-number" data-line-number="2662"></td>
        <td id="LC2662" class="blob-code blob-code-inner js-file-line">                ((<span class="pl-smi">entryData</span>.<span class="pl-smi">address</span>)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-smi">entryData</span>.<span class="pl-smi">address</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>. <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L2663" class="blob-num js-line-number" data-line-number="2663"></td>
        <td id="LC2663" class="blob-code blob-code-inner js-file-line">                ((<span class="pl-smi">entryData</span>.<span class="pl-smi">organization</span>)<span class="pl-k">?</span> <span class="pl-k">+</span> <span class="pl-smi">entryData</span>.<span class="pl-smi">organization</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>) <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L2664" class="blob-num js-line-number" data-line-number="2664"></td>
        <td id="LC2664" class="blob-code blob-code-inner js-file-line">                ((<span class="pl-smi">entryData</span>.<span class="pl-smi">organization</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">entryData</span>.<span class="pl-smi">publisher</span>)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>) <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L2665" class="blob-num js-line-number" data-line-number="2665"></td>
        <td id="LC2665" class="blob-code blob-code-inner js-file-line">                (<span class="pl-smi">entryData</span>.<span class="pl-smi">publisher</span><span class="pl-k">?</span><span class="pl-smi">entryData</span>.<span class="pl-smi">publisher</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>. <span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>) <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L2666" class="blob-num js-line-number" data-line-number="2666"></td>
        <td id="LC2666" class="blob-code blob-code-inner js-file-line">                (<span class="pl-smi">entryData</span>.<span class="pl-smi">note</span><span class="pl-k">?</span><span class="pl-smi">entryData</span>.<span class="pl-smi">note</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2667" class="blob-num js-line-number" data-line-number="2667"></td>
        <td id="LC2667" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L2668" class="blob-num js-line-number" data-line-number="2668"></td>
        <td id="LC2668" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> weights of the different types of entries; used when sorting</span></td>
      </tr>
      <tr>
        <td id="L2669" class="blob-num js-line-number" data-line-number="2669"></td>
        <td id="LC2669" class="blob-code blob-code-inner js-file-line">        importance<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L2670" class="blob-num js-line-number" data-line-number="2670"></td>
        <td id="LC2670" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&#39;</span>TITLE<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-c1">9999</span>,</td>
      </tr>
      <tr>
        <td id="L2671" class="blob-num js-line-number" data-line-number="2671"></td>
        <td id="LC2671" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&#39;</span>misc<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L2672" class="blob-num js-line-number" data-line-number="2672"></td>
        <td id="LC2672" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&#39;</span>manual<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-c1">10</span>,</td>
      </tr>
      <tr>
        <td id="L2673" class="blob-num js-line-number" data-line-number="2673"></td>
        <td id="LC2673" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&#39;</span>techreport<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-c1">20</span>,</td>
      </tr>
      <tr>
        <td id="L2674" class="blob-num js-line-number" data-line-number="2674"></td>
        <td id="LC2674" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&#39;</span>mastersthesis<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-c1">30</span>,</td>
      </tr>
      <tr>
        <td id="L2675" class="blob-num js-line-number" data-line-number="2675"></td>
        <td id="LC2675" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&#39;</span>inproceedings<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-c1">40</span>,</td>
      </tr>
      <tr>
        <td id="L2676" class="blob-num js-line-number" data-line-number="2676"></td>
        <td id="LC2676" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&#39;</span>incollection<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-c1">50</span>,</td>
      </tr>
      <tr>
        <td id="L2677" class="blob-num js-line-number" data-line-number="2677"></td>
        <td id="LC2677" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&#39;</span>proceedings<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-c1">60</span>,</td>
      </tr>
      <tr>
        <td id="L2678" class="blob-num js-line-number" data-line-number="2678"></td>
        <td id="LC2678" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&#39;</span>conference<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-c1">70</span>,</td>
      </tr>
      <tr>
        <td id="L2679" class="blob-num js-line-number" data-line-number="2679"></td>
        <td id="LC2679" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&#39;</span>article<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-c1">80</span>,</td>
      </tr>
      <tr>
        <td id="L2680" class="blob-num js-line-number" data-line-number="2680"></td>
        <td id="LC2680" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&#39;</span>phdthesis<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-c1">90</span>,</td>
      </tr>
      <tr>
        <td id="L2681" class="blob-num js-line-number" data-line-number="2681"></td>
        <td id="LC2681" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&#39;</span>inbook<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-c1">100</span>,</td>
      </tr>
      <tr>
        <td id="L2682" class="blob-num js-line-number" data-line-number="2682"></td>
        <td id="LC2682" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&#39;</span>proceedings<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-c1">105</span>,</td>
      </tr>
      <tr>
        <td id="L2683" class="blob-num js-line-number" data-line-number="2683"></td>
        <td id="LC2683" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&#39;</span>book<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-c1">110</span>,</td>
      </tr>
      <tr>
        <td id="L2684" class="blob-num js-line-number" data-line-number="2684"></td>
        <td id="LC2684" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&#39;</span>unpublished<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-c1">120</span></td>
      </tr>
      <tr>
        <td id="L2685" class="blob-num js-line-number" data-line-number="2685"></td>
        <td id="LC2685" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L2686" class="blob-num js-line-number" data-line-number="2686"></td>
        <td id="LC2686" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> labels used for the different types of entries</span></td>
      </tr>
      <tr>
        <td id="L2687" class="blob-num js-line-number" data-line-number="2687"></td>
        <td id="LC2687" class="blob-code blob-code-inner js-file-line">        labels<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L2688" class="blob-num js-line-number" data-line-number="2688"></td>
        <td id="LC2688" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&#39;</span>article<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Journal<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2689" class="blob-num js-line-number" data-line-number="2689"></td>
        <td id="LC2689" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&#39;</span>book<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Book<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2690" class="blob-num js-line-number" data-line-number="2690"></td>
        <td id="LC2690" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&#39;</span>conference<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Conference<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2691" class="blob-num js-line-number" data-line-number="2691"></td>
        <td id="LC2691" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&#39;</span>inbook<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Book chapter<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2692" class="blob-num js-line-number" data-line-number="2692"></td>
        <td id="LC2692" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&#39;</span>incollection<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2693" class="blob-num js-line-number" data-line-number="2693"></td>
        <td id="LC2693" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&#39;</span>inproceedings<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Conference<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2694" class="blob-num js-line-number" data-line-number="2694"></td>
        <td id="LC2694" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&#39;</span>manual<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Manual<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2695" class="blob-num js-line-number" data-line-number="2695"></td>
        <td id="LC2695" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&#39;</span>mastersthesis<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Thesis<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2696" class="blob-num js-line-number" data-line-number="2696"></td>
        <td id="LC2696" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&#39;</span>misc<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Misc<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2697" class="blob-num js-line-number" data-line-number="2697"></td>
        <td id="LC2697" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&#39;</span>phdthesis<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>PhD Thesis<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2698" class="blob-num js-line-number" data-line-number="2698"></td>
        <td id="LC2698" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&#39;</span>proceedings<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Conference proceeding<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2699" class="blob-num js-line-number" data-line-number="2699"></td>
        <td id="LC2699" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&#39;</span>techreport<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Technical report<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2700" class="blob-num js-line-number" data-line-number="2700"></td>
        <td id="LC2700" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&#39;</span>unpublished<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Unpublished<span class="pl-pds">&#39;</span></span>}</td>
      </tr>
      <tr>
        <td id="L2701" class="blob-num js-line-number" data-line-number="2701"></td>
        <td id="LC2701" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L2702" class="blob-num js-line-number" data-line-number="2702"></td>
        <td id="LC2702" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> format a phd thesis similarly to masters thesis</span></td>
      </tr>
      <tr>
        <td id="L2703" class="blob-num js-line-number" data-line-number="2703"></td>
        <td id="LC2703" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">bib2html</span>.<span class="pl-smi">phdthesis</span> <span class="pl-k">=</span> <span class="pl-smi">bib2html</span>.<span class="pl-smi">mastersthesis</span>;</td>
      </tr>
      <tr>
        <td id="L2704" class="blob-num js-line-number" data-line-number="2704"></td>
        <td id="LC2704" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> conference is the same as inproceedings</span></td>
      </tr>
      <tr>
        <td id="L2705" class="blob-num js-line-number" data-line-number="2705"></td>
        <td id="LC2705" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">bib2html</span>.<span class="pl-smi">conference</span> <span class="pl-k">=</span> <span class="pl-smi">bib2html</span>.<span class="pl-smi">inproceedings</span>;</td>
      </tr>
      <tr>
        <td id="L2706" class="blob-num js-line-number" data-line-number="2706"></td>
        <td id="LC2706" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2707" class="blob-num js-line-number" data-line-number="2707"></td>
        <td id="LC2707" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> event handlers for the bibtex links</span></td>
      </tr>
      <tr>
        <td id="L2708" class="blob-num js-line-number" data-line-number="2708"></td>
        <td id="LC2708" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> EventHandlers <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L2709" class="blob-num js-line-number" data-line-number="2709"></td>
        <td id="LC2709" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">showbib</span><span class="pl-k">:</span> <span class="pl-k">function</span> <span class="pl-en">showbib</span>(<span class="pl-c1">event</span>) {</td>
      </tr>
      <tr>
        <td id="L2710" class="blob-num js-line-number" data-line-number="2710"></td>
        <td id="LC2710" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">$</span>(<span class="pl-c1">this</span>).<span class="pl-c1">next</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>.bibinfo<span class="pl-pds">&quot;</span></span>).<span class="pl-en">removeClass</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>hidden<span class="pl-pds">&#39;</span></span>).<span class="pl-en">addClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>open<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2711" class="blob-num js-line-number" data-line-number="2711"></td>
        <td id="LC2711" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">$</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>#shutter<span class="pl-pds">&quot;</span></span>).<span class="pl-en">show</span>();</td>
      </tr>
      <tr>
        <td id="L2712" class="blob-num js-line-number" data-line-number="2712"></td>
        <td id="LC2712" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">event</span>.<span class="pl-c1">preventDefault</span>();</td>
      </tr>
      <tr>
        <td id="L2713" class="blob-num js-line-number" data-line-number="2713"></td>
        <td id="LC2713" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L2714" class="blob-num js-line-number" data-line-number="2714"></td>
        <td id="LC2714" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">hidebib</span><span class="pl-k">:</span> <span class="pl-k">function</span> <span class="pl-en">hidebib</span>(<span class="pl-c1">event</span>) {</td>
      </tr>
      <tr>
        <td id="L2715" class="blob-num js-line-number" data-line-number="2715"></td>
        <td id="LC2715" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">$</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>#shutter<span class="pl-pds">&quot;</span></span>).<span class="pl-en">hide</span>();</td>
      </tr>
      <tr>
        <td id="L2716" class="blob-num js-line-number" data-line-number="2716"></td>
        <td id="LC2716" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">$</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>.bibinfo.open<span class="pl-pds">&quot;</span></span>).<span class="pl-en">removeClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>open<span class="pl-pds">&quot;</span></span>).<span class="pl-en">addClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2717" class="blob-num js-line-number" data-line-number="2717"></td>
        <td id="LC2717" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">event</span>.<span class="pl-c1">preventDefault</span>();</td>
      </tr>
      <tr>
        <td id="L2718" class="blob-num js-line-number" data-line-number="2718"></td>
        <td id="LC2718" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2719" class="blob-num js-line-number" data-line-number="2719"></td>
        <td id="LC2719" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L2720" class="blob-num js-line-number" data-line-number="2720"></td>
        <td id="LC2720" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2721" class="blob-num js-line-number" data-line-number="2721"></td>
        <td id="LC2721" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-en">Bib2HTML</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">data</span>, <span class="pl-smi">$pubTable</span>, <span class="pl-smi">options</span>) {</td>
      </tr>
      <tr>
        <td id="L2722" class="blob-num js-line-number" data-line-number="2722"></td>
        <td id="LC2722" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">this</span>.<span class="pl-c1">options</span> <span class="pl-k">=</span> options;</td>
      </tr>
      <tr>
        <td id="L2723" class="blob-num js-line-number" data-line-number="2723"></td>
        <td id="LC2723" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">this</span>.<span class="pl-smi">$pubTable</span> <span class="pl-k">=</span> $pubTable;</td>
      </tr>
      <tr>
        <td id="L2724" class="blob-num js-line-number" data-line-number="2724"></td>
        <td id="LC2724" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">this</span>.<span class="pl-smi">stats</span> <span class="pl-k">=</span> { };</td>
      </tr>
      <tr>
        <td id="L2725" class="blob-num js-line-number" data-line-number="2725"></td>
        <td id="LC2725" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">this</span>.<span class="pl-en">initialize</span>(data);</td>
      </tr>
      <tr>
        <td id="L2726" class="blob-num js-line-number" data-line-number="2726"></td>
        <td id="LC2726" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L2727" class="blob-num js-line-number" data-line-number="2727"></td>
        <td id="LC2727" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> bibproto <span class="pl-k">=</span> <span class="pl-smi">Bib2HTML</span>.<span class="pl-c1">prototype</span>;</td>
      </tr>
      <tr>
        <td id="L2728" class="blob-num js-line-number" data-line-number="2728"></td>
        <td id="LC2728" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">bibproto</span>.<span class="pl-en">initialize</span> <span class="pl-k">=</span> <span class="pl-k">function</span> <span class="pl-en">initialize</span>(<span class="pl-smi">data</span>) {</td>
      </tr>
      <tr>
        <td id="L2729" class="blob-num js-line-number" data-line-number="2729"></td>
        <td id="LC2729" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> bibtex <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">BibTex</span>();</td>
      </tr>
      <tr>
        <td id="L2730" class="blob-num js-line-number" data-line-number="2730"></td>
        <td id="LC2730" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">bibtex</span>.<span class="pl-c1">content</span> <span class="pl-k">=</span> data;</td>
      </tr>
      <tr>
        <td id="L2731" class="blob-num js-line-number" data-line-number="2731"></td>
        <td id="LC2731" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">bibtex</span>.<span class="pl-c1">parse</span>();</td>
      </tr>
      <tr>
        <td id="L2732" class="blob-num js-line-number" data-line-number="2732"></td>
        <td id="LC2732" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> bibentries <span class="pl-k">=</span> [], len <span class="pl-k">=</span> <span class="pl-smi">bibtex</span>.<span class="pl-c1">data</span>.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2733" class="blob-num js-line-number" data-line-number="2733"></td>
        <td id="LC2733" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> entryTypes <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L2734" class="blob-num js-line-number" data-line-number="2734"></td>
        <td id="LC2734" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">jQuery</span>.<span class="pl-en">extend</span>(<span class="pl-c1">true</span>, bib2html, <span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">bib2html</span>);</td>
      </tr>
      <tr>
        <td id="L2735" class="blob-num js-line-number" data-line-number="2735"></td>
        <td id="LC2735" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (<span class="pl-k">var</span> index <span class="pl-k">=</span> <span class="pl-c1">0</span>; index <span class="pl-k">&lt;</span> len; index<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L2736" class="blob-num js-line-number" data-line-number="2736"></td>
        <td id="LC2736" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> item <span class="pl-k">=</span> <span class="pl-smi">bibtex</span>.<span class="pl-c1">data</span>[index];</td>
      </tr>
      <tr>
        <td id="L2737" class="blob-num js-line-number" data-line-number="2737"></td>
        <td id="LC2737" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-smi">item</span>.<span class="pl-smi">year</span>) {</td>
      </tr>
      <tr>
        <td id="L2738" class="blob-num js-line-number" data-line-number="2738"></td>
        <td id="LC2738" class="blob-code blob-code-inner js-file-line">              <span class="pl-smi">item</span>.<span class="pl-smi">year</span> <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">defaultYear</span> <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&quot;</span>To Appear<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2739" class="blob-num js-line-number" data-line-number="2739"></td>
        <td id="LC2739" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2740" class="blob-num js-line-number" data-line-number="2740"></td>
        <td id="LC2740" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L2741" class="blob-num js-line-number" data-line-number="2741"></td>
        <td id="LC2741" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> html <span class="pl-k">=</span> <span class="pl-smi">bib2html</span>.<span class="pl-en">entry2html</span>(item, <span class="pl-c1">this</span>);</td>
      </tr>
      <tr>
        <td id="L2742" class="blob-num js-line-number" data-line-number="2742"></td>
        <td id="LC2742" class="blob-code blob-code-inner js-file-line">                <span class="pl-smi">bibentries</span>.<span class="pl-c1">push</span>([<span class="pl-smi">item</span>.<span class="pl-smi">year</span>, <span class="pl-smi">bib2html</span>.<span class="pl-smi">labels</span>[<span class="pl-smi">item</span>.<span class="pl-smi">entryType</span>], html]);</td>
      </tr>
      <tr>
        <td id="L2743" class="blob-num js-line-number" data-line-number="2743"></td>
        <td id="LC2743" class="blob-code blob-code-inner js-file-line">                entryTypes[<span class="pl-smi">bib2html</span>.<span class="pl-smi">labels</span>[<span class="pl-smi">item</span>.<span class="pl-smi">entryType</span>]] <span class="pl-k">=</span> <span class="pl-smi">item</span>.<span class="pl-smi">entryType</span>;</td>
      </tr>
      <tr>
        <td id="L2744" class="blob-num js-line-number" data-line-number="2744"></td>
        <td id="LC2744" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">this</span>.<span class="pl-en">updateStats</span>(item);</td>
      </tr>
      <tr>
        <td id="L2745" class="blob-num js-line-number" data-line-number="2745"></td>
        <td id="LC2745" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">catch</span> (e) {</td>
      </tr>
      <tr>
        <td id="L2746" class="blob-num js-line-number" data-line-number="2746"></td>
        <td id="LC2746" class="blob-code blob-code-inner js-file-line">                <span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>Failed to process entry: <span class="pl-pds">&#39;</span></span>, item);</td>
      </tr>
      <tr>
        <td id="L2747" class="blob-num js-line-number" data-line-number="2747"></td>
        <td id="LC2747" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2748" class="blob-num js-line-number" data-line-number="2748"></td>
        <td id="LC2748" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2749" class="blob-num js-line-number" data-line-number="2749"></td>
        <td id="LC2749" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">jQuery</span>.<span class="pl-smi">fn</span>.<span class="pl-smi">dataTableExt</span>.<span class="pl-smi">oSort</span>[<span class="pl-s"><span class="pl-pds">&#39;</span>type-sort-asc<span class="pl-pds">&#39;</span></span>] <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L2750" class="blob-num js-line-number" data-line-number="2750"></td>
        <td id="LC2750" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> item1 <span class="pl-k">=</span> <span class="pl-smi">bib2html</span>.<span class="pl-smi">importance</span>[entryTypes[x]],</td>
      </tr>
      <tr>
        <td id="L2751" class="blob-num js-line-number" data-line-number="2751"></td>
        <td id="LC2751" class="blob-code blob-code-inner js-file-line">                item2 <span class="pl-k">=</span> <span class="pl-smi">bib2html</span>.<span class="pl-smi">importance</span>[entryTypes[y]];</td>
      </tr>
      <tr>
        <td id="L2752" class="blob-num js-line-number" data-line-number="2752"></td>
        <td id="LC2752" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> ((item1 <span class="pl-k">&lt;</span> item2) <span class="pl-k">?</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">:</span> ((item1 <span class="pl-k">&gt;</span> item2) <span class="pl-k">?</span>  <span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">0</span>));</td>
      </tr>
      <tr>
        <td id="L2753" class="blob-num js-line-number" data-line-number="2753"></td>
        <td id="LC2753" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2754" class="blob-num js-line-number" data-line-number="2754"></td>
        <td id="LC2754" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">jQuery</span>.<span class="pl-smi">fn</span>.<span class="pl-smi">dataTableExt</span>.<span class="pl-smi">oSort</span>[<span class="pl-s"><span class="pl-pds">&#39;</span>type-sort-desc<span class="pl-pds">&#39;</span></span>] <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L2755" class="blob-num js-line-number" data-line-number="2755"></td>
        <td id="LC2755" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> item1 <span class="pl-k">=</span> <span class="pl-smi">bib2html</span>.<span class="pl-smi">importance</span>[entryTypes[x]],</td>
      </tr>
      <tr>
        <td id="L2756" class="blob-num js-line-number" data-line-number="2756"></td>
        <td id="LC2756" class="blob-code blob-code-inner js-file-line">                item2 <span class="pl-k">=</span> <span class="pl-smi">bib2html</span>.<span class="pl-smi">importance</span>[entryTypes[y]];</td>
      </tr>
      <tr>
        <td id="L2757" class="blob-num js-line-number" data-line-number="2757"></td>
        <td id="LC2757" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> ((item1 <span class="pl-k">&lt;</span> item2) <span class="pl-k">?</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> ((item1 <span class="pl-k">&gt;</span> item2) <span class="pl-k">?</span>  <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">0</span>));</td>
      </tr>
      <tr>
        <td id="L2758" class="blob-num js-line-number" data-line-number="2758"></td>
        <td id="LC2758" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2759" class="blob-num js-line-number" data-line-number="2759"></td>
        <td id="LC2759" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> table <span class="pl-k">=</span> <span class="pl-c1">this</span>.<span class="pl-smi">$pubTable</span>.<span class="pl-en">dataTable</span>(<span class="pl-smi">$</span>.<span class="pl-en">extend</span>({ <span class="pl-s"><span class="pl-pds">&#39;</span>aaData<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> bibentries,</td>
      </tr>
      <tr>
        <td id="L2760" class="blob-num js-line-number" data-line-number="2760"></td>
        <td id="LC2760" class="blob-code blob-code-inner js-file-line">                              <span class="pl-s"><span class="pl-pds">&#39;</span>aaSorting<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">sorting</span>,</td>
      </tr>
      <tr>
        <td id="L2761" class="blob-num js-line-number" data-line-number="2761"></td>
        <td id="LC2761" class="blob-code blob-code-inner js-file-line">                              <span class="pl-s"><span class="pl-pds">&#39;</span>aoColumns<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> [ { <span class="pl-s"><span class="pl-pds">&quot;</span>sTitle<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>Year<span class="pl-pds">&quot;</span></span> },</td>
      </tr>
      <tr>
        <td id="L2762" class="blob-num js-line-number" data-line-number="2762"></td>
        <td id="LC2762" class="blob-code blob-code-inner js-file-line">                                             { <span class="pl-s"><span class="pl-pds">&quot;</span>sTitle<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>Type<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>sType<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>type-sort<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>asSorting<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> [ <span class="pl-s"><span class="pl-pds">&quot;</span>desc<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>asc<span class="pl-pds">&quot;</span></span> ] },</td>
      </tr>
      <tr>
        <td id="L2763" class="blob-num js-line-number" data-line-number="2763"></td>
        <td id="LC2763" class="blob-code blob-code-inner js-file-line">                                             { <span class="pl-s"><span class="pl-pds">&quot;</span>sTitle<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>Publication<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>bSortable<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span> <span class="pl-c1">false</span> }],</td>
      </tr>
      <tr>
        <td id="L2764" class="blob-num js-line-number" data-line-number="2764"></td>
        <td id="LC2764" class="blob-code blob-code-inner js-file-line">                              <span class="pl-s"><span class="pl-pds">&#39;</span>bPaginate<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-c1">false</span></td>
      </tr>
      <tr>
        <td id="L2765" class="blob-num js-line-number" data-line-number="2765"></td>
        <td id="LC2765" class="blob-code blob-code-inner js-file-line">                            }, <span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">datatable</span>));</td>
      </tr>
      <tr>
        <td id="L2766" class="blob-num js-line-number" data-line-number="2766"></td>
        <td id="LC2766" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">visualization</span>) {</td>
      </tr>
      <tr>
        <td id="L2767" class="blob-num js-line-number" data-line-number="2767"></td>
        <td id="LC2767" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-en">addBarChart</span>();</td>
      </tr>
      <tr>
        <td id="L2768" class="blob-num js-line-number" data-line-number="2768"></td>
        <td id="LC2768" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2769" class="blob-num js-line-number" data-line-number="2769"></td>
        <td id="LC2769" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">$</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>th<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">this</span>.<span class="pl-smi">$pubTable</span>).<span class="pl-en">unbind</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">click</span>(<span class="pl-k">function</span>(<span class="pl-smi">e</span>) {</td>
      </tr>
      <tr>
        <td id="L2770" class="blob-num js-line-number" data-line-number="2770"></td>
        <td id="LC2770" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> $this <span class="pl-k">=</span> <span class="pl-en">$</span>(<span class="pl-c1">this</span>),</td>
      </tr>
      <tr>
        <td id="L2771" class="blob-num js-line-number" data-line-number="2771"></td>
        <td id="LC2771" class="blob-code blob-code-inner js-file-line">              $thElems <span class="pl-k">=</span> <span class="pl-smi">$this</span>.<span class="pl-c1">parent</span>().<span class="pl-c1">find</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>th<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L2772" class="blob-num js-line-number" data-line-number="2772"></td>
        <td id="LC2772" class="blob-code blob-code-inner js-file-line">              index <span class="pl-k">=</span> <span class="pl-smi">$thElems</span>.<span class="pl-c1">index</span>($this);</td>
      </tr>
      <tr>
        <td id="L2773" class="blob-num js-line-number" data-line-number="2773"></td>
        <td id="LC2773" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-smi">$this</span>.<span class="pl-en">hasClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sorting_disabled<span class="pl-pds">&quot;</span></span>)) { <span class="pl-k">return</span>; }</td>
      </tr>
      <tr>
        <td id="L2774" class="blob-num js-line-number" data-line-number="2774"></td>
        <td id="LC2774" class="blob-code blob-code-inner js-file-line">          <span class="pl-smi">$this</span>.<span class="pl-en">toggleClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sorting_asc<span class="pl-pds">&quot;</span></span>).<span class="pl-en">toggleClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sorting_desc<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2775" class="blob-num js-line-number" data-line-number="2775"></td>
        <td id="LC2775" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2776" class="blob-num js-line-number" data-line-number="2776"></td>
        <td id="LC2776" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (index <span class="pl-k">===</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L2777" class="blob-num js-line-number" data-line-number="2777"></td>
        <td id="LC2777" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">table</span>.<span class="pl-en">fnSort</span>( [[<span class="pl-c1">0</span>, <span class="pl-smi">$thElems</span>.<span class="pl-en">eq</span>(<span class="pl-c1">0</span>).<span class="pl-en">hasClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sorting_asc<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>asc<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>desc<span class="pl-pds">&quot;</span></span>],</td>
      </tr>
      <tr>
        <td id="L2778" class="blob-num js-line-number" data-line-number="2778"></td>
        <td id="LC2778" class="blob-code blob-code-inner js-file-line">                        [<span class="pl-c1">1</span>, <span class="pl-smi">$thElems</span>.<span class="pl-en">eq</span>(<span class="pl-c1">1</span>).<span class="pl-en">hasClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sorting_asc<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>asc<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>desc<span class="pl-pds">&quot;</span></span>]]);</td>
      </tr>
      <tr>
        <td id="L2779" class="blob-num js-line-number" data-line-number="2779"></td>
        <td id="LC2779" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2780" class="blob-num js-line-number" data-line-number="2780"></td>
        <td id="LC2780" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">table</span>.<span class="pl-en">fnSort</span>( [[<span class="pl-c1">1</span>, <span class="pl-smi">$thElems</span>.<span class="pl-en">eq</span>(<span class="pl-c1">1</span>).<span class="pl-en">hasClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sorting_asc<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>asc<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>desc<span class="pl-pds">&quot;</span></span>],</td>
      </tr>
      <tr>
        <td id="L2781" class="blob-num js-line-number" data-line-number="2781"></td>
        <td id="LC2781" class="blob-code blob-code-inner js-file-line">                          [<span class="pl-c1">0</span>, <span class="pl-smi">$thElems</span>.<span class="pl-en">eq</span>(<span class="pl-c1">0</span>).<span class="pl-en">hasClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sorting_asc<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>asc<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>desc<span class="pl-pds">&quot;</span></span>]]);</td>
      </tr>
      <tr>
        <td id="L2782" class="blob-num js-line-number" data-line-number="2782"></td>
        <td id="LC2782" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L2783" class="blob-num js-line-number" data-line-number="2783"></td>
        <td id="LC2783" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L2784" class="blob-num js-line-number" data-line-number="2784"></td>
        <td id="LC2784" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> attach the event handlers to the bib items</span></td>
      </tr>
      <tr>
        <td id="L2785" class="blob-num js-line-number" data-line-number="2785"></td>
        <td id="LC2785" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">$</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>.biblink<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">this</span>.<span class="pl-smi">$pubTable</span>).<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>click<span class="pl-pds">&#39;</span></span>, <span class="pl-smi">EventHandlers</span>.<span class="pl-smi">showbib</span>);</td>
      </tr>
      <tr>
        <td id="L2786" class="blob-num js-line-number" data-line-number="2786"></td>
        <td id="LC2786" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">$</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>.bibclose<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">this</span>.<span class="pl-smi">$pubTable</span>).<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>click<span class="pl-pds">&#39;</span></span>, <span class="pl-smi">EventHandlers</span>.<span class="pl-smi">hidebib</span>);</td>
      </tr>
      <tr>
        <td id="L2787" class="blob-num js-line-number" data-line-number="2787"></td>
        <td id="LC2787" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L2788" class="blob-num js-line-number" data-line-number="2788"></td>
        <td id="LC2788" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> updates the stats, called whenever a new bibtex entry is parsed</span></td>
      </tr>
      <tr>
        <td id="L2789" class="blob-num js-line-number" data-line-number="2789"></td>
        <td id="LC2789" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">bibproto</span>.<span class="pl-en">updateStats</span> <span class="pl-k">=</span> <span class="pl-k">function</span> <span class="pl-en">updateStats</span>(<span class="pl-smi">item</span>) {</td>
      </tr>
      <tr>
        <td id="L2790" class="blob-num js-line-number" data-line-number="2790"></td>
        <td id="LC2790" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">stats</span>[<span class="pl-smi">item</span>.<span class="pl-smi">year</span>]) {</td>
      </tr>
      <tr>
        <td id="L2791" class="blob-num js-line-number" data-line-number="2791"></td>
        <td id="LC2791" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">stats</span>[<span class="pl-smi">item</span>.<span class="pl-smi">year</span>] <span class="pl-k">=</span> { <span class="pl-s"><span class="pl-pds">&#39;</span>count<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>types<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> {} };</td>
      </tr>
      <tr>
        <td id="L2792" class="blob-num js-line-number" data-line-number="2792"></td>
        <td id="LC2792" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">stats</span>[<span class="pl-smi">item</span>.<span class="pl-smi">year</span>].<span class="pl-smi">types</span>[<span class="pl-smi">item</span>.<span class="pl-smi">entryType</span>] <span class="pl-k">=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2793" class="blob-num js-line-number" data-line-number="2793"></td>
        <td id="LC2793" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2794" class="blob-num js-line-number" data-line-number="2794"></td>
        <td id="LC2794" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">this</span>.<span class="pl-smi">stats</span>[<span class="pl-smi">item</span>.<span class="pl-smi">year</span>].<span class="pl-smi">count</span> <span class="pl-k">+=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2795" class="blob-num js-line-number" data-line-number="2795"></td>
        <td id="LC2795" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-c1">this</span>.<span class="pl-smi">stats</span>[<span class="pl-smi">item</span>.<span class="pl-smi">year</span>].<span class="pl-smi">types</span>[<span class="pl-smi">item</span>.<span class="pl-smi">entryType</span>]) {</td>
      </tr>
      <tr>
        <td id="L2796" class="blob-num js-line-number" data-line-number="2796"></td>
        <td id="LC2796" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">this</span>.<span class="pl-smi">stats</span>[<span class="pl-smi">item</span>.<span class="pl-smi">year</span>].<span class="pl-smi">types</span>[<span class="pl-smi">item</span>.<span class="pl-smi">entryType</span>] <span class="pl-k">+=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2797" class="blob-num js-line-number" data-line-number="2797"></td>
        <td id="LC2797" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2798" class="blob-num js-line-number" data-line-number="2798"></td>
        <td id="LC2798" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">this</span>.<span class="pl-smi">stats</span>[<span class="pl-smi">item</span>.<span class="pl-smi">year</span>].<span class="pl-smi">types</span>[<span class="pl-smi">item</span>.<span class="pl-smi">entryType</span>] <span class="pl-k">=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2799" class="blob-num js-line-number" data-line-number="2799"></td>
        <td id="LC2799" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2800" class="blob-num js-line-number" data-line-number="2800"></td>
        <td id="LC2800" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2801" class="blob-num js-line-number" data-line-number="2801"></td>
        <td id="LC2801" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L2802" class="blob-num js-line-number" data-line-number="2802"></td>
        <td id="LC2802" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> adds the barchart of year and publication types</span></td>
      </tr>
      <tr>
        <td id="L2803" class="blob-num js-line-number" data-line-number="2803"></td>
        <td id="LC2803" class="blob-code blob-code-inner js-file-line">    <span class="pl-smi">bibproto</span>.<span class="pl-en">addBarChart</span> <span class="pl-k">=</span> <span class="pl-k">function</span> <span class="pl-en">addBarChart</span>() {</td>
      </tr>
      <tr>
        <td id="L2804" class="blob-num js-line-number" data-line-number="2804"></td>
        <td id="LC2804" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> yearstats <span class="pl-k">=</span> [], max <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2805" class="blob-num js-line-number" data-line-number="2805"></td>
        <td id="LC2805" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">$</span>.<span class="pl-en">each</span>(<span class="pl-c1">this</span>.<span class="pl-smi">stats</span>, <span class="pl-k">function</span>(<span class="pl-smi">key</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L2806" class="blob-num js-line-number" data-line-number="2806"></td>
        <td id="LC2806" class="blob-code blob-code-inner js-file-line">            max <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(max, <span class="pl-smi">value</span>.<span class="pl-smi">count</span>);</td>
      </tr>
      <tr>
        <td id="L2807" class="blob-num js-line-number" data-line-number="2807"></td>
        <td id="LC2807" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">yearstats</span>.<span class="pl-c1">push</span>({<span class="pl-s"><span class="pl-pds">&#39;</span>year<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> key, <span class="pl-s"><span class="pl-pds">&#39;</span>count<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-smi">value</span>.<span class="pl-smi">count</span>,</td>
      </tr>
      <tr>
        <td id="L2808" class="blob-num js-line-number" data-line-number="2808"></td>
        <td id="LC2808" class="blob-code blob-code-inner js-file-line">                <span class="pl-s"><span class="pl-pds">&#39;</span>item<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> value, <span class="pl-s"><span class="pl-pds">&#39;</span>types<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-smi">value</span>.<span class="pl-smi">types</span>});</td>
      </tr>
      <tr>
        <td id="L2809" class="blob-num js-line-number" data-line-number="2809"></td>
        <td id="LC2809" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L2810" class="blob-num js-line-number" data-line-number="2810"></td>
        <td id="LC2810" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">yearstats</span>.<span class="pl-c1">sort</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L2811" class="blob-num js-line-number" data-line-number="2811"></td>
        <td id="LC2811" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> diff <span class="pl-k">=</span> <span class="pl-smi">a</span>.<span class="pl-smi">year</span> <span class="pl-k">-</span> <span class="pl-smi">b</span>.<span class="pl-smi">year</span>;</td>
      </tr>
      <tr>
        <td id="L2812" class="blob-num js-line-number" data-line-number="2812"></td>
        <td id="LC2812" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-c1">isNaN</span>(diff)) {</td>
      </tr>
      <tr>
        <td id="L2813" class="blob-num js-line-number" data-line-number="2813"></td>
        <td id="LC2813" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">return</span> diff;</td>
      </tr>
      <tr>
        <td id="L2814" class="blob-num js-line-number" data-line-number="2814"></td>
        <td id="LC2814" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-smi">a</span>.<span class="pl-smi">year</span> <span class="pl-k">&lt;</span> <span class="pl-smi">b</span>.<span class="pl-smi">year</span>) {</td>
      </tr>
      <tr>
        <td id="L2815" class="blob-num js-line-number" data-line-number="2815"></td>
        <td id="LC2815" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">return</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2816" class="blob-num js-line-number" data-line-number="2816"></td>
        <td id="LC2816" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-smi">a</span>.<span class="pl-smi">year</span> <span class="pl-k">&gt;</span> <span class="pl-smi">b</span>.<span class="pl-smi">year</span>) {</td>
      </tr>
      <tr>
        <td id="L2817" class="blob-num js-line-number" data-line-number="2817"></td>
        <td id="LC2817" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2818" class="blob-num js-line-number" data-line-number="2818"></td>
        <td id="LC2818" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2819" class="blob-num js-line-number" data-line-number="2819"></td>
        <td id="LC2819" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2820" class="blob-num js-line-number" data-line-number="2820"></td>
        <td id="LC2820" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L2821" class="blob-num js-line-number" data-line-number="2821"></td>
        <td id="LC2821" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> chartIdSelector <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>#<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-c1">this</span>.<span class="pl-smi">$pubTable</span>[<span class="pl-c1">0</span>].<span class="pl-c1">id</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>pubchart<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2822" class="blob-num js-line-number" data-line-number="2822"></td>
        <td id="LC2822" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> pubHeight <span class="pl-k">=</span> <span class="pl-en">$</span>(chartIdSelector).<span class="pl-c1">height</span>()<span class="pl-k">/</span>max <span class="pl-k">-</span> <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L2823" class="blob-num js-line-number" data-line-number="2823"></td>
        <td id="LC2823" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> styleStr <span class="pl-k">=</span> chartIdSelector <span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> .year { width: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L2824" class="blob-num js-line-number" data-line-number="2824"></td>
        <td id="LC2824" class="blob-code blob-code-inner js-file-line">                        (<span class="pl-c1">100.0</span><span class="pl-k">/</span><span class="pl-smi">yearstats</span>.<span class="pl-c1">length</span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>%; }<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L2825" class="blob-num js-line-number" data-line-number="2825"></td>
        <td id="LC2825" class="blob-code blob-code-inner js-file-line">                        chartIdSelector <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> .pub { height: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> pubHeight <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>px; }<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2826" class="blob-num js-line-number" data-line-number="2826"></td>
        <td id="LC2826" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> legendTypes <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L2827" class="blob-num js-line-number" data-line-number="2827"></td>
        <td id="LC2827" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> <span class="pl-en">stats2html</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">item</span>) {</td>
      </tr>
      <tr>
        <td id="L2828" class="blob-num js-line-number" data-line-number="2828"></td>
        <td id="LC2828" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> types <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L2829" class="blob-num js-line-number" data-line-number="2829"></td>
        <td id="LC2829" class="blob-code blob-code-inner js-file-line">                str <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>&lt;div class=&quot;year&quot;&gt;<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2830" class="blob-num js-line-number" data-line-number="2830"></td>
        <td id="LC2830" class="blob-code blob-code-inner js-file-line">                sum <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2831" class="blob-num js-line-number" data-line-number="2831"></td>
        <td id="LC2831" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">$</span>.<span class="pl-en">each</span>(<span class="pl-smi">item</span>.<span class="pl-smi">types</span>, <span class="pl-k">function</span>(<span class="pl-smi">type</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L2832" class="blob-num js-line-number" data-line-number="2832"></td>
        <td id="LC2832" class="blob-code blob-code-inner js-file-line">              <span class="pl-smi">types</span>.<span class="pl-c1">push</span>(type);</td>
      </tr>
      <tr>
        <td id="L2833" class="blob-num js-line-number" data-line-number="2833"></td>
        <td id="LC2833" class="blob-code blob-code-inner js-file-line">              sum <span class="pl-k">+=</span> value;</td>
      </tr>
      <tr>
        <td id="L2834" class="blob-num js-line-number" data-line-number="2834"></td>
        <td id="LC2834" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L2835" class="blob-num js-line-number" data-line-number="2835"></td>
        <td id="LC2835" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">types</span>.<span class="pl-c1">sort</span>(<span class="pl-k">function</span>(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>) {</td>
      </tr>
      <tr>
        <td id="L2836" class="blob-num js-line-number" data-line-number="2836"></td>
        <td id="LC2836" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">return</span> <span class="pl-smi">bib2html</span>.<span class="pl-smi">importance</span>[y] <span class="pl-k">-</span> <span class="pl-smi">bib2html</span>.<span class="pl-smi">importance</span>[x];</td>
      </tr>
      <tr>
        <td id="L2837" class="blob-num js-line-number" data-line-number="2837"></td>
        <td id="LC2837" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L2838" class="blob-num js-line-number" data-line-number="2838"></td>
        <td id="LC2838" class="blob-code blob-code-inner js-file-line">            str <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>&lt;div class=&quot;filler&quot; style=&quot;height:<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> ((pubHeight<span class="pl-k">+</span><span class="pl-c1">2</span>)<span class="pl-k">*</span>(max<span class="pl-k">-</span>sum)) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>px;&quot;&gt;&lt;/div&gt;<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2839" class="blob-num js-line-number" data-line-number="2839"></td>
        <td id="LC2839" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> <span class="pl-smi">types</span>.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L2840" class="blob-num js-line-number" data-line-number="2840"></td>
        <td id="LC2840" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> type <span class="pl-k">=</span> types[i];</td>
      </tr>
      <tr>
        <td id="L2841" class="blob-num js-line-number" data-line-number="2841"></td>
        <td id="LC2841" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (<span class="pl-smi">legendTypes</span>.<span class="pl-c1">indexOf</span>(type) <span class="pl-k">===</span> <span class="pl-k">-</span><span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L2842" class="blob-num js-line-number" data-line-number="2842"></td>
        <td id="LC2842" class="blob-code blob-code-inner js-file-line">                    <span class="pl-smi">legendTypes</span>.<span class="pl-c1">push</span>(type);</td>
      </tr>
      <tr>
        <td id="L2843" class="blob-num js-line-number" data-line-number="2843"></td>
        <td id="LC2843" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2844" class="blob-num js-line-number" data-line-number="2844"></td>
        <td id="LC2844" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">for</span> (<span class="pl-k">var</span> j <span class="pl-k">=</span> <span class="pl-c1">0</span>; j <span class="pl-k">&lt;</span> <span class="pl-smi">item</span>.<span class="pl-smi">types</span>[type]; j<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L2845" class="blob-num js-line-number" data-line-number="2845"></td>
        <td id="LC2845" class="blob-code blob-code-inner js-file-line">                    str <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>&lt;div class=&quot;pub <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> type <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>&quot;&gt;&lt;/div&gt;<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2846" class="blob-num js-line-number" data-line-number="2846"></td>
        <td id="LC2846" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L2847" class="blob-num js-line-number" data-line-number="2847"></td>
        <td id="LC2847" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L2848" class="blob-num js-line-number" data-line-number="2848"></td>
        <td id="LC2848" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> str <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>&lt;div class=&quot;yearlabel&quot;&gt;<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> <span class="pl-smi">item</span>.<span class="pl-smi">year</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>&lt;/div&gt;&lt;/div&gt;<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2849" class="blob-num js-line-number" data-line-number="2849"></td>
        <td id="LC2849" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L2850" class="blob-num js-line-number" data-line-number="2850"></td>
        <td id="LC2850" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> statsHtml <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&lt;style&gt;<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> styleStr <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/style&gt;<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2851" class="blob-num js-line-number" data-line-number="2851"></td>
        <td id="LC2851" class="blob-code blob-code-inner js-file-line">        <span class="pl-smi">yearstats</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span>(<span class="pl-smi">item</span>) {</td>
      </tr>
      <tr>
        <td id="L2852" class="blob-num js-line-number" data-line-number="2852"></td>
        <td id="LC2852" class="blob-code blob-code-inner js-file-line">            statsHtml <span class="pl-k">+=</span> <span class="pl-en">stats2html</span>(item);</td>
      </tr>
      <tr>
        <td id="L2853" class="blob-num js-line-number" data-line-number="2853"></td>
        <td id="LC2853" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L2854" class="blob-num js-line-number" data-line-number="2854"></td>
        <td id="LC2854" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> legendHtml <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>&lt;div class=&quot;legend&quot;&gt;<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2855" class="blob-num js-line-number" data-line-number="2855"></td>
        <td id="LC2855" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, l <span class="pl-k">=</span> <span class="pl-smi">legendTypes</span>.<span class="pl-c1">length</span>; i <span class="pl-k">&lt;</span> l; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L2856" class="blob-num js-line-number" data-line-number="2856"></td>
        <td id="LC2856" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> legend <span class="pl-k">=</span> legendTypes[i];</td>
      </tr>
      <tr>
        <td id="L2857" class="blob-num js-line-number" data-line-number="2857"></td>
        <td id="LC2857" class="blob-code blob-code-inner js-file-line">            legendHtml <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>&lt;span class=&quot;pub <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> legend <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>&quot;&gt;&lt;/span&gt;<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> <span class="pl-smi">bib2html</span>.<span class="pl-smi">labels</span>[legend];</td>
      </tr>
      <tr>
        <td id="L2858" class="blob-num js-line-number" data-line-number="2858"></td>
        <td id="LC2858" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2859" class="blob-num js-line-number" data-line-number="2859"></td>
        <td id="LC2859" class="blob-code blob-code-inner js-file-line">        legendHtml <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>&lt;/div&gt;<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2860" class="blob-num js-line-number" data-line-number="2860"></td>
        <td id="LC2860" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">$</span>(chartIdSelector).<span class="pl-en">html</span>(statsHtml).<span class="pl-c1">after</span>(legendHtml);</td>
      </tr>
      <tr>
        <td id="L2861" class="blob-num js-line-number" data-line-number="2861"></td>
        <td id="LC2861" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L2862" class="blob-num js-line-number" data-line-number="2862"></td>
        <td id="LC2862" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2863" class="blob-num js-line-number" data-line-number="2863"></td>
        <td id="LC2863" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Creates a new publication list to the HTML element with ID</span></td>
      </tr>
      <tr>
        <td id="L2864" class="blob-num js-line-number" data-line-number="2864"></td>
        <td id="LC2864" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> bibElemId. The bibsrc can be</span></td>
      </tr>
      <tr>
        <td id="L2865" class="blob-num js-line-number" data-line-number="2865"></td>
        <td id="LC2865" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span>   - a jQuery selector, in which case html of the element is used</span></td>
      </tr>
      <tr>
        <td id="L2866" class="blob-num js-line-number" data-line-number="2866"></td>
        <td id="LC2866" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span>     as the bibtex data</span></td>
      </tr>
      <tr>
        <td id="L2867" class="blob-num js-line-number" data-line-number="2867"></td>
        <td id="LC2867" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span>   - a URL, which is loaded and used as data. Note, that same-origin</span></td>
      </tr>
      <tr>
        <td id="L2868" class="blob-num js-line-number" data-line-number="2868"></td>
        <td id="LC2868" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span>     policy restricts where you can load the data.</span></td>
      </tr>
      <tr>
        <td id="L2869" class="blob-num js-line-number" data-line-number="2869"></td>
        <td id="LC2869" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Supported options:</span></td>
      </tr>
      <tr>
        <td id="L2870" class="blob-num js-line-number" data-line-number="2870"></td>
        <td id="LC2870" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span>   - visualization: A boolean to control addition of the visualization.</span></td>
      </tr>
      <tr>
        <td id="L2871" class="blob-num js-line-number" data-line-number="2871"></td>
        <td id="LC2871" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span>                    Defaults to true.</span></td>
      </tr>
      <tr>
        <td id="L2872" class="blob-num js-line-number" data-line-number="2872"></td>
        <td id="LC2872" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span>   - tweet: Twitter username to add Tweet links to bib items with a url field.</span></td>
      </tr>
      <tr>
        <td id="L2873" class="blob-num js-line-number" data-line-number="2873"></td>
        <td id="LC2873" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span>   - sorting: Control the default sorting of the list. Defaults to [[0, &quot;desc&quot;],</span></td>
      </tr>
      <tr>
        <td id="L2874" class="blob-num js-line-number" data-line-number="2874"></td>
        <td id="LC2874" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span>              [1, &quot;desc&quot;]]. See http://datatables.net/api fnSort for details</span></td>
      </tr>
      <tr>
        <td id="L2875" class="blob-num js-line-number" data-line-number="2875"></td>
        <td id="LC2875" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span>              on formatting.</span></td>
      </tr>
      <tr>
        <td id="L2876" class="blob-num js-line-number" data-line-number="2876"></td>
        <td id="LC2876" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span>   - bib2html: Can be used to override any of the functions or properties of</span></td>
      </tr>
      <tr>
        <td id="L2877" class="blob-num js-line-number" data-line-number="2877"></td>
        <td id="LC2877" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span>               the bib2html object. See above, starting around line 40.</span></td>
      </tr>
      <tr>
        <td id="L2878" class="blob-num js-line-number" data-line-number="2878"></td>
        <td id="LC2878" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">bibsrc</span>, <span class="pl-smi">bibElemId</span>, <span class="pl-smi">opts</span>) {</td>
      </tr>
      <tr>
        <td id="L2879" class="blob-num js-line-number" data-line-number="2879"></td>
        <td id="LC2879" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> options <span class="pl-k">=</span> <span class="pl-smi">$</span>.<span class="pl-en">extend</span>({}, {<span class="pl-s"><span class="pl-pds">&#39;</span>visualization<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L2880" class="blob-num js-line-number" data-line-number="2880"></td>
        <td id="LC2880" class="blob-code blob-code-inner js-file-line">                                <span class="pl-s"><span class="pl-pds">&#39;</span>sorting<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> [[<span class="pl-c1">0</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>desc<span class="pl-pds">&quot;</span></span>], [<span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>desc<span class="pl-pds">&quot;</span></span>]]},</td>
      </tr>
      <tr>
        <td id="L2881" class="blob-num js-line-number" data-line-number="2881"></td>
        <td id="LC2881" class="blob-code blob-code-inner js-file-line">                                opts);</td>
      </tr>
      <tr>
        <td id="L2882" class="blob-num js-line-number" data-line-number="2882"></td>
        <td id="LC2882" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> $pubTable <span class="pl-k">=</span> <span class="pl-en">$</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>#<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> bibElemId).<span class="pl-en">addClass</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bibtable<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2883" class="blob-num js-line-number" data-line-number="2883"></td>
        <td id="LC2883" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-en">$</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>#shutter<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">length</span> <span class="pl-k">===</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L2884" class="blob-num js-line-number" data-line-number="2884"></td>
        <td id="LC2884" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">$pubTable</span>.<span class="pl-c1">before</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>&lt;div id=&quot;shutter&quot; class=&quot;hidden&quot;&gt;&lt;/div&gt;<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2885" class="blob-num js-line-number" data-line-number="2885"></td>
        <td id="LC2885" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">$</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>#shutter<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">click</span>(<span class="pl-smi">EventHandlers</span>.<span class="pl-smi">hidebib</span>);</td>
      </tr>
      <tr>
        <td id="L2886" class="blob-num js-line-number" data-line-number="2886"></td>
        <td id="LC2886" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2887" class="blob-num js-line-number" data-line-number="2887"></td>
        <td id="LC2887" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-smi">options</span>.<span class="pl-smi">visualization</span>) {</td>
      </tr>
      <tr>
        <td id="L2888" class="blob-num js-line-number" data-line-number="2888"></td>
        <td id="LC2888" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">$pubTable</span>.<span class="pl-c1">before</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>&lt;div id=&quot;<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> bibElemId <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>pubchart&quot; class=&quot;bibchart&quot;&gt;&lt;/div&gt;<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2889" class="blob-num js-line-number" data-line-number="2889"></td>
        <td id="LC2889" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2890" class="blob-num js-line-number" data-line-number="2890"></td>
        <td id="LC2890" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> $bibSrc;</td>
      </tr>
      <tr>
        <td id="L2891" class="blob-num js-line-number" data-line-number="2891"></td>
        <td id="LC2891" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span>(<span class="pl-smi">bibsrc</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>/<span class="pl-pds">&#39;</span></span>) <span class="pl-k">===</span> <span class="pl-k">-</span><span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L2892" class="blob-num js-line-number" data-line-number="2892"></td>
        <td id="LC2892" class="blob-code blob-code-inner js-file-line">            $bibSrc <span class="pl-k">=</span> <span class="pl-en">$</span>(bibsrc);</td>
      </tr>
      <tr>
        <td id="L2893" class="blob-num js-line-number" data-line-number="2893"></td>
        <td id="LC2893" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2894" class="blob-num js-line-number" data-line-number="2894"></td>
        <td id="LC2894" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ($bibSrc <span class="pl-k">&amp;&amp;</span> <span class="pl-smi">$bibSrc</span>.<span class="pl-c1">length</span>) { <span class="pl-c"><span class="pl-c">//</span> we found an element, use its HTML as bibtex</span></td>
      </tr>
      <tr>
        <td id="L2895" class="blob-num js-line-number" data-line-number="2895"></td>
        <td id="LC2895" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">new</span> <span class="pl-en">Bib2HTML</span>(<span class="pl-smi">$bibSrc</span>.<span class="pl-en">html</span>(), $pubTable, options);</td>
      </tr>
      <tr>
        <td id="L2896" class="blob-num js-line-number" data-line-number="2896"></td>
        <td id="LC2896" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">$bibSrc</span>.<span class="pl-en">hide</span>();</td>
      </tr>
      <tr>
        <td id="L2897" class="blob-num js-line-number" data-line-number="2897"></td>
        <td id="LC2897" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> { <span class="pl-c"><span class="pl-c">//</span> otherwise we assume it is a URL</span></td>
      </tr>
      <tr>
        <td id="L2898" class="blob-num js-line-number" data-line-number="2898"></td>
        <td id="LC2898" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> <span class="pl-en">callbackHandler</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">data</span>) {</td>
      </tr>
      <tr>
        <td id="L2899" class="blob-num js-line-number" data-line-number="2899"></td>
        <td id="LC2899" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">new</span> <span class="pl-en">Bib2HTML</span>(data, $pubTable, options);</td>
      </tr>
      <tr>
        <td id="L2900" class="blob-num js-line-number" data-line-number="2900"></td>
        <td id="LC2900" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L2901" class="blob-num js-line-number" data-line-number="2901"></td>
        <td id="LC2901" class="blob-code blob-code-inner js-file-line">            <span class="pl-smi">$</span>.<span class="pl-c1">get</span>(bibsrc, callbackHandler, <span class="pl-s"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2902" class="blob-num js-line-number" data-line-number="2902"></td>
        <td id="LC2902" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2903" class="blob-num js-line-number" data-line-number="2903"></td>
        <td id="LC2903" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L2904" class="blob-num js-line-number" data-line-number="2904"></td>
        <td id="LC2904" class="blob-code blob-code-inner js-file-line">})(jQuery);</td>
      </tr>
</table>

  <div class="BlobToolbar position-absolute js-file-line-actions dropdown js-menu-container js-select-menu d-none" aria-hidden="true">
    <button class="btn-octicon ml-0 px-2 p-0 bg-white border border-gray-dark rounded-1 dropdown-toggle js-menu-target" id="js-file-line-action-button" type="button" aria-expanded="false" aria-haspopup="true" aria-label="Inline file action toolbar" aria-controls="inline-file-actions">
      <svg aria-hidden="true" class="octicon" height="16" version="1.1" viewBox="0 0 13 4" width="14">
        <g stroke="none" stroke-width="1" fill-rule="evenodd">
            <g transform="translate(-1.000000, -6.000000)">
                <path d="M2.5,9.5 C1.67157288,9.5 1,8.82842712 1,8 C1,7.17157288 1.67157288,6.5 2.5,6.5 C3.32842712,6.5 4,7.17157288 4,8 C4,8.82842712 3.32842712,9.5 2.5,9.5 Z M7.5,9.5 C6.67157288,9.5 6,8.82842712 6,8 C6,7.17157288 6.67157288,6.5 7.5,6.5 C8.32842712,6.5 9,7.17157288 9,8 C9,8.82842712 8.32842712,9.5 7.5,9.5 Z M12.5,9.5 C11.6715729,9.5 11,8.82842712 11,8 C11,7.17157288 11.6715729,6.5 12.5,6.5 C13.3284271,6.5 14,7.17157288 14,8 C14,8.82842712 13.3284271,9.5 12.5,9.5 Z"></path>
            </g>
        </g>
      </svg>
    </button>
    <div class="dropdown-menu-content js-menu-content" id="inline-file-actions">
      <ul class="BlobToolbar-dropdown dropdown-menu dropdown-menu-se mt-2">
        <li><a class="js-zeroclipboard dropdown-item" style="cursor:pointer;" id="js-copy-lines" data-original-text="Copy lines">Copy lines</a></li>
        <li><a class="js-zeroclipboard dropdown-item" id= "js-copy-permalink" style="cursor:pointer;" data-original-text="Copy permalink">Copy permalink</a></li>
        <li><a href="/vkaravir/bib-publication-list/blame/17d3122649f377fd549effc02f17ab7417bc6135/build/bib-list.js" class="dropdown-item js-update-url-with-hash" id="js-view-git-blame">View git blame</a></li>
          <li><a href="/vkaravir/bib-publication-list/issues/new" class="dropdown-item" id="js-new-issue">Open new issue</a></li>
      </ul>
    </div>
  </div>

  </div>

  </div>

  <button type="button" data-facebox="#jump-to-line" data-facebox-class="linejump" data-hotkey="l" class="d-none">Jump to Line</button>
  <div id="jump-to-line" style="display:none">
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="" class="js-jump-to-line-form" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
      <input class="form-control linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" aria-label="Jump to line" autofocus>
      <button type="submit" class="btn">Go</button>
</form>  </div>

  </div>
  <div class="modal-backdrop js-touch-events"></div>
</div>

    </div>
  </div>

  </div>

      
<div class="footer container-lg px-3" role="contentinfo">
  <div class="position-relative d-flex flex-justify-between py-6 mt-6 f6 text-gray border-top border-gray-light ">
    <ul class="list-style-none d-flex flex-wrap ">
      <li class="mr-3">&copy; 2017 <span title="0.26411s from unicorn-2291568960-pv8rb">GitHub</span>, Inc.</li>
        <li class="mr-3"><a href="https://github.com/site/terms" data-ga-click="Footer, go to terms, text:terms">Terms</a></li>
        <li class="mr-3"><a href="https://github.com/site/privacy" data-ga-click="Footer, go to privacy, text:privacy">Privacy</a></li>
        <li class="mr-3"><a href="https://github.com/security" data-ga-click="Footer, go to security, text:security">Security</a></li>
        <li class="mr-3"><a href="https://status.github.com/" data-ga-click="Footer, go to status, text:status">Status</a></li>
        <li><a href="https://help.github.com" data-ga-click="Footer, go to help, text:help">Help</a></li>
    </ul>

    <a href="https://github.com" aria-label="Homepage" class="footer-octicon" title="GitHub">
      <svg aria-hidden="true" class="octicon octicon-mark-github" height="24" version="1.1" viewBox="0 0 16 16" width="24"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>
</a>
    <ul class="list-style-none d-flex flex-wrap ">
        <li class="mr-3"><a href="https://github.com/contact" data-ga-click="Footer, go to contact, text:contact">Contact GitHub</a></li>
      <li class="mr-3"><a href="https://developer.github.com" data-ga-click="Footer, go to api, text:api">API</a></li>
      <li class="mr-3"><a href="https://training.github.com" data-ga-click="Footer, go to training, text:training">Training</a></li>
      <li class="mr-3"><a href="https://shop.github.com" data-ga-click="Footer, go to shop, text:shop">Shop</a></li>
        <li class="mr-3"><a href="https://github.com/blog" data-ga-click="Footer, go to blog, text:blog">Blog</a></li>
        <li><a href="https://github.com/about" data-ga-click="Footer, go to about, text:about">About</a></li>

    </ul>
  </div>
</div>



  <div id="ajax-error-message" class="ajax-error-message flash flash-error">
    <svg aria-hidden="true" class="octicon octicon-alert" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.865 1.52c-.18-.31-.51-.5-.87-.5s-.69.19-.87.5L.275 13.5c-.18.31-.18.69 0 1 .19.31.52.5.87.5h13.7c.36 0 .69-.19.86-.5.17-.31.18-.69.01-1L8.865 1.52zM8.995 13h-2v-2h2v2zm0-3h-2V6h2v4z"/></svg>
    <button type="button" class="flash-close js-flash-close js-ajax-error-dismiss" aria-label="Dismiss error">
      <svg aria-hidden="true" class="octicon octicon-x" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
    </button>
    You can't perform that action at this time.
  </div>


    
    <script crossorigin="anonymous" integrity="sha256-Sxs+Reu4luxVVaYLalcHLGmPG0uGt2qgtP4QZ/RAsfM=" src="https://assets-cdn.github.com/assets/frameworks-4b1b3e45ebb896ec5555a60b6a57072c698f1b4b86b76aa0b4fe1067f440b1f3.js"></script>
    
    <script async="async" crossorigin="anonymous" integrity="sha256-VwuLlgXAnUjpmdO+ThQ9FrjxCTXzOAUhDbv0jRB2hbA=" src="https://assets-cdn.github.com/assets/github-570b8b9605c09d48e999d3be4e143d16b8f10935f33805210dbbf48d107685b0.js"></script>
    
    
    
    
  <div class="js-stale-session-flash stale-session-flash flash flash-warn flash-banner d-none">
    <svg aria-hidden="true" class="octicon octicon-alert" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.865 1.52c-.18-.31-.51-.5-.87-.5s-.69.19-.87.5L.275 13.5c-.18.31-.18.69 0 1 .19.31.52.5.87.5h13.7c.36 0 .69-.19.86-.5.17-.31.18-.69.01-1L8.865 1.52zM8.995 13h-2v-2h2v2zm0-3h-2V6h2v4z"/></svg>
    <span class="signed-in-tab-flash">You signed in with another tab or window. <a href="">Reload</a> to refresh your session.</span>
    <span class="signed-out-tab-flash">You signed out in another tab or window. <a href="">Reload</a> to refresh your session.</span>
  </div>
  <div class="facebox" id="facebox" style="display:none;">
  <div class="facebox-popup">
    <div class="facebox-content" role="dialog" aria-labelledby="facebox-header" aria-describedby="facebox-description">
    </div>
    <button type="button" class="facebox-close js-facebox-close" aria-label="Close modal">
      <svg aria-hidden="true" class="octicon octicon-x" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
    </button>
  </div>
</div>


  </body>
</html>

